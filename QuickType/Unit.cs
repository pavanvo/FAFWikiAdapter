namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Unit
    {
        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public The2_Enum? The0 { get; set; }

        [JsonProperty("Air", NullValueHandling = NullValueHandling.Ignore)]
        public UnitAir Air { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public UnitAudio Audio { get; set; }

        [JsonProperty("BuildIconSortPriority", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildIconSortPriority { get; set; }

        [JsonProperty("Categories", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Categories { get; set; }

        [JsonProperty("ContrailEffects", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ContrailEffects { get; set; }

        [JsonProperty("Defense", NullValueHandling = NullValueHandling.Ignore)]
        public Defense Defense { get; set; }

        [JsonProperty("Description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("Display", NullValueHandling = NullValueHandling.Ignore)]
        public Display Display { get; set; }

        [JsonProperty("Economy", NullValueHandling = NullValueHandling.Ignore)]
        public Economy Economy { get; set; }

        [JsonProperty("Footprint", NullValueHandling = NullValueHandling.Ignore)]
        public UnitFootprint Footprint { get; set; }

        [JsonProperty("General", NullValueHandling = NullValueHandling.Ignore)]
        public General General { get; set; }

        [JsonProperty("Intel", NullValueHandling = NullValueHandling.Ignore)]
        public Intel Intel { get; set; }

        [JsonProperty("Interface", NullValueHandling = NullValueHandling.Ignore)]
        public Interface Interface { get; set; }

        [JsonProperty("LifeBarHeight", NullValueHandling = NullValueHandling.Ignore)]
        public string LifeBarHeight { get; set; }

        [JsonProperty("LifeBarOffset", NullValueHandling = NullValueHandling.Ignore)]
        public string LifeBarOffset { get; set; }

        [JsonProperty("LifeBarSize", NullValueHandling = NullValueHandling.Ignore)]
        public string LifeBarSize { get; set; }

        [JsonProperty("Physics", NullValueHandling = NullValueHandling.Ignore)]
        public Physics Physics { get; set; }

        [JsonProperty("SelectionSizeX", NullValueHandling = NullValueHandling.Ignore)]
        public string SelectionSizeX { get; set; }

        [JsonProperty("SelectionSizeZ", NullValueHandling = NullValueHandling.Ignore)]
        public string SelectionSizeZ { get; set; }

        [JsonProperty("SelectionThickness", NullValueHandling = NullValueHandling.Ignore)]
        public string SelectionThickness { get; set; }

        [JsonProperty("SizeSphere", NullValueHandling = NullValueHandling.Ignore)]
        public string SizeSphere { get; set; }

        [JsonProperty("SizeX", NullValueHandling = NullValueHandling.Ignore)]
        public string SizeX { get; set; }

        [JsonProperty("SizeY", NullValueHandling = NullValueHandling.Ignore)]
        public string SizeY { get; set; }

        [JsonProperty("SizeZ", NullValueHandling = NullValueHandling.Ignore)]
        public string SizeZ { get; set; }

        [JsonProperty("StrategicIconName", NullValueHandling = NullValueHandling.Ignore)]
        public string StrategicIconName { get; set; }

        [JsonProperty("StrategicIconSortPriority", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? StrategicIconSortPriority { get; set; }

        [JsonProperty("Transport", NullValueHandling = NullValueHandling.Ignore)]
        public Transport Transport { get; set; }

        [JsonProperty("Weapon", NullValueHandling = NullValueHandling.Ignore)]
        public Weapon Weapon { get; set; }

        [JsonProperty("Id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("BlueprintType", NullValueHandling = NullValueHandling.Ignore)]
        public BlueprintType? BlueprintType { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public UnitBuffs Buffs { get; set; }

        [JsonProperty("CollisionOffsetZ", NullValueHandling = NullValueHandling.Ignore)]
        public string CollisionOffsetZ { get; set; }

        [JsonProperty("Veteran", NullValueHandling = NullValueHandling.Ignore)]
        public Veteran Veteran { get; set; }

        [JsonProperty("Wreckage", NullValueHandling = NullValueHandling.Ignore)]
        public Wreckage Wreckage { get; set; }

        [JsonProperty("AI", NullValueHandling = NullValueHandling.Ignore)]
        public Ai Ai { get; set; }

        [JsonProperty("CollisionOffsetY", NullValueHandling = NullValueHandling.Ignore)]
        public string CollisionOffsetY { get; set; }

        [JsonProperty("SelectionCenterOffsetX", NullValueHandling = NullValueHandling.Ignore)]
        public string SelectionCenterOffsetX { get; set; }

        [JsonProperty("SelectionCenterOffsetZ", NullValueHandling = NullValueHandling.Ignore)]
        public string SelectionCenterOffsetZ { get; set; }

        [JsonProperty("CollisionOffsetX", NullValueHandling = NullValueHandling.Ignore)]
        public string CollisionOffsetX { get; set; }

        [JsonProperty("AverageDensity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AverageDensity { get; set; }

        [JsonProperty("UseOOBTestZoom", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? UseOobTestZoom { get; set; }

        [JsonProperty("VeteranMassMult", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? VeteranMassMult { get; set; }

        [JsonProperty("Adjacency", NullValueHandling = NullValueHandling.Ignore)]
        public string Adjacency { get; set; }

        [JsonProperty("LifeBarRender", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LifeBarRender { get; set; }

        [JsonProperty("SelectionYOffset", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SelectionYOffset { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("Enhancements", NullValueHandling = NullValueHandling.Ignore)]
        public Enhancements Enhancements { get; set; }

        [JsonProperty("VeteranHealingMult", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> VeteranHealingMult { get; set; }

        [JsonProperty("SelectionCenterOffsetY", NullValueHandling = NullValueHandling.Ignore)]
        public string SelectionCenterOffsetY { get; set; }

        [JsonProperty("EnhancementPresets", NullValueHandling = NullValueHandling.Ignore)]
        public EnhancementPresets EnhancementPresets { get; set; }

        [JsonProperty("StrategicIconSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? StrategicIconSize { get; set; }

        [JsonProperty("SelectionMeshScaleX", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? SelectionMeshScaleX { get; set; }

        [JsonProperty("SelectionMeshScaleZ", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? SelectionMeshScaleZ { get; set; }

        [JsonProperty("SelectionMeshUseTopAmount", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? SelectionMeshUseTopAmount { get; set; }

        [JsonProperty("UpgradeDesc", NullValueHandling = NullValueHandling.Ignore)]
        public string UpgradeDesc { get; set; }

        [JsonProperty("WatchBone", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WatchBone { get; set; }

        [JsonProperty("SplitDamage", NullValueHandling = NullValueHandling.Ignore)]
        public SplitDamage SplitDamage { get; set; }

        [JsonProperty("Abilities", NullValueHandling = NullValueHandling.Ignore)]
        public Abilities Abilities { get; set; }

        [JsonProperty("BuffFields", NullValueHandling = NullValueHandling.Ignore)]
        public BuffFields BuffFields { get; set; }

        [JsonProperty("ResolvePath", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ResolvePath { get; set; }

        [JsonProperty("Lifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Lifetime { get; set; }

        [JsonProperty("MaxMoveRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxMoveRange { get; set; }

        [JsonProperty("2", NullValueHandling = NullValueHandling.Ignore)]
        public The2_Enum? The2 { get; set; }

        [JsonProperty("SizeXContracted", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? SizeXContracted { get; set; }

        [JsonProperty("SizeYContracted", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? SizeYContracted { get; set; }

        [JsonProperty("SizeZContracted", NullValueHandling = NullValueHandling.Ignore)]
        public string SizeZContracted { get; set; }

        [JsonProperty("SpecialAbilities", NullValueHandling = NullValueHandling.Ignore)]
        public SpecialAbilities SpecialAbilities { get; set; }

        [JsonProperty("Rotators", NullValueHandling = NullValueHandling.Ignore)]
        public Rotators Rotators { get; set; }

        [JsonProperty("3", NullValueHandling = NullValueHandling.Ignore)]
        public string The3 { get; set; }

        [JsonProperty("4", NullValueHandling = NullValueHandling.Ignore)]
        public string The4 { get; set; }

        [JsonProperty("5", NullValueHandling = NullValueHandling.Ignore)]
        public string The5 { get; set; }

        [JsonProperty("6", NullValueHandling = NullValueHandling.Ignore)]
        public string The6 { get; set; }

        [JsonProperty("7", NullValueHandling = NullValueHandling.Ignore)]
        public string The7 { get; set; }

        [JsonProperty("8", NullValueHandling = NullValueHandling.Ignore)]
        public string The8 { get; set; }

        [JsonProperty("9", NullValueHandling = NullValueHandling.Ignore)]
        public string The9 { get; set; }

        [JsonProperty("10", NullValueHandling = NullValueHandling.Ignore)]
        public string The10 { get; set; }

        [JsonProperty("11", NullValueHandling = NullValueHandling.Ignore)]
        public string The11 { get; set; }

        [JsonProperty("12", NullValueHandling = NullValueHandling.Ignore)]
        public string The12 { get; set; }

        [JsonProperty("13", NullValueHandling = NullValueHandling.Ignore)]
        public string The13 { get; set; }

        [JsonProperty("SelectionSizey", NullValueHandling = NullValueHandling.Ignore)]
        public string SelectionSizey { get; set; }
    }

    public partial class Abilities
    {
        [JsonProperty("TargetLocation", NullValueHandling = NullValueHandling.Ignore)]
        public TargetLocation TargetLocation { get; set; }

        [JsonProperty("ArtillerySupport", NullValueHandling = NullValueHandling.Ignore)]
        public ArtillerySupport ArtillerySupport { get; set; }

        [JsonProperty("Capacitor", NullValueHandling = NullValueHandling.Ignore)]
        public Capacitor Capacitor { get; set; }

        [JsonProperty("Anchor", NullValueHandling = NullValueHandling.Ignore)]
        public Anchor Anchor { get; set; }

        [JsonProperty("BombardMode", NullValueHandling = NullValueHandling.Ignore)]
        public Anchor BombardMode { get; set; }
    }

    public partial class Anchor
    {
        [JsonProperty("Buff", NullValueHandling = NullValueHandling.Ignore)]
        public string Buff { get; set; }
    }

    public partial class ArtillerySupport
    {
        [JsonProperty("LockoutDuration", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? LockoutDuration { get; set; }

        [JsonProperty("MaxSimultaniousArtillerySupport", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxSimultaniousArtillerySupport { get; set; }

        [JsonProperty("Range", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Range { get; set; }

        [JsonProperty("SupportGroundTargetting", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SupportGroundTargetting { get; set; }

        [JsonProperty("TargetCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Target? TargetCategory { get; set; }
    }

    public partial class Capacitor
    {
        [JsonProperty("Active", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Buffs { get; set; }

        [JsonProperty("Duration", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Duration { get; set; }

        [JsonProperty("ChargeEnergyCost", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ChargeEnergyCost { get; set; }

        [JsonProperty("ChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ChargeTime { get; set; }

        [JsonProperty("bitmapId", NullValueHandling = NullValueHandling.Ignore)]
        public string BitmapId { get; set; }

        [JsonProperty("helpText", NullValueHandling = NullValueHandling.Ignore)]
        public string HelpText { get; set; }
    }

    public partial class TargetLocation
    {
        [JsonProperty("bitmapId", NullValueHandling = NullValueHandling.Ignore)]
        public string BitmapId { get; set; }

        [JsonProperty("helpText", NullValueHandling = NullValueHandling.Ignore)]
        public string HelpText { get; set; }

        [JsonProperty("Active", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; }
    }

    public partial class Ai
    {
        [JsonProperty("GuardReturnRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? GuardReturnRadius { get; set; }

        [JsonProperty("GuardScanRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string GuardScanRadius { get; set; }

        [JsonProperty("TargetBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetBones { get; set; }

        [JsonProperty("BeaconName", NullValueHandling = NullValueHandling.Ignore)]
        public string BeaconName { get; set; }

        [JsonProperty("RefuelingMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RefuelingMultiplier { get; set; }

        [JsonProperty("RefuelingRepairAmount", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RefuelingRepairAmount { get; set; }

        [JsonProperty("RepairConsumeEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RepairConsumeEnergy { get; set; }

        [JsonProperty("RepairConsumeMass", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RepairConsumeMass { get; set; }

        [JsonProperty("InitialAutoMode", NullValueHandling = NullValueHandling.Ignore)]
        public bool? InitialAutoMode { get; set; }

        [JsonProperty("ShowAssistRangeOnSelect", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ShowAssistRangeOnSelect { get; set; }

        [JsonProperty("StagingPlatformScanRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? StagingPlatformScanRadius { get; set; }

        [JsonProperty("GuardRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? GuardRadius { get; set; }

        [JsonProperty("AddTargetBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> AddTargetBones { get; set; }

        [JsonProperty("AttackAngle", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AttackAngle { get; set; }

        [JsonProperty("NeedUnpack", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedUnpack { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("BombardModeCheckRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BombardModeCheckRadius { get; set; }

        [JsonProperty("BombardModeCheckUnits", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BombardModeCheckUnits { get; set; }

        [JsonProperty("BombardModeCheckWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string BombardModeCheckWeapon { get; set; }
    }

    public partial class UnitAir
    {
        [JsonProperty("AutoLandTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AutoLandTime { get; set; }

        [JsonProperty("BankFactor", NullValueHandling = NullValueHandling.Ignore)]
        public string BankFactor { get; set; }

        [JsonProperty("BankForward", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BankForward { get; set; }

        [JsonProperty("BreakOffDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string BreakOffDistance { get; set; }

        [JsonProperty("BreakOffTrigger", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BreakOffTrigger { get; set; }

        [JsonProperty("CanFly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CanFly { get; set; }

        [JsonProperty("KLift", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? KLift { get; set; }

        [JsonProperty("KLiftDamping", NullValueHandling = NullValueHandling.Ignore)]
        public string KLiftDamping { get; set; }

        [JsonProperty("KMove", NullValueHandling = NullValueHandling.Ignore)]
        public string KMove { get; set; }

        [JsonProperty("KMoveDamping", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? KMoveDamping { get; set; }

        [JsonProperty("KRoll", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? KRoll { get; set; }

        [JsonProperty("KRollDamping", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? KRollDamping { get; set; }

        [JsonProperty("KTurn", NullValueHandling = NullValueHandling.Ignore)]
        public string KTurn { get; set; }

        [JsonProperty("KTurnDamping", NullValueHandling = NullValueHandling.Ignore)]
        public string KTurnDamping { get; set; }

        [JsonProperty("LiftFactor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? LiftFactor { get; set; }

        [JsonProperty("MaxAirspeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxAirspeed { get; set; }

        [JsonProperty("MinAirspeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinAirspeed { get; set; }

        [JsonProperty("TurnSpeed", NullValueHandling = NullValueHandling.Ignore)]
        public string TurnSpeed { get; set; }

        [JsonProperty("Winged", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Winged { get; set; }

        [JsonProperty("BreakOffIfNearNewTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BreakOffIfNearNewTarget { get; set; }

        [JsonProperty("CombatTurnSpeed", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? CombatTurnSpeed { get; set; }

        [JsonProperty("EngageDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EngageDistance { get; set; }

        [JsonProperty("PredictAheadForBombDrop", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? PredictAheadForBombDrop { get; set; }

        [JsonProperty("StartTurnDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? StartTurnDistance { get; set; }

        [JsonProperty("TightTurnMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string TightTurnMultiplier { get; set; }

        [JsonProperty("RandomBreakOffDistanceMult", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RandomBreakOffDistanceMult { get; set; }

        [JsonProperty("CirclingDirChange", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CirclingDirChange { get; set; }

        [JsonProperty("CirclingElevationChangeRatio", NullValueHandling = NullValueHandling.Ignore)]
        public string CirclingElevationChangeRatio { get; set; }

        [JsonProperty("CirclingFlightChangeFrequency", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CirclingFlightChangeFrequency { get; set; }

        [JsonProperty("CirclingRadiusChangeMaxRatio", NullValueHandling = NullValueHandling.Ignore)]
        public string CirclingRadiusChangeMaxRatio { get; set; }

        [JsonProperty("CirclingRadiusChangeMinRatio", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? CirclingRadiusChangeMinRatio { get; set; }

        [JsonProperty("CirclingTurnMult", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CirclingTurnMult { get; set; }

        [JsonProperty("TransportHoverHeight", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TransportHoverHeight { get; set; }

        [JsonProperty("CirclingDirChangeFrequencySec", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CirclingDirChangeFrequencySec { get; set; }

        [JsonProperty("CirclingRadiusVsAirMult", NullValueHandling = NullValueHandling.Ignore)]
        public string CirclingRadiusVsAirMult { get; set; }

        [JsonProperty("HoverOverAttack", NullValueHandling = NullValueHandling.Ignore)]
        public bool? HoverOverAttack { get; set; }
    }

    public partial class UnitAudio
    {
        [JsonProperty("AirUnitWaterImpact", NullValueHandling = NullValueHandling.Ignore)]
        public Activate AirUnitWaterImpact { get; set; }

        [JsonProperty("AmbientMove", NullValueHandling = NullValueHandling.Ignore)]
        public Activate AmbientMove { get; set; }

        [JsonProperty("Destroyed", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Destroyed { get; set; }

        [JsonProperty("Killed", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Killed { get; set; }

        [JsonProperty("Landing", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Landing { get; set; }

        [JsonProperty("StartMove", NullValueHandling = NullValueHandling.Ignore)]
        public Activate StartMove { get; set; }

        [JsonProperty("StopMove", NullValueHandling = NullValueHandling.Ignore)]
        public Activate StopMove { get; set; }

        [JsonProperty("Thruster", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Thruster { get; set; }

        [JsonProperty("UISelection", NullValueHandling = NullValueHandling.Ignore)]
        public Activate UiSelection { get; set; }

        [JsonProperty("Refueling", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Refueling { get; set; }

        [JsonProperty("DeathExplosion", NullValueHandling = NullValueHandling.Ignore)]
        public Activate DeathExplosion { get; set; }

        [JsonProperty("Load", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Load { get; set; }

        [JsonProperty("Unload", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Unload { get; set; }

        [JsonProperty("Construct", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Construct { get; set; }

        [JsonProperty("ConstructLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate ConstructLoop { get; set; }

        [JsonProperty("DoneBeingBuilt", NullValueHandling = NullValueHandling.Ignore)]
        public Activate DoneBeingBuilt { get; set; }

        [JsonProperty("ActiveLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate ActiveLoop { get; set; }

        [JsonProperty("Close", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Close { get; set; }

        [JsonProperty("Open", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Open { get; set; }

        [JsonProperty("Activate", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Activate { get; set; }

        [JsonProperty("NuclearLaunchDetected", NullValueHandling = NullValueHandling.Ignore)]
        public NuclearLaunchDetected NuclearLaunchDetected { get; set; }

        [JsonProperty("ShieldOff", NullValueHandling = NullValueHandling.Ignore)]
        public Activate ShieldOff { get; set; }

        [JsonProperty("ShieldOn", NullValueHandling = NullValueHandling.Ignore)]
        public Activate ShieldOn { get; set; }

        [JsonProperty("CaptureLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate CaptureLoop { get; set; }

        [JsonProperty("CommanderArrival", NullValueHandling = NullValueHandling.Ignore)]
        public Activate CommanderArrival { get; set; }

        [JsonProperty("EnhanceEnd", NullValueHandling = NullValueHandling.Ignore)]
        public Activate EnhanceEnd { get; set; }

        [JsonProperty("EnhanceFail", NullValueHandling = NullValueHandling.Ignore)]
        public Activate EnhanceFail { get; set; }

        [JsonProperty("EnhanceLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate EnhanceLoop { get; set; }

        [JsonProperty("EnhanceStart", NullValueHandling = NullValueHandling.Ignore)]
        public Activate EnhanceStart { get; set; }

        [JsonProperty("FootFallGeneric", NullValueHandling = NullValueHandling.Ignore)]
        public Activate FootFallGeneric { get; set; }

        [JsonProperty("FootFallGenericSeabed", NullValueHandling = NullValueHandling.Ignore)]
        public Activate FootFallGenericSeabed { get; set; }

        [JsonProperty("ReclaimLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate ReclaimLoop { get; set; }

        [JsonProperty("StartCapture", NullValueHandling = NullValueHandling.Ignore)]
        public Activate StartCapture { get; set; }

        [JsonProperty("StartReclaim", NullValueHandling = NullValueHandling.Ignore)]
        public Activate StartReclaim { get; set; }

        [JsonProperty("TeleportChargingAtDestination", NullValueHandling = NullValueHandling.Ignore)]
        public Activate TeleportChargingAtDestination { get; set; }

        [JsonProperty("TeleportChargingAtUnit", NullValueHandling = NullValueHandling.Ignore)]
        public Activate TeleportChargingAtUnit { get; set; }

        [JsonProperty("TeleportIn", NullValueHandling = NullValueHandling.Ignore)]
        public Activate TeleportIn { get; set; }

        [JsonProperty("HoverKilledOnWater", NullValueHandling = NullValueHandling.Ignore)]
        public Activate HoverKilledOnWater { get; set; }

        [JsonProperty("Pack", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Pack { get; set; }

        [JsonProperty("Unpack", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Unpack { get; set; }

        [JsonProperty("AmbientMoveSub", NullValueHandling = NullValueHandling.Ignore)]
        public Activate AmbientMoveSub { get; set; }

        [JsonProperty("StartMoveSub", NullValueHandling = NullValueHandling.Ignore)]
        public Activate StartMoveSub { get; set; }

        [JsonProperty("StopMoveSub", NullValueHandling = NullValueHandling.Ignore)]
        public Activate StopMoveSub { get; set; }

        [JsonProperty("SubmergeStart", NullValueHandling = NullValueHandling.Ignore)]
        public Activate SubmergeStart { get; set; }

        [JsonProperty("SurfaceStart", NullValueHandling = NullValueHandling.Ignore)]
        public Activate SurfaceStart { get; set; }

        [JsonProperty("AmbientMoveLand", NullValueHandling = NullValueHandling.Ignore)]
        public Activate AmbientMoveLand { get; set; }

        [JsonProperty("AmbientMoveWater", NullValueHandling = NullValueHandling.Ignore)]
        public Activate AmbientMoveWater { get; set; }

        [JsonProperty("EnterWater", NullValueHandling = NullValueHandling.Ignore)]
        public Activate EnterWater { get; set; }

        [JsonProperty("TransitionWater", NullValueHandling = NullValueHandling.Ignore)]
        public Activate TransitionWater { get; set; }

        [JsonProperty("ConstructStop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate ConstructStop { get; set; }

        [JsonProperty("TransitionLand", NullValueHandling = NullValueHandling.Ignore)]
        public Activate TransitionLand { get; set; }

        [JsonProperty("AmphibiousFloatingKilledOnLand", NullValueHandling = NullValueHandling.Ignore)]
        public Activate AmphibiousFloatingKilledOnLand { get; set; }

        [JsonProperty("StartMoveLand", NullValueHandling = NullValueHandling.Ignore)]
        public Activate StartMoveLand { get; set; }

        [JsonProperty("StartMoveWater", NullValueHandling = NullValueHandling.Ignore)]
        public Activate StartMoveWater { get; set; }

        [JsonProperty("StopMoveLand", NullValueHandling = NullValueHandling.Ignore)]
        public Activate StopMoveLand { get; set; }

        [JsonProperty("StopMoveWater", NullValueHandling = NullValueHandling.Ignore)]
        public Activate StopMoveWater { get; set; }

        [JsonProperty("TakeOff", NullValueHandling = NullValueHandling.Ignore)]
        public Activate TakeOff { get; set; }

        [JsonProperty("LaunchSat", NullValueHandling = NullValueHandling.Ignore)]
        public Activate LaunchSat { get; set; }

        [JsonProperty("MoveArms", NullValueHandling = NullValueHandling.Ignore)]
        public Activate MoveArms { get; set; }

        [JsonProperty("Deploy", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Deploy { get; set; }

        [JsonProperty("EggOpen", NullValueHandling = NullValueHandling.Ignore)]
        public Activate EggOpen { get; set; }

        [JsonProperty("EggSink", NullValueHandling = NullValueHandling.Ignore)]
        public Activate EggSink { get; set; }

        [JsonProperty("NukeCharge", NullValueHandling = NullValueHandling.Ignore)]
        public Activate NukeCharge { get; set; }

        [JsonProperty("TeleportOut", NullValueHandling = NullValueHandling.Ignore)]
        public Activate TeleportOut { get; set; }

        [JsonProperty("Spawn", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Spawn { get; set; }

        [JsonProperty("CoverLaunch", NullValueHandling = NullValueHandling.Ignore)]
        public Activate CoverLaunch { get; set; }

        [JsonProperty("SupportingArtilleryPing", NullValueHandling = NullValueHandling.Ignore)]
        public Activate SupportingArtilleryPing { get; set; }

        [JsonProperty("FlaresFired", NullValueHandling = NullValueHandling.Ignore)]
        public Activate FlaresFired { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("2", NullValueHandling = NullValueHandling.Ignore)]
        public string The2 { get; set; }

        [JsonProperty("3", NullValueHandling = NullValueHandling.Ignore)]
        public string The3 { get; set; }

        [JsonProperty("IntelOverchargeActivated", NullValueHandling = NullValueHandling.Ignore)]
        public Activate IntelOverchargeActivated { get; set; }

        [JsonProperty("IntelOverchargeActiveLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate IntelOverchargeActiveLoop { get; set; }

        [JsonProperty("IntelOverchargeChargingLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate IntelOverchargeChargingLoop { get; set; }

        [JsonProperty("4", NullValueHandling = NullValueHandling.Ignore)]
        public string The4 { get; set; }

        [JsonProperty("5", NullValueHandling = NullValueHandling.Ignore)]
        public string The5 { get; set; }

        [JsonProperty("6", NullValueHandling = NullValueHandling.Ignore)]
        public string The6 { get; set; }

        [JsonProperty("7", NullValueHandling = NullValueHandling.Ignore)]
        public string The7 { get; set; }

        [JsonProperty("8", NullValueHandling = NullValueHandling.Ignore)]
        public string The8 { get; set; }

        [JsonProperty("9", NullValueHandling = NullValueHandling.Ignore)]
        public string The9 { get; set; }

        [JsonProperty("10", NullValueHandling = NullValueHandling.Ignore)]
        public string The10 { get; set; }

        [JsonProperty("11", NullValueHandling = NullValueHandling.Ignore)]
        public string The11 { get; set; }

        [JsonProperty("12", NullValueHandling = NullValueHandling.Ignore)]
        public string The12 { get; set; }

        [JsonProperty("13", NullValueHandling = NullValueHandling.Ignore)]
        public string The13 { get; set; }

        [JsonProperty("14", NullValueHandling = NullValueHandling.Ignore)]
        public string The14 { get; set; }

        [JsonProperty("CapacitorInUseLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate CapacitorInUseLoop { get; set; }

        [JsonProperty("CapacitorStopBeingUsed", NullValueHandling = NullValueHandling.Ignore)]
        public Activate CapacitorStopBeingUsed { get; set; }

        [JsonProperty("ConstructSparkle", NullValueHandling = NullValueHandling.Ignore)]
        public Activate ConstructSparkle { get; set; }

        [JsonProperty("ReclaimSparkle", NullValueHandling = NullValueHandling.Ignore)]
        public Activate ReclaimSparkle { get; set; }

        [JsonProperty("UISelectionMultiple", NullValueHandling = NullValueHandling.Ignore)]
        public UiSelectionMultiple UiSelectionMultiple { get; set; }

        [JsonProperty("UICommandAcknowledgeMultiple", NullValueHandling = NullValueHandling.Ignore)]
        public UiCommandAcknowledgeMultiple UiCommandAcknowledgeMultiple { get; set; }

        [JsonProperty("AmbientIdle", NullValueHandling = NullValueHandling.Ignore)]
        public Activate AmbientIdle { get; set; }
    }

    public partial class Activate
    {
        [JsonProperty("Bank", NullValueHandling = NullValueHandling.Ignore)]
        public string Bank { get; set; }

        [JsonProperty("Cue", NullValueHandling = NullValueHandling.Ignore)]
        public string Cue { get; set; }

        [JsonProperty("LodCutoff", NullValueHandling = NullValueHandling.Ignore)]
        public LodCutoff? LodCutoff { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }
    }

    public partial class NuclearLaunchDetected
    {
        [JsonProperty("Bank", NullValueHandling = NullValueHandling.Ignore)]
        public Bank? Bank { get; set; }

        [JsonProperty("Cue", NullValueHandling = NullValueHandling.Ignore)]
        public Cue? Cue { get; set; }
    }

    public partial class UiCommandAcknowledgeMultiple
    {
        [JsonProperty("Property210", NullValueHandling = NullValueHandling.Ignore)]
        public UiCommandAcknowledgeMultipleProperty210 Property210 { get; set; }

        [JsonProperty("Property227", NullValueHandling = NullValueHandling.Ignore)]
        public UiCommandAcknowledgeMultipleProperty227 Property227 { get; set; }

        [JsonProperty("Property244", NullValueHandling = NullValueHandling.Ignore)]
        public UiCommandAcknowledgeMultipleProperty244 Property244 { get; set; }

        [JsonProperty("Property261", NullValueHandling = NullValueHandling.Ignore)]
        public Property261 Property261 { get; set; }
    }

    public partial class UiCommandAcknowledgeMultipleProperty210
    {
        [JsonProperty("Property211", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property211 { get; set; }

        [JsonProperty("Property216", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property216 { get; set; }

        [JsonProperty("Property221", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property221 { get; set; }
    }

    public partial class UiCommandAcknowledgeMultipleProperty227
    {
        [JsonProperty("Property228", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property228 { get; set; }

        [JsonProperty("Property233", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property233 { get; set; }

        [JsonProperty("Property238", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property238 { get; set; }
    }

    public partial class UiCommandAcknowledgeMultipleProperty244
    {
        [JsonProperty("Property245", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property245 { get; set; }

        [JsonProperty("Property250", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property250 { get; set; }

        [JsonProperty("Property255", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property255 { get; set; }
    }

    public partial class Property261
    {
        [JsonProperty("Property262", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property262 { get; set; }

        [JsonProperty("Property267", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property267 { get; set; }

        [JsonProperty("Property272", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property272 { get; set; }

        [JsonProperty("Property277", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property277 { get; set; }
    }

    public partial class UiSelectionMultiple
    {
        [JsonProperty("Property135", NullValueHandling = NullValueHandling.Ignore)]
        public Property135 Property135 { get; set; }

        [JsonProperty("Property147", NullValueHandling = NullValueHandling.Ignore)]
        public Property147 Property147 { get; set; }

        [JsonProperty("Property154", NullValueHandling = NullValueHandling.Ignore)]
        public Property154 Property154 { get; set; }

        [JsonProperty("Property181", NullValueHandling = NullValueHandling.Ignore)]
        public UiSelectionMultipleProperty181 Property181 { get; set; }
    }

    public partial class Property135
    {
        [JsonProperty("Property136", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property136 { get; set; }

        [JsonProperty("Property141", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property141 { get; set; }
    }

    public partial class Property147
    {
        [JsonProperty("Property148", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property148 { get; set; }
    }

    public partial class Property154
    {
        [JsonProperty("Property155", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property155 { get; set; }

        [JsonProperty("Property160", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property160 { get; set; }

        [JsonProperty("Property165", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property165 { get; set; }

        [JsonProperty("Property170", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property170 { get; set; }

        [JsonProperty("Property175", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property175 { get; set; }
    }

    public partial class UiSelectionMultipleProperty181
    {
        [JsonProperty("Property182", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property182 { get; set; }

        [JsonProperty("Property187", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property187 { get; set; }

        [JsonProperty("Property192", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property192 { get; set; }

        [JsonProperty("Property197", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property197 { get; set; }

        [JsonProperty("Property202", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Property202 { get; set; }
    }

    public partial class BuffFields
    {
        [JsonProperty("RegenField", NullValueHandling = NullValueHandling.Ignore)]
        public string RegenField { get; set; }

        [JsonProperty("AdvancedRegenField", NullValueHandling = NullValueHandling.Ignore)]
        public string AdvancedRegenField { get; set; }
    }

    public partial class UnitBuffs
    {
        [JsonProperty("Regen", NullValueHandling = NullValueHandling.Ignore)]
        public Veteran Regen { get; set; }

        [JsonProperty("Stun", NullValueHandling = NullValueHandling.Ignore)]
        public Stun Stun { get; set; }
    }

    public partial class Veteran
    {
        [JsonProperty("Level1", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Level1 { get; set; }

        [JsonProperty("Level2", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Level2 { get; set; }

        [JsonProperty("Level3", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Level3 { get; set; }

        [JsonProperty("Level4", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Level4 { get; set; }

        [JsonProperty("Level5", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Level5 { get; set; }
    }

    public partial class Stun
    {
        [JsonProperty("Add", NullValueHandling = NullValueHandling.Ignore)]
        public StunAdd Add { get; set; }

        [JsonProperty("AppliedToTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AppliedToTarget { get; set; }

        [JsonProperty("BuffType", NullValueHandling = NullValueHandling.Ignore)]
        public BuffType? BuffType { get; set; }

        [JsonProperty("Duration", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Duration { get; set; }

        [JsonProperty("Radius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Radius { get; set; }

        [JsonProperty("TargetAllow", NullValueHandling = NullValueHandling.Ignore)]
        public Target? TargetAllow { get; set; }
    }

    public partial class StunAdd
    {
        [JsonProperty("OnDeath", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OnDeath { get; set; }

        [JsonProperty("OnImpact", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OnImpact { get; set; }
    }

    public partial class Defense
    {
        [JsonProperty("AirThreatLevel", NullValueHandling = NullValueHandling.Ignore)]
        public string AirThreatLevel { get; set; }

        [JsonProperty("ArmorType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? ArmorType { get; set; }

        [JsonProperty("EconomyThreatLevel", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? EconomyThreatLevel { get; set; }

        [JsonProperty("Health", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Health { get; set; }

        [JsonProperty("MaxHealth", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxHealth { get; set; }

        [JsonProperty("RegenRate", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RegenRate { get; set; }

        [JsonProperty("SubThreatLevel", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? SubThreatLevel { get; set; }

        [JsonProperty("SurfaceThreatLevel", NullValueHandling = NullValueHandling.Ignore)]
        public string SurfaceThreatLevel { get; set; }

        [JsonProperty("Shield", NullValueHandling = NullValueHandling.Ignore)]
        public Shield Shield { get; set; }

        [JsonProperty("ThreatLevel", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ThreatLevel { get; set; }

        [JsonProperty("AntiMissile", NullValueHandling = NullValueHandling.Ignore)]
        public AntiMissile AntiMissile { get; set; }

        [JsonProperty("AntiMissileFlares", NullValueHandling = NullValueHandling.Ignore)]
        public AntiMissileFlares AntiMissileFlares { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }
    }

    public partial class AntiMissile
    {
        [JsonProperty("AttachBone", NullValueHandling = NullValueHandling.Ignore)]
        public string AttachBone { get; set; }

        [JsonProperty("Radius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Radius { get; set; }

        [JsonProperty("RedirectRateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RedirectRateOfFire { get; set; }
    }

    public partial class AntiMissileFlares
    {
        [JsonProperty("BeSmart", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BeSmart { get; set; }

        [JsonProperty("Bones", NullValueHandling = NullValueHandling.Ignore)]
        public string Bones { get; set; }

        [JsonProperty("ProjectileBlueprint", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileBlueprint { get; set; }

        [JsonProperty("Radius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Radius { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("Speed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Speed { get; set; }

        [JsonProperty("Bone", NullValueHandling = NullValueHandling.Ignore)]
        public string Bone { get; set; }

        [JsonProperty("NumFlares", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NumFlares { get; set; }

        [JsonProperty("SalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SalvoDelay { get; set; }
    }

    public partial class Shield
    {
        [JsonProperty("ImpactEffects", NullValueHandling = NullValueHandling.Ignore)]
        public ImpactEffects? ImpactEffects { get; set; }

        [JsonProperty("ImpactMesh", NullValueHandling = NullValueHandling.Ignore)]
        public ImpactMesh? ImpactMesh { get; set; }

        [JsonProperty("Mesh", NullValueHandling = NullValueHandling.Ignore)]
        public string Mesh { get; set; }

        [JsonProperty("MeshZ", NullValueHandling = NullValueHandling.Ignore)]
        public MeshZ? MeshZ { get; set; }

        [JsonProperty("RegenAssistMult", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RegenAssistMult { get; set; }

        [JsonProperty("ShieldEnergyDrainRechargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldEnergyDrainRechargeTime { get; set; }

        [JsonProperty("ShieldMaxHealth", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldMaxHealth { get; set; }

        [JsonProperty("ShieldRechargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldRechargeTime { get; set; }

        [JsonProperty("ShieldRegenRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldRegenRate { get; set; }

        [JsonProperty("ShieldRegenStartTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldRegenStartTime { get; set; }

        [JsonProperty("ShieldSize", NullValueHandling = NullValueHandling.Ignore)]
        public string ShieldSize { get; set; }

        [JsonProperty("ShieldVerticalOffset", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldVerticalOffset { get; set; }

        [JsonProperty("OwnerShieldMesh", NullValueHandling = NullValueHandling.Ignore)]
        public string OwnerShieldMesh { get; set; }

        [JsonProperty("PersonalShield", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PersonalShield { get; set; }

        [JsonProperty("PersonalBubble", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PersonalBubble { get; set; }

        [JsonProperty("ShieldSpillOverDamageMod", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? ShieldSpillOverDamageMod { get; set; }

        [JsonProperty("TransportShield", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TransportShield { get; set; }

        [JsonProperty("BeamOriginBone", NullValueHandling = NullValueHandling.Ignore)]
        public string BeamOriginBone { get; set; }
    }

    public partial class Display
    {
        [JsonProperty("Abilities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Abilities { get; set; }

        [JsonProperty("LayerChangeEffects", NullValueHandling = NullValueHandling.Ignore)]
        public LayerChangeEffectsUnion? LayerChangeEffects { get; set; }

        [JsonProperty("Mesh", NullValueHandling = NullValueHandling.Ignore)]
        public Mesh Mesh { get; set; }

        [JsonProperty("MovementEffects", NullValueHandling = NullValueHandling.Ignore)]
        public MovementEffectsUnion? MovementEffects { get; set; }

        [JsonProperty("PlaceholderMeshName", NullValueHandling = NullValueHandling.Ignore)]
        public string PlaceholderMeshName { get; set; }

        [JsonProperty("SpawnRandomRotation", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SpawnRandomRotation { get; set; }

        [JsonProperty("UniformScale", NullValueHandling = NullValueHandling.Ignore)]
        public string UniformScale { get; set; }

        [JsonProperty("IdleEffects", NullValueHandling = NullValueHandling.Ignore)]
        public IdleEffectsUnion? IdleEffects { get; set; }

        [JsonProperty("AttackReticuleSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AttackReticuleSize { get; set; }

        [JsonProperty("AnimationDeath", NullValueHandling = NullValueHandling.Ignore)]
        public AnimationDeath AnimationDeath { get; set; }

        [JsonProperty("AnimationWalk", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationWalk { get; set; }

        [JsonProperty("AnimationWalkRate", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationWalkRate { get; set; }

        [JsonProperty("TransportAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, Property114> TransportAnimation { get; set; }

        [JsonProperty("TransportDropAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, Property114> TransportDropAnimation { get; set; }

        [JsonProperty("Tarmacs", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, Tarmac> Tarmacs { get; set; }

        [JsonProperty("AnimationPermOpen", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationPermOpen { get; set; }

        [JsonProperty("ForcedBuildSpin", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ForcedBuildSpin { get; set; }

        [JsonProperty("AnimationOpen", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationOpen { get; set; }

        [JsonProperty("AnimationUpgrade", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationUpgrade { get; set; }

        [JsonProperty("BlinkingLights", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, BlinkingLight> BlinkingLights { get; set; }

        [JsonProperty("BlinkingLightsFx", NullValueHandling = NullValueHandling.Ignore)]
        public BlinkingLightsFx BlinkingLightsFx { get; set; }

        [JsonProperty("BuildAttachBone", NullValueHandling = NullValueHandling.Ignore)]
        public BuildAttachBone? BuildAttachBone { get; set; }

        [JsonProperty("DamageEffects", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, DamageEffect> DamageEffects { get; set; }

        [JsonProperty("AnimationActivate", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationActivate { get; set; }

        [JsonProperty("MeshBlueprint", NullValueHandling = NullValueHandling.Ignore)]
        public string MeshBlueprint { get; set; }

        [JsonProperty("TeleportEffects", NullValueHandling = NullValueHandling.Ignore)]
        public TeleportEffects TeleportEffects { get; set; }

        [JsonProperty("WarpInEffect", NullValueHandling = NullValueHandling.Ignore)]
        public WarpInEffect WarpInEffect { get; set; }

        [JsonProperty("AnimationBuild", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationBuild { get; set; }

        [JsonProperty("MotionChangeEffects", NullValueHandling = NullValueHandling.Ignore)]
        public MotionChangeEffects MotionChangeEffects { get; set; }

        [JsonProperty("AnimationSurface", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationSurface { get; set; }

        [JsonProperty("PingPongScroller", NullValueHandling = NullValueHandling.Ignore)]
        public PingPongScroller PingPongScroller { get; set; }

        [JsonProperty("AnimationLand", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationLand { get; set; }

        [JsonProperty("AnimationFinishBuildLand", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationFinishBuildLand { get; set; }

        [JsonProperty("BuildMeshBlueprint", NullValueHandling = NullValueHandling.Ignore)]
        public string BuildMeshBlueprint { get; set; }

        [JsonProperty("AttackReticleSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AttackReticleSize { get; set; }

        [JsonProperty("AnimationBuildRate", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationBuildRate { get; set; }

        [JsonProperty("AnimationWater", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationWater { get; set; }

        [JsonProperty("MaxRockSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRockSpeed { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public Display0? The0 { get; set; }

        [JsonProperty("AINames", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> AiNames { get; set; }

        [JsonProperty("AnimationIdle", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationIdle { get; set; }

        [JsonProperty("AnimationTakeOff", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationTakeOff { get; set; }

        [JsonProperty("AttackReticle", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AttackReticle { get; set; }

        [JsonProperty("olderMeshName", NullValueHandling = NullValueHandling.Ignore)]
        public string OlderMeshName { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("2", NullValueHandling = NullValueHandling.Ignore)]
        public string The2 { get; set; }

        [JsonProperty("3", NullValueHandling = NullValueHandling.Ignore)]
        public string The3 { get; set; }

        [JsonProperty("AnimationTransform", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationTransform { get; set; }

        [JsonProperty("LandAnimationDeath", NullValueHandling = NullValueHandling.Ignore)]
        public LandAnimationDeath LandAnimationDeath { get; set; }

        [JsonProperty("WaterAnimationDeath", NullValueHandling = NullValueHandling.Ignore)]
        public WaterAnimationDeath WaterAnimationDeath { get; set; }

        [JsonProperty("MotionAdjustment", NullValueHandling = NullValueHandling.Ignore)]
        public MotionAdjustment MotionAdjustment { get; set; }

        [JsonProperty("AnimationDeploy", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationDeploy { get; set; }

        [JsonProperty("HideLifebars", NullValueHandling = NullValueHandling.Ignore)]
        public bool? HideLifebars { get; set; }

        [JsonProperty("LoopingAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string LoopingAnimation { get; set; }

        [JsonProperty("MissileBone", NullValueHandling = NullValueHandling.Ignore)]
        public string MissileBone { get; set; }

        [JsonProperty("CannonOpenAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string CannonOpenAnimation { get; set; }

        [JsonProperty("BuildEffect", NullValueHandling = NullValueHandling.Ignore)]
        public BuildEffect BuildEffect { get; set; }

        [JsonProperty("4", NullValueHandling = NullValueHandling.Ignore)]
        public string The4 { get; set; }

        [JsonProperty("5", NullValueHandling = NullValueHandling.Ignore)]
        public string The5 { get; set; }

        [JsonProperty("6", NullValueHandling = NullValueHandling.Ignore)]
        public string The6 { get; set; }

        [JsonProperty("7", NullValueHandling = NullValueHandling.Ignore)]
        public string The7 { get; set; }

        [JsonProperty("8", NullValueHandling = NullValueHandling.Ignore)]
        public string The8 { get; set; }

        [JsonProperty("9", NullValueHandling = NullValueHandling.Ignore)]
        public string The9 { get; set; }

        [JsonProperty("10", NullValueHandling = NullValueHandling.Ignore)]
        public string The10 { get; set; }

        [JsonProperty("11", NullValueHandling = NullValueHandling.Ignore)]
        public string The11 { get; set; }

        [JsonProperty("12", NullValueHandling = NullValueHandling.Ignore)]
        public string The12 { get; set; }

        [JsonProperty("13", NullValueHandling = NullValueHandling.Ignore)]
        public string The13 { get; set; }

        [JsonProperty("SequenceAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string SequenceAnimation { get; set; }

        [JsonProperty("AnimationPermOpenAlt", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationPermOpenAlt { get; set; }

        [JsonProperty("FlashLights", NullValueHandling = NullValueHandling.Ignore)]
        public FlashLights FlashLights { get; set; }

        [JsonProperty("FlashLightsFx", NullValueHandling = NullValueHandling.Ignore)]
        public FlashLightsFx FlashLightsFx { get; set; }

        [JsonProperty("ShieldOnRotatingBone", NullValueHandling = NullValueHandling.Ignore)]
        public string ShieldOnRotatingBone { get; set; }

        [JsonProperty("ShieldEmitterScale", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ShieldEmitterScale { get; set; }

        [JsonProperty("Property106", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property106 { get; set; }

        [JsonProperty("Property111", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property111 { get; set; }

        [JsonProperty("Property90", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property90 { get; set; }

        [JsonProperty("MiniRailgunsExtend", NullValueHandling = NullValueHandling.Ignore)]
        public bool? MiniRailgunsExtend { get; set; }

        [JsonProperty("Property95", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property95 { get; set; }

        [JsonProperty("Property100", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property100 { get; set; }

        [JsonProperty("Property105", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property105 { get; set; }

        [JsonProperty("Property110", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property110 { get; set; }

        [JsonProperty("Property81", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property81 { get; set; }

        [JsonProperty("Property86", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property86 { get; set; }

        [JsonProperty("Property91", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property91 { get; set; }

        [JsonProperty("Property96", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property96 { get; set; }

        [JsonProperty("Property101", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property101 { get; set; }

        [JsonProperty("Property116", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property116 { get; set; }

        [JsonProperty("Property121", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property121 { get; set; }

        [JsonProperty("Property126", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property126 { get; set; }

        [JsonProperty("Property131", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property131 { get; set; }

        [JsonProperty("Property136", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property136 { get; set; }

        [JsonProperty("Property103", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property103 { get; set; }

        [JsonProperty("Property108", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property108 { get; set; }

        [JsonProperty("Property113", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property113 { get; set; }

        [JsonProperty("Property118", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property118 { get; set; }

        [JsonProperty("Property123", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property123 { get; set; }

        [JsonProperty("Property128", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property128 { get; set; }

        [JsonProperty("Property133", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property133 { get; set; }

        [JsonProperty("Property138", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property138 { get; set; }

        [JsonProperty("Property143", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property143 { get; set; }

        [JsonProperty("Property148", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property148 { get; set; }

        [JsonProperty("Property153", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property153 { get; set; }

        [JsonProperty("Property158", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property158 { get; set; }

        [JsonProperty("Property141", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property141 { get; set; }

        [JsonProperty("Property146", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property146 { get; set; }

        [JsonProperty("Property151", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property151 { get; set; }

        [JsonProperty("Property156", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property156 { get; set; }

        [JsonProperty("Property161", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property161 { get; set; }

        [JsonProperty("Property166", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property166 { get; set; }

        [JsonProperty("Property171", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property171 { get; set; }

        [JsonProperty("Property176", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property176 { get; set; }

        [JsonProperty("Property115", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property115 { get; set; }

        [JsonProperty("Property120", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property120 { get; set; }

        [JsonProperty("Property125", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property125 { get; set; }

        [JsonProperty("Property130", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property130 { get; set; }

        [JsonProperty("Property135", NullValueHandling = NullValueHandling.Ignore)]
        public DisplayProperty100 Property135 { get; set; }

        [JsonProperty("AnimationRun", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationRun { get; set; }

        [JsonProperty("AnimationRunRate", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationRunRate { get; set; }

        [JsonProperty("EnhancementBoneEmitter", NullValueHandling = NullValueHandling.Ignore)]
        public string EnhancementBoneEmitter { get; set; }

        [JsonProperty("AkimboControl", NullValueHandling = NullValueHandling.Ignore)]
        public AkimboControl AkimboControl { get; set; }

        [JsonProperty("AnimationAlert", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationAlert { get; set; }

        [JsonProperty("NumberOfBuildBeams", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NumberOfBuildBeams { get; set; }

        [JsonProperty("WeaponExhaustAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponExhaustAnimation { get; set; }

        [JsonProperty("AnimationOpenHatch", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationOpenHatch { get; set; }
    }

    public partial class AkimboControl
    {
        [JsonProperty("AllowRetargettingSecondWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AllowRetargettingSecondWeapon { get; set; }

        [JsonProperty("FifthWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string FifthWeapon { get; set; }

        [JsonProperty("FirstWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string FirstWeapon { get; set; }

        [JsonProperty("FourthWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string FourthWeapon { get; set; }

        [JsonProperty("Head", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Head { get; set; }

        [JsonProperty("HeadBone", NullValueHandling = NullValueHandling.Ignore)]
        public string HeadBone { get; set; }

        [JsonProperty("HeadYawLimit", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadYawLimit { get; set; }

        [JsonProperty("HeadYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadYawSpeed { get; set; }

        [JsonProperty("SecondWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string SecondWeapon { get; set; }

        [JsonProperty("ThirdWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string ThirdWeapon { get; set; }

        [JsonProperty("TorsoBone", NullValueHandling = NullValueHandling.Ignore)]
        public string TorsoBone { get; set; }

        [JsonProperty("TorsoYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TorsoYawRange { get; set; }

        [JsonProperty("TorsoYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TorsoYawSpeed { get; set; }
    }

    public partial class AnimationDeath
    {
        [JsonProperty("Property68", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property68 { get; set; }

        [JsonProperty("Property74", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property74 { get; set; }

        [JsonProperty("Property80", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property80 { get; set; }

        [JsonProperty("Property73", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property73 { get; set; }

        [JsonProperty("Property79", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property79 { get; set; }

        [JsonProperty("Property85", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property85 { get; set; }

        [JsonProperty("Property66", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property66 { get; set; }

        [JsonProperty("Property69", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property69 { get; set; }

        [JsonProperty("Property82", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property82 { get; set; }

        [JsonProperty("Property75", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property75 { get; set; }

        [JsonProperty("Property103", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property103 { get; set; }

        [JsonProperty("Property109", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property109 { get; set; }

        [JsonProperty("Property95", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property95 { get; set; }

        [JsonProperty("Property78", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property78 { get; set; }

        [JsonProperty("Property89", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property89 { get; set; }

        [JsonProperty("Property93", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property93 { get; set; }

        [JsonProperty("Property84", NullValueHandling = NullValueHandling.Ignore)]
        public Property114 Property84 { get; set; }

        [JsonProperty("Property88", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property88 { get; set; }

        [JsonProperty("Property92", NullValueHandling = NullValueHandling.Ignore)]
        public Property114 Property92 { get; set; }

        [JsonProperty("Property83", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property83 { get; set; }

        [JsonProperty("Property87", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property87 { get; set; }

        [JsonProperty("Property91", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property91 { get; set; }

        [JsonProperty("Property111", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property111 { get; set; }

        [JsonProperty("Property97", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property97 { get; set; }

        [JsonProperty("Property101", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property101 { get; set; }

        [JsonProperty("Property113", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property113 { get; set; }

        [JsonProperty("Property53", NullValueHandling = NullValueHandling.Ignore)]
        public Property53 Property53 { get; set; }

        [JsonProperty("Property131", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property131 { get; set; }

        [JsonProperty("Property99", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property99 { get; set; }

        [JsonProperty("Property90", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property90 { get; set; }

        [JsonProperty("Property94", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property94 { get; set; }

        [JsonProperty("Property98", NullValueHandling = NullValueHandling.Ignore)]
        public Property114 Property98 { get; set; }

        [JsonProperty("Property96", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property96 { get; set; }

        [JsonProperty("Property102", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property102 { get; set; }

        [JsonProperty("Property108", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property108 { get; set; }

        [JsonProperty("Property139", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property139 { get; set; }

        [JsonProperty("Property145", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property145 { get; set; }

        [JsonProperty("Property151", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property151 { get; set; }

        [JsonProperty("Property65", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property65 { get; set; }

        [JsonProperty("Property114", NullValueHandling = NullValueHandling.Ignore)]
        public Property114 Property114 { get; set; }

        [JsonProperty("Property100", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property100 { get; set; }

        [JsonProperty("Property121", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property121 { get; set; }

        [JsonProperty("Property127", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property127 { get; set; }

        [JsonProperty("Property133", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property133 { get; set; }

        [JsonProperty("Property105", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property105 { get; set; }

        [JsonProperty("Property58", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property58 { get; set; }

        [JsonProperty("Property71", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property71 { get; set; }

        [JsonProperty("Property77", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property77 { get; set; }

        [JsonProperty("Property81", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property81 { get; set; }

        [JsonProperty("Property40", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property40 { get; set; }

        [JsonProperty("Property125", NullValueHandling = NullValueHandling.Ignore)]
        public Property114 Property125 { get; set; }

        [JsonProperty("Property76", NullValueHandling = NullValueHandling.Ignore)]
        public Property114 Property76 { get; set; }

        [JsonProperty("Property72", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property72 { get; set; }

        [JsonProperty("Property86", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property86 { get; set; }

        [JsonProperty("Property67", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property67 { get; set; }

        [JsonProperty("Property64", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property64 { get; set; }

        [JsonProperty("Property61", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property61 { get; set; }

        [JsonProperty("Property63", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property63 { get; set; }

        [JsonProperty("Property62", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property62 { get; set; }

        [JsonProperty("Property57", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property57 { get; set; }

        [JsonProperty("Property45", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property45 { get; set; }

        [JsonProperty("Property70", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property70 { get; set; }

        [JsonProperty("Property117", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property117 { get; set; }

        [JsonProperty("Property123", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property123 { get; set; }

        [JsonProperty("Property107", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property107 { get; set; }
    }

    public partial class Property68Class
    {
        [JsonProperty("Animation", NullValueHandling = NullValueHandling.Ignore)]
        public string Animation { get; set; }

        [JsonProperty("AnimationRateMax", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationRateMax { get; set; }

        [JsonProperty("AnimationRateMin", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationRateMin { get; set; }

        [JsonProperty("Weight", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Weight { get; set; }
    }

    public partial class Property114
    {
        [JsonProperty("Animation", NullValueHandling = NullValueHandling.Ignore)]
        public string Animation { get; set; }

        [JsonProperty("Weight", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Weight { get; set; }
    }

    public partial class Property53
    {
        [JsonProperty("Animation", NullValueHandling = NullValueHandling.Ignore)]
        public string Animation { get; set; }
    }

    public partial class BlinkingLight
    {
        [JsonProperty("BLBone", NullValueHandling = NullValueHandling.Ignore)]
        public string BlBone { get; set; }

        [JsonProperty("BLOffsetX", NullValueHandling = NullValueHandling.Ignore)]
        public string BlOffsetX { get; set; }

        [JsonProperty("BLOffsetY", NullValueHandling = NullValueHandling.Ignore)]
        public string BlOffsetY { get; set; }

        [JsonProperty("BLOffsetZ", NullValueHandling = NullValueHandling.Ignore)]
        public string BlOffsetZ { get; set; }

        [JsonProperty("BLScale", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? BlScale { get; set; }
    }

    public partial class BlinkingLightsFx
    {
        [JsonProperty("Green", NullValueHandling = NullValueHandling.Ignore)]
        public Green? Green { get; set; }

        [JsonProperty("Red", NullValueHandling = NullValueHandling.Ignore)]
        public Red? Red { get; set; }

        [JsonProperty("Yellow", NullValueHandling = NullValueHandling.Ignore)]
        public Yellow? Yellow { get; set; }
    }

    public partial class BuildEffect
    {
        [JsonProperty("ExtendsFront", NullValueHandling = NullValueHandling.Ignore)]
        public string ExtendsFront { get; set; }

        [JsonProperty("ExtendsRear", NullValueHandling = NullValueHandling.Ignore)]
        public string ExtendsRear { get; set; }

        [JsonProperty("ExtendsTop", NullValueHandling = NullValueHandling.Ignore)]
        public string ExtendsTop { get; set; }

        [JsonProperty("Factory", NullValueHandling = NullValueHandling.Ignore)]
        public FactoryUnion? Factory { get; set; }

        [JsonProperty("Emitter", NullValueHandling = NullValueHandling.Ignore)]
        public string Emitter { get; set; }

        [JsonProperty("OffsetZ", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? OffsetZ { get; set; }

        [JsonProperty("Scale", NullValueHandling = NullValueHandling.Ignore)]
        public string Scale { get; set; }

        [JsonProperty("HeightScale", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? HeightScale { get; set; }

        [JsonProperty("PartArrivesByDropshipBone", NullValueHandling = NullValueHandling.Ignore)]
        public string PartArrivesByDropshipBone { get; set; }

        [JsonProperty("PartArrivesByDropshipMesh", NullValueHandling = NullValueHandling.Ignore)]
        public string PartArrivesByDropshipMesh { get; set; }

        [JsonProperty("ExtendsBottom", NullValueHandling = NullValueHandling.Ignore)]
        public string ExtendsBottom { get; set; }

        [JsonProperty("Extendstop", NullValueHandling = NullValueHandling.Ignore)]
        public string Extendstop { get; set; }
    }

    public partial class FactoryClass
    {
        [JsonProperty("BuildFieldReversed", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BuildFieldReversed { get; set; }

        [JsonProperty("VerticalEffect", NullValueHandling = NullValueHandling.Ignore)]
        public bool? VerticalEffect { get; set; }

        [JsonProperty("BuildFieldOffset", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildFieldOffset { get; set; }
    }

    public partial class DamageEffect
    {
        [JsonProperty("Bone", NullValueHandling = NullValueHandling.Ignore)]
        public Bone? Bone { get; set; }

        [JsonProperty("OffsetX", NullValueHandling = NullValueHandling.Ignore)]
        public string OffsetX { get; set; }

        [JsonProperty("OffsetY", NullValueHandling = NullValueHandling.Ignore)]
        public string OffsetY { get; set; }

        [JsonProperty("OffsetZ", NullValueHandling = NullValueHandling.Ignore)]
        public string OffsetZ { get; set; }

        [JsonProperty("Water", NullValueHandling = NullValueHandling.Ignore)]
        public DamageEffectWater Water { get; set; }
    }

    public partial class DamageEffectWater
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleEffects Effects { get; set; }
    }

    public partial class PurpleEffects
    {
        [JsonProperty("Property55", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property55 { get; set; }
    }

    public partial class EffectsProperty55
    {
        [JsonProperty("Bones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Bones { get; set; }

        [JsonProperty("Scale", NullValueHandling = NullValueHandling.Ignore)]
        public string Scale { get; set; }

        [JsonProperty("Type", NullValueHandling = NullValueHandling.Ignore)]
        public Property55Type? Type { get; set; }

        [JsonProperty("Offset", NullValueHandling = NullValueHandling.Ignore)]
        public List<CombatTurnSpeed> Offset { get; set; }
    }

    public partial class FlashLights
    {
        [JsonProperty("Property118", NullValueHandling = NullValueHandling.Ignore)]
        public BlinkingLight Property118 { get; set; }

        [JsonProperty("Property125", NullValueHandling = NullValueHandling.Ignore)]
        public BlinkingLight Property125 { get; set; }

        [JsonProperty("Property132", NullValueHandling = NullValueHandling.Ignore)]
        public BlinkingLight Property132 { get; set; }

        [JsonProperty("Property139", NullValueHandling = NullValueHandling.Ignore)]
        public BlinkingLight Property139 { get; set; }
    }

    public partial class FlashLightsFx
    {
        [JsonProperty("Green", NullValueHandling = NullValueHandling.Ignore)]
        public Green? Green { get; set; }

        [JsonProperty("Red", NullValueHandling = NullValueHandling.Ignore)]
        public Red? Red { get; set; }
    }

    public partial class IdleEffectsClass
    {
        [JsonProperty("Land", NullValueHandling = NullValueHandling.Ignore)]
        public IdleEffectsLand Land { get; set; }

        [JsonProperty("Water", NullValueHandling = NullValueHandling.Ignore)]
        public IdleEffectsWater Water { get; set; }

        [JsonProperty("Seabed", NullValueHandling = NullValueHandling.Ignore)]
        public IdleEffectsSeabed Seabed { get; set; }

        [JsonProperty("Sub", NullValueHandling = NullValueHandling.Ignore)]
        public IdleEffectsSub Sub { get; set; }

        [JsonProperty("Air", NullValueHandling = NullValueHandling.Ignore)]
        public IdleEffectsAir Air { get; set; }
    }

    public partial class IdleEffectsAir
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public FluffyEffects Effects { get; set; }
    }

    public partial class FluffyEffects
    {
        [JsonProperty("Property121", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property121 { get; set; }

        [JsonProperty("Property120", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property120 { get; set; }

        [JsonProperty("Property145", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property145 { get; set; }

        [JsonProperty("Property119", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property119 { get; set; }

        [JsonProperty("Property143", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property143 { get; set; }
    }

    public partial class Property150
    {
        [JsonProperty("Bones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Bones { get; set; }

        [JsonProperty("Type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }
    }

    public partial class IdleEffectsLand
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public LandEffectsUnion? Effects { get; set; }
    }

    public partial class TentacledEffects
    {
        [JsonProperty("Property73", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property73 { get; set; }

        [JsonProperty("Property28", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property28 { get; set; }

        [JsonProperty("Property75", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property75 { get; set; }

        [JsonProperty("Property103", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property103 { get; set; }

        [JsonProperty("Property106", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property106 { get; set; }

        [JsonProperty("Property84", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property84 { get; set; }

        [JsonProperty("Property116", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property116 { get; set; }

        [JsonProperty("Property74", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property74 { get; set; }

        [JsonProperty("Property80", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property80 { get; set; }

        [JsonProperty("Property113", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property113 { get; set; }

        [JsonProperty("Property92", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property92 { get; set; }

        [JsonProperty("Property83", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property83 { get; set; }

        [JsonProperty("Property71", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property71 { get; set; }

        [JsonProperty("Property93", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property93 { get; set; }

        [JsonProperty("Property176", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property176 { get; set; }

        [JsonProperty("Property100", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property100 { get; set; }

        [JsonProperty("Property94", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property94 { get; set; }

        [JsonProperty("Property110", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property110 { get; set; }

        [JsonProperty("Property117", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property117 { get; set; }

        [JsonProperty("Property99", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property99 { get; set; }

        [JsonProperty("Property111", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property111 { get; set; }

        [JsonProperty("Property101", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property101 { get; set; }

        [JsonProperty("Property88", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property88 { get; set; }

        [JsonProperty("Property90", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property90 { get; set; }

        [JsonProperty("Property109", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property109 { get; set; }

        [JsonProperty("Property108", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property108 { get; set; }

        [JsonProperty("Property95", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property95 { get; set; }

        [JsonProperty("Property47", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property47 { get; set; }

        [JsonProperty("Property138", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property138 { get; set; }

        [JsonProperty("Property105", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property105 { get; set; }

        [JsonProperty("Property136", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property136 { get; set; }

        [JsonProperty("Property97", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property97 { get; set; }

        [JsonProperty("Property131", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property131 { get; set; }

        [JsonProperty("Property154", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property154 { get; set; }

        [JsonProperty("Property127", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property127 { get; set; }

        [JsonProperty("Property140", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property140 { get; set; }

        [JsonProperty("Property112", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property112 { get; set; }

        [JsonProperty("Property126", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property126 { get; set; }
    }

    public partial class Property196Class
    {
        [JsonProperty("Bones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Bones { get; set; }

        [JsonProperty("Offset", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Offset { get; set; }

        [JsonProperty("Type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("Scale", NullValueHandling = NullValueHandling.Ignore)]
        public string Scale { get; set; }

        [JsonProperty("Recolour", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Recolour { get; set; }
    }

    public partial class IdleEffectsSeabed
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public StickyEffects Effects { get; set; }
    }

    public partial class StickyEffects
    {
        [JsonProperty("Property173", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property173 { get; set; }

        [JsonProperty("Property201", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property201 { get; set; }

        [JsonProperty("Property165", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property165 { get; set; }

        [JsonProperty("Property174", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property174 { get; set; }

        [JsonProperty("Property161", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property161 { get; set; }

        [JsonProperty("Property195", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property195 { get; set; }

        [JsonProperty("Property180", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property180 { get; set; }

        [JsonProperty("Property75", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property75 { get; set; }

        [JsonProperty("Property217", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property217 { get; set; }

        [JsonProperty("Property371", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property371 { get; set; }
    }

    public partial class IdleEffectsSub
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, Property150> Effects { get; set; }
    }

    public partial class IdleEffectsWater
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public WaterEffectsUnion? Effects { get; set; }
    }

    public partial class IndigoEffects
    {
        [JsonProperty("Property92", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property92 { get; set; }

        [JsonProperty("Property98", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property98 { get; set; }

        [JsonProperty("Property101", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property101 { get; set; }

        [JsonProperty("Property82", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property82 { get; set; }

        [JsonProperty("Property76", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property76 { get; set; }

        [JsonProperty("Property69", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property69 { get; set; }

        [JsonProperty("Property103", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property103 { get; set; }

        [JsonProperty("Property62", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property62 { get; set; }

        [JsonProperty("Property61", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property61 { get; set; }

        [JsonProperty("Property126", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property126 { get; set; }

        [JsonProperty("Property132", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property132 { get; set; }

        [JsonProperty("Property123", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property123 { get; set; }

        [JsonProperty("Property129", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property129 { get; set; }

        [JsonProperty("Property90", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property90 { get; set; }

        [JsonProperty("Property100", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property100 { get; set; }

        [JsonProperty("Property99", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property99 { get; set; }

        [JsonProperty("Property133", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property133 { get; set; }

        [JsonProperty("Property109", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property109 { get; set; }

        [JsonProperty("Property60", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property60 { get; set; }

        [JsonProperty("Property152", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property152 { get; set; }

        [JsonProperty("Property110", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property110 { get; set; }

        [JsonProperty("Property73", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property73 { get; set; }

        [JsonProperty("Property72", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property72 { get; set; }

        [JsonProperty("Property77", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property77 { get; set; }

        [JsonProperty("Property68", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property68 { get; set; }

        [JsonProperty("Property80", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property80 { get; set; }

        [JsonProperty("Property114", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property114 { get; set; }

        [JsonProperty("Property108", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property108 { get; set; }

        [JsonProperty("Property119", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property119 { get; set; }

        [JsonProperty("Property113", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property113 { get; set; }

        [JsonProperty("Property112", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property112 { get; set; }

        [JsonProperty("Property105", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property105 { get; set; }

        [JsonProperty("Property106", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property106 { get; set; }

        [JsonProperty("Property118", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property118 { get; set; }

        [JsonProperty("Property128", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property128 { get; set; }

        [JsonProperty("Property174", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property174 { get; set; }

        [JsonProperty("Property78", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property78 { get; set; }

        [JsonProperty("Property81", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property81 { get; set; }

        [JsonProperty("Property74", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property74 { get; set; }

        [JsonProperty("Property104", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property104 { get; set; }

        [JsonProperty("Property146", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property146 { get; set; }

        [JsonProperty("Property121", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property121 { get; set; }

        [JsonProperty("Property131", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property131 { get; set; }

        [JsonProperty("Property111", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property111 { get; set; }

        [JsonProperty("Property130", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property130 { get; set; }

        [JsonProperty("Property83", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property83 { get; set; }

        [JsonProperty("Property89", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property89 { get; set; }

        [JsonProperty("Property96", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property96 { get; set; }

        [JsonProperty("Property122", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property122 { get; set; }

        [JsonProperty("Property93", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property93 { get; set; }

        [JsonProperty("Property84", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property84 { get; set; }

        [JsonProperty("Property117", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property117 { get; set; }

        [JsonProperty("Property79", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property79 { get; set; }

        [JsonProperty("Property67", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property67 { get; set; }

        [JsonProperty("Property65", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property65 { get; set; }

        [JsonProperty("Property102", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property102 { get; set; }

        [JsonProperty("Property127", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property127 { get; set; }

        [JsonProperty("Property139", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property139 { get; set; }

        [JsonProperty("Property116", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property116 { get; set; }

        [JsonProperty("Property138", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property138 { get; set; }

        [JsonProperty("Property91", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property91 { get; set; }

        [JsonProperty("Property125", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property125 { get; set; }

        [JsonProperty("Property137", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property137 { get; set; }

        [JsonProperty("Property85", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property85 { get; set; }

        [JsonProperty("Property94", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property94 { get; set; }

        [JsonProperty("Property86", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property86 { get; set; }

        [JsonProperty("Property88", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property88 { get; set; }

        [JsonProperty("Property75", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property75 { get; set; }

        [JsonProperty("Property145", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property145 { get; set; }

        [JsonProperty("Property177", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property177 { get; set; }

        [JsonProperty("Property185", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property185 { get; set; }

        [JsonProperty("Property144", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property144 { get; set; }

        [JsonProperty("Property155", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property155 { get; set; }

        [JsonProperty("Property153", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property153 { get; set; }

        [JsonProperty("Property148", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property148 { get; set; }

        [JsonProperty("Property171", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property171 { get; set; }

        [JsonProperty("Property157", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property157 { get; set; }

        [JsonProperty("Property170", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property170 { get; set; }

        [JsonProperty("Property158", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property158 { get; set; }
    }

    public partial class LandAnimationDeath
    {
        [JsonProperty("Property157", NullValueHandling = NullValueHandling.Ignore)]
        public Property114 Property157 { get; set; }
    }

    public partial class LayerChangeEffectsClass
    {
        [JsonProperty("AirLand", NullValueHandling = NullValueHandling.Ignore)]
        public AirLand AirLand { get; set; }

        [JsonProperty("LandAir", NullValueHandling = NullValueHandling.Ignore)]
        public LandAir LandAir { get; set; }

        [JsonProperty("SeabedLand", NullValueHandling = NullValueHandling.Ignore)]
        public SeabedLand SeabedLand { get; set; }

        [JsonProperty("WaterLand", NullValueHandling = NullValueHandling.Ignore)]
        public WaterLand WaterLand { get; set; }
    }

    public partial class AirLand
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public AirLandEffects Effects { get; set; }
    }

    public partial class AirLandEffects
    {
        [JsonProperty("Property108", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property108 { get; set; }

        [JsonProperty("Property134", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property134 { get; set; }

        [JsonProperty("Property132", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property132 { get; set; }

        [JsonProperty("Property116", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property116 { get; set; }

        [JsonProperty("Property127", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property127 { get; set; }

        [JsonProperty("Property131", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property131 { get; set; }

        [JsonProperty("Property146", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property146 { get; set; }

        [JsonProperty("Property133", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property133 { get; set; }

        [JsonProperty("Property117", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property117 { get; set; }

        [JsonProperty("Property129", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property129 { get; set; }

        [JsonProperty("Property113", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property113 { get; set; }

        [JsonProperty("Property110", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property110 { get; set; }

        [JsonProperty("Property128", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property128 { get; set; }

        [JsonProperty("Property148", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property148 { get; set; }

        [JsonProperty("Property125", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property125 { get; set; }

        [JsonProperty("Property136", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property136 { get; set; }

        [JsonProperty("Property115", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property115 { get; set; }

        [JsonProperty("Property126", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property126 { get; set; }

        [JsonProperty("Property142", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property142 { get; set; }

        [JsonProperty("Property119", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property119 { get; set; }

        [JsonProperty("Property137", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property137 { get; set; }

        [JsonProperty("Property157", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property157 { get; set; }

        [JsonProperty("Property121", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property121 { get; set; }

        [JsonProperty("Property174", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property174 { get; set; }

        [JsonProperty("Property139", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property139 { get; set; }

        [JsonProperty("Property151", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property151 { get; set; }

        [JsonProperty("Property141", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property141 { get; set; }

        [JsonProperty("Property143", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property143 { get; set; }

        [JsonProperty("Property163", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property163 { get; set; }

        [JsonProperty("Property155", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property155 { get; set; }
    }

    public partial class LandAir
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public LandAirEffects Effects { get; set; }
    }

    public partial class LandAirEffects
    {
        [JsonProperty("Property118", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property118 { get; set; }

        [JsonProperty("Property145", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property145 { get; set; }

        [JsonProperty("Property143", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property143 { get; set; }

        [JsonProperty("Property126", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property126 { get; set; }

        [JsonProperty("Property137", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property137 { get; set; }

        [JsonProperty("Property141", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property141 { get; set; }

        [JsonProperty("Property156", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property156 { get; set; }

        [JsonProperty("Property127", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property127 { get; set; }

        [JsonProperty("Property139", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property139 { get; set; }

        [JsonProperty("Property123", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property123 { get; set; }

        [JsonProperty("Property120", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property120 { get; set; }

        [JsonProperty("Property138", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property138 { get; set; }

        [JsonProperty("Property166", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property166 { get; set; }

        [JsonProperty("Property149", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property149 { get; set; }

        [JsonProperty("Property125", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property125 { get; set; }

        [JsonProperty("Property136", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property136 { get; set; }

        [JsonProperty("Property153", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property153 { get; set; }

        [JsonProperty("Property158", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property158 { get; set; }

        [JsonProperty("Property144", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property144 { get; set; }

        [JsonProperty("Property142", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property142 { get; set; }

        [JsonProperty("Property129", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property129 { get; set; }

        [JsonProperty("Property147", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property147 { get; set; }

        [JsonProperty("Property167", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property167 { get; set; }

        [JsonProperty("Property131", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property131 { get; set; }

        [JsonProperty("Property192", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property192 { get; set; }

        [JsonProperty("Property150", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property150 { get; set; }

        [JsonProperty("Property162", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property162 { get; set; }

        [JsonProperty("Property148", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property148 { get; set; }

        [JsonProperty("Property152", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property152 { get; set; }

        [JsonProperty("Property140", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property140 { get; set; }

        [JsonProperty("Property173", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property173 { get; set; }

        [JsonProperty("Property165", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property165 { get; set; }
    }

    public partial class SeabedLand
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public SeabedLandEffects Effects { get; set; }
    }

    public partial class SeabedLandEffects
    {
        [JsonProperty("Property188", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property188 { get; set; }

        [JsonProperty("Property194", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property194 { get; set; }
    }

    public partial class WaterLand
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public WaterLandEffects Effects { get; set; }
    }

    public partial class WaterLandEffects
    {
        [JsonProperty("Property165", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property165 { get; set; }
    }

    public partial class Mesh
    {
        [JsonProperty("IconFadeInZoom", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? IconFadeInZoom { get; set; }

        [JsonProperty("LODs", NullValueHandling = NullValueHandling.Ignore)]
        public LoDs LoDs { get; set; }
    }

    public partial class LoDs
    {
        [JsonProperty("Property130", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property130 { get; set; }

        [JsonProperty("Property135", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property135 { get; set; }

        [JsonProperty("Property90", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property90 { get; set; }

        [JsonProperty("Property94", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property94 { get; set; }

        [JsonProperty("Property158", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property158 { get; set; }

        [JsonProperty("Property162", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property162 { get; set; }

        [JsonProperty("Property93", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property93 { get; set; }

        [JsonProperty("Property97", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property97 { get; set; }

        [JsonProperty("Property156", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property156 { get; set; }

        [JsonProperty("Property160", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property160 { get; set; }

        [JsonProperty("Property102", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property102 { get; set; }

        [JsonProperty("Property18", NullValueHandling = NullValueHandling.Ignore)]
        public Property18Class Property18 { get; set; }

        [JsonProperty("Property45", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property45 { get; set; }

        [JsonProperty("Property19", NullValueHandling = NullValueHandling.Ignore)]
        public Property18Class Property19 { get; set; }

        [JsonProperty("Property46", NullValueHandling = NullValueHandling.Ignore)]
        public Property23Class Property46 { get; set; }

        [JsonProperty("Property32", NullValueHandling = NullValueHandling.Ignore)]
        public Property18Class Property32 { get; set; }

        [JsonProperty("Property29", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property29 { get; set; }

        [JsonProperty("Property49", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property49 { get; set; }

        [JsonProperty("Property56", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property56 { get; set; }

        [JsonProperty("Property138", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property138 { get; set; }

        [JsonProperty("Property142", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property142 { get; set; }

        [JsonProperty("Property149", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property149 { get; set; }

        [JsonProperty("Property153", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property153 { get; set; }

        [JsonProperty("Property168", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property168 { get; set; }

        [JsonProperty("Property173", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property173 { get; set; }

        [JsonProperty("Property155", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property155 { get; set; }

        [JsonProperty("Property139", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property139 { get; set; }

        [JsonProperty("Property151", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property151 { get; set; }

        [JsonProperty("Property140", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property140 { get; set; }

        [JsonProperty("Property154", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property154 { get; set; }

        [JsonProperty("Property129", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property129 { get; set; }

        [JsonProperty("Property134", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property134 { get; set; }

        [JsonProperty("Property141", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property141 { get; set; }

        [JsonProperty("Property147", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property147 { get; set; }

        [JsonProperty("Property161", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property161 { get; set; }

        [JsonProperty("Property166", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property166 { get; set; }

        [JsonProperty("Property122", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property122 { get; set; }

        [JsonProperty("Property127", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property127 { get; set; }

        [JsonProperty("Property105", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property105 { get; set; }

        [JsonProperty("Property109", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property109 { get; set; }

        [JsonProperty("Property118", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property118 { get; set; }

        [JsonProperty("Property123", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property123 { get; set; }

        [JsonProperty("Property96", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property96 { get; set; }

        [JsonProperty("Property101", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property101 { get; set; }

        [JsonProperty("Property111", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property111 { get; set; }

        [JsonProperty("Property115", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property115 { get; set; }

        [JsonProperty("Property120", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property120 { get; set; }

        [JsonProperty("Property99", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property99 { get; set; }

        [JsonProperty("Property104", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property104 { get; set; }

        [JsonProperty("Property114", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property114 { get; set; }

        [JsonProperty("Property88", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property88 { get; set; }

        [JsonProperty("Property92", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property92 { get; set; }

        [JsonProperty("Property68", NullValueHandling = NullValueHandling.Ignore)]
        public Property68 Property68 { get; set; }

        [JsonProperty("Property73", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property73 { get; set; }

        [JsonProperty("Property72", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property72 { get; set; }

        [JsonProperty("Property77", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property77 { get; set; }

        [JsonProperty("Property65", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property65 { get; set; }

        [JsonProperty("Property69", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property69 { get; set; }

        [JsonProperty("Property91", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property91 { get; set; }

        [JsonProperty("Property95", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property95 { get; set; }

        [JsonProperty("Property126", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property126 { get; set; }

        [JsonProperty("Property66", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property66 { get; set; }

        [JsonProperty("Property71", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property71 { get; set; }

        [JsonProperty("Property133", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property133 { get; set; }

        [JsonProperty("Property59", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property59 { get; set; }

        [JsonProperty("Property64", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property64 { get; set; }

        [JsonProperty("Property112", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property112 { get; set; }

        [JsonProperty("Property116", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property116 { get; set; }

        [JsonProperty("Property78", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property78 { get; set; }

        [JsonProperty("Property82", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property82 { get; set; }

        [JsonProperty("Property86", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property86 { get; set; }

        [JsonProperty("Property119", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property119 { get; set; }

        [JsonProperty("Property75", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property75 { get; set; }

        [JsonProperty("Property79", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property79 { get; set; }

        [JsonProperty("Property67", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property67 { get; set; }

        [JsonProperty("Property87", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property87 { get; set; }

        [JsonProperty("Property74", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property74 { get; set; }

        [JsonProperty("Property89", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property89 { get; set; }

        [JsonProperty("Property103", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property103 { get; set; }

        [JsonProperty("Property108", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property108 { get; set; }

        [JsonProperty("Property24", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property24 { get; set; }

        [JsonProperty("Property34", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property34 { get; set; }

        [JsonProperty("Property42", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property42 { get; set; }

        [JsonProperty("Property47", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property47 { get; set; }

        [JsonProperty("Property80", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property80 { get; set; }

        [JsonProperty("Property85", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property85 { get; set; }

        [JsonProperty("Property188", NullValueHandling = NullValueHandling.Ignore)]
        public Property165Class Property188 { get; set; }

        [JsonProperty("Property106", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property106 { get; set; }

        [JsonProperty("Property70", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property70 { get; set; }

        [JsonProperty("Property145", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property145 { get; set; }

        [JsonProperty("Property83", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property83 { get; set; }

        [JsonProperty("Property107", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property107 { get; set; }

        [JsonProperty("Property98", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property98 { get; set; }

        [JsonProperty("Property146", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property146 { get; set; }

        [JsonProperty("Property193", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property193 { get; set; }

        [JsonProperty("Property121", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property121 { get; set; }

        [JsonProperty("Property113", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property113 { get; set; }

        [JsonProperty("Property117", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property117 { get; set; }

        [JsonProperty("Property150", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property150 { get; set; }

        [JsonProperty("Property125", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property125 { get; set; }

        [JsonProperty("Property165", NullValueHandling = NullValueHandling.Ignore)]
        public Property165Class Property165 { get; set; }

        [JsonProperty("Property169", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property169 { get; set; }

        [JsonProperty("Property132", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property132 { get; set; }

        [JsonProperty("Property181", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property181 { get; set; }

        [JsonProperty("Property185", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property185 { get; set; }

        [JsonProperty("Property164", NullValueHandling = NullValueHandling.Ignore)]
        public Property23Class Property164 { get; set; }

        [JsonProperty("Property137", NullValueHandling = NullValueHandling.Ignore)]
        public Property165Class Property137 { get; set; }

        [JsonProperty("Property148", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property148 { get; set; }

        [JsonProperty("Property152", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property152 { get; set; }

        [JsonProperty("Property157", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property157 { get; set; }

        [JsonProperty("Property172", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property172 { get; set; }

        [JsonProperty("Property176", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property176 { get; set; }

        [JsonProperty("Property63", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property63 { get; set; }

        [JsonProperty("Property136", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property136 { get; set; }

        [JsonProperty("Property61", NullValueHandling = NullValueHandling.Ignore)]
        public Property165Class Property61 { get; set; }

        [JsonProperty("Property81", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property81 { get; set; }

        [JsonProperty("Property76", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property76 { get; set; }

        [JsonProperty("Property84", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property84 { get; set; }

        [JsonProperty("Property62", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property62 { get; set; }

        [JsonProperty("Property55", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property55 { get; set; }

        [JsonProperty("Property33", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property33 { get; set; }

        [JsonProperty("Property23", NullValueHandling = NullValueHandling.Ignore)]
        public Property23Class Property23 { get; set; }

        [JsonProperty("Property50", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property50 { get; set; }

        [JsonProperty("Property57", NullValueHandling = NullValueHandling.Ignore)]
        public Property165Class Property57 { get; set; }

        [JsonProperty("Property110", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property110 { get; set; }

        [JsonProperty("Property216", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property216 { get; set; }

        [JsonProperty("Property131", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property131 { get; set; }

        [JsonProperty("Property180", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property180 { get; set; }

        [JsonProperty("Property184", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property184 { get; set; }

        [JsonProperty("Property207", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property207 { get; set; }

        [JsonProperty("Property212", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property212 { get; set; }

        [JsonProperty("Property187", NullValueHandling = NullValueHandling.Ignore)]
        public Property23Class Property187 { get; set; }

        [JsonProperty("Property143", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property143 { get; set; }

        [JsonProperty("Property159", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property159 { get; set; }

        [JsonProperty("Property163", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property163 { get; set; }

        [JsonProperty("Property179", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property179 { get; set; }

        [JsonProperty("Property100", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property100 { get; set; }

        [JsonProperty("Property54", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property54 { get; set; }

        [JsonProperty("Property58", NullValueHandling = NullValueHandling.Ignore)]
        public Property165Class Property58 { get; set; }

        [JsonProperty("Property189", NullValueHandling = NullValueHandling.Ignore)]
        public Property23Class Property189 { get; set; }

        [JsonProperty("Property124", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property124 { get; set; }

        [JsonProperty("Property128", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property128 { get; set; }

        [JsonProperty("Property177", NullValueHandling = NullValueHandling.Ignore)]
        public Property23Class Property177 { get; set; }

        [JsonProperty("Property144", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property144 { get; set; }

        [JsonProperty("Property27", NullValueHandling = NullValueHandling.Ignore)]
        public Property23Class Property27 { get; set; }

        [JsonProperty("Property211", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property211 { get; set; }

        [JsonProperty("Property60", NullValueHandling = NullValueHandling.Ignore)]
        public Property23Class Property60 { get; set; }

        [JsonProperty("Property43", NullValueHandling = NullValueHandling.Ignore)]
        public Property165Class Property43 { get; set; }

        [JsonProperty("Property48", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property48 { get; set; }

        [JsonProperty("Property26", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property26 { get; set; }

        [JsonProperty("Property175", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property175 { get; set; }

        [JsonProperty("Property167", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property167 { get; set; }

        [JsonProperty("Property41", NullValueHandling = NullValueHandling.Ignore)]
        public Property165Class Property41 { get; set; }

        [JsonProperty("Property44", NullValueHandling = NullValueHandling.Ignore)]
        public Property23Class Property44 { get; set; }

        [JsonProperty("Property210", NullValueHandling = NullValueHandling.Ignore)]
        public Property165Class Property210 { get; set; }

        [JsonProperty("Property199", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property199 { get; set; }

        [JsonProperty("Property39", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property39 { get; set; }

        [JsonProperty("Property38", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property38 { get; set; }

        [JsonProperty("Property40", NullValueHandling = NullValueHandling.Ignore)]
        public Property23Class Property40 { get; set; }

        [JsonProperty("Property203", NullValueHandling = NullValueHandling.Ignore)]
        public Property23Class Property203 { get; set; }

        [JsonProperty("Property232", NullValueHandling = NullValueHandling.Ignore)]
        public LoDsProperty232 Property232 { get; set; }

        [JsonProperty("Property388", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property388 { get; set; }

        [JsonProperty("Property174", NullValueHandling = NullValueHandling.Ignore)]
        public Property165Class Property174 { get; set; }

        [JsonProperty("Property171", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property171 { get; set; }

        [JsonProperty("Property190", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property190 { get; set; }

        [JsonProperty("Property278", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property278 { get; set; }

        [JsonProperty("Property287", NullValueHandling = NullValueHandling.Ignore)]
        public Property124Class Property287 { get; set; }

        [JsonProperty("Property264", NullValueHandling = NullValueHandling.Ignore)]
        public Property150Class Property264 { get; set; }
    }

    public partial class Property124Class
    {
        [JsonProperty("LODCutoff", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? LodCutoff { get; set; }

        [JsonProperty("ShaderName", NullValueHandling = NullValueHandling.Ignore)]
        public ShaderName? ShaderName { get; set; }

        [JsonProperty("AlbedoName", NullValueHandling = NullValueHandling.Ignore)]
        public string AlbedoName { get; set; }

        [JsonProperty("SpecularName", NullValueHandling = NullValueHandling.Ignore)]
        public string SpecularName { get; set; }

        [JsonProperty("LookupName", NullValueHandling = NullValueHandling.Ignore)]
        public LookupName? LookupName { get; set; }

        [JsonProperty("Scrolling", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Scrolling { get; set; }

        [JsonProperty("MeshName", NullValueHandling = NullValueHandling.Ignore)]
        public string MeshName { get; set; }

        [JsonProperty("NormalsName", NullValueHandling = NullValueHandling.Ignore)]
        public string NormalsName { get; set; }
    }

    public partial class Property150Class
    {
        [JsonProperty("AlbedoName", NullValueHandling = NullValueHandling.Ignore)]
        public string AlbedoName { get; set; }

        [JsonProperty("LODCutoff", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? LodCutoff { get; set; }

        [JsonProperty("ShaderName", NullValueHandling = NullValueHandling.Ignore)]
        public ShaderName? ShaderName { get; set; }

        [JsonProperty("SpecularName", NullValueHandling = NullValueHandling.Ignore)]
        public string SpecularName { get; set; }

        [JsonProperty("LookupName", NullValueHandling = NullValueHandling.Ignore)]
        public LookupName? LookupName { get; set; }

        [JsonProperty("Scrolling", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Scrolling { get; set; }

        [JsonProperty("MeshName", NullValueHandling = NullValueHandling.Ignore)]
        public string MeshName { get; set; }

        [JsonProperty("SecondaryName", NullValueHandling = NullValueHandling.Ignore)]
        public string SecondaryName { get; set; }

        [JsonProperty("NormalsName", NullValueHandling = NullValueHandling.Ignore)]
        public string NormalsName { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("TextureName", NullValueHandling = NullValueHandling.Ignore)]
        public string TextureName { get; set; }

        [JsonProperty("Silhouette", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Silhouette { get; set; }
    }

    public partial class Property165Class
    {
        [JsonProperty("LODCutoff", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? LodCutoff { get; set; }

        [JsonProperty("ShaderName", NullValueHandling = NullValueHandling.Ignore)]
        public ShaderName? ShaderName { get; set; }

        [JsonProperty("LookupName", NullValueHandling = NullValueHandling.Ignore)]
        public LookupName? LookupName { get; set; }

        [JsonProperty("Scrolling", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Scrolling { get; set; }

        [JsonProperty("SecondaryName", NullValueHandling = NullValueHandling.Ignore)]
        public string SecondaryName { get; set; }

        [JsonProperty("AlbedoName", NullValueHandling = NullValueHandling.Ignore)]
        public string AlbedoName { get; set; }

        [JsonProperty("SpecularName", NullValueHandling = NullValueHandling.Ignore)]
        public string SpecularName { get; set; }
    }

    public partial class Property23Class
    {
        [JsonProperty("LODCutoff", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? LodCutoff { get; set; }

        [JsonProperty("ShaderName", NullValueHandling = NullValueHandling.Ignore)]
        public ShaderName? ShaderName { get; set; }
    }

    public partial class Property18Class
    {
        [JsonProperty("AlbedoName", NullValueHandling = NullValueHandling.Ignore)]
        public string AlbedoName { get; set; }

        [JsonProperty("LODCutoff", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? LodCutoff { get; set; }

        [JsonProperty("MeshName", NullValueHandling = NullValueHandling.Ignore)]
        public string MeshName { get; set; }

        [JsonProperty("Shader", NullValueHandling = NullValueHandling.Ignore)]
        public Shader? Shader { get; set; }
    }

    public partial class LoDsProperty232
    {
        [JsonProperty("ShaderName", NullValueHandling = NullValueHandling.Ignore)]
        public ShaderName? ShaderName { get; set; }
    }

    public partial class Property68
    {
        [JsonProperty("LODCutoff", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? LodCutoff { get; set; }

        [JsonProperty("Scrolling", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Scrolling { get; set; }

        [JsonProperty("ShaderName", NullValueHandling = NullValueHandling.Ignore)]
        public ShaderName? ShaderName { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("AlbedoName", NullValueHandling = NullValueHandling.Ignore)]
        public string AlbedoName { get; set; }

        [JsonProperty("MeshName", NullValueHandling = NullValueHandling.Ignore)]
        public string MeshName { get; set; }

        [JsonProperty("Shader", NullValueHandling = NullValueHandling.Ignore)]
        public Shader? Shader { get; set; }

        [JsonProperty("SpecularName", NullValueHandling = NullValueHandling.Ignore)]
        public string SpecularName { get; set; }

        [JsonProperty("NormalsName", NullValueHandling = NullValueHandling.Ignore)]
        public string NormalsName { get; set; }
    }

    public partial class MotionAdjustment
    {
        [JsonProperty("Sliderlanding", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? Sliderlanding { get; set; }

        [JsonProperty("Sliderstatic", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Sliderstatic { get; set; }

        [JsonProperty("Yoffsetinmotion", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? Yoffsetinmotion { get; set; }

        [JsonProperty("Yoffsetlanding", NullValueHandling = NullValueHandling.Ignore)]
        public string Yoffsetlanding { get; set; }

        [JsonProperty("slideinmotion", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? Slideinmotion { get; set; }
    }

    public partial class MotionChangeEffects
    {
        [JsonProperty("SubBottomUp", NullValueHandling = NullValueHandling.Ignore)]
        public SubBottomUp SubBottomUp { get; set; }

        [JsonProperty("WaterTopDown", NullValueHandling = NullValueHandling.Ignore)]
        public WaterTopDown WaterTopDown { get; set; }
    }

    public partial class SubBottomUp
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public SubBottomUpEffects Effects { get; set; }
    }

    public partial class SubBottomUpEffects
    {
        [JsonProperty("Property161", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property161 { get; set; }

        [JsonProperty("Property180", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property180 { get; set; }

        [JsonProperty("Property151", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property151 { get; set; }

        [JsonProperty("Property156", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property156 { get; set; }

        [JsonProperty("Property196", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property196 { get; set; }

        [JsonProperty("Property159", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property159 { get; set; }

        [JsonProperty("Property166", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property166 { get; set; }

        [JsonProperty("Property150", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property150 { get; set; }

        [JsonProperty("Property160", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property160 { get; set; }

        [JsonProperty("Property157", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property157 { get; set; }

        [JsonProperty("Property153", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property153 { get; set; }

        [JsonProperty("Property198", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property198 { get; set; }
    }

    public partial class WaterTopDown
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public WaterTopDownEffects Effects { get; set; }
    }

    public partial class WaterTopDownEffects
    {
        [JsonProperty("Property171", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property171 { get; set; }

        [JsonProperty("Property191", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property191 { get; set; }

        [JsonProperty("Property161", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property161 { get; set; }

        [JsonProperty("Property166", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property166 { get; set; }

        [JsonProperty("Property207", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property207 { get; set; }

        [JsonProperty("Property169", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property169 { get; set; }

        [JsonProperty("Property180", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property180 { get; set; }

        [JsonProperty("Property160", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property160 { get; set; }

        [JsonProperty("Property170", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property170 { get; set; }

        [JsonProperty("Property167", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property167 { get; set; }

        [JsonProperty("Property163", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property163 { get; set; }

        [JsonProperty("Property208", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property208 { get; set; }
    }

    public partial class MovementEffectsClass
    {
        [JsonProperty("Air", NullValueHandling = NullValueHandling.Ignore)]
        public MovementEffectsAir Air { get; set; }

        [JsonProperty("Land", NullValueHandling = NullValueHandling.Ignore)]
        public MovementEffectsLand Land { get; set; }

        [JsonProperty("Water", NullValueHandling = NullValueHandling.Ignore)]
        public MovementEffectsWater Water { get; set; }

        [JsonProperty("BeamExhaust", NullValueHandling = NullValueHandling.Ignore)]
        public BeamExhaust BeamExhaust { get; set; }

        [JsonProperty("Seabed", NullValueHandling = NullValueHandling.Ignore)]
        public MovementEffectsSeabed Seabed { get; set; }

        [JsonProperty("Sub", NullValueHandling = NullValueHandling.Ignore)]
        public MovementEffectsSub Sub { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("HeadRotationMax", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadRotationMax { get; set; }

        [JsonProperty("WheelRotationMax", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WheelRotationMax { get; set; }

        [JsonProperty("Crush", NullValueHandling = NullValueHandling.Ignore)]
        public Crush Crush { get; set; }

        [JsonProperty("JetRotationMax", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? JetRotationMax { get; set; }
    }

    public partial class MovementEffectsAir
    {
        [JsonProperty("Contrails", NullValueHandling = NullValueHandling.Ignore)]
        public Contrails Contrails { get; set; }

        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public IndecentEffects Effects { get; set; }
    }

    public partial class Contrails
    {
        [JsonProperty("Bones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Bones { get; set; }

        [JsonProperty("ZOffset", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ZOffset { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }
    }

    public partial class IndecentEffects
    {
        [JsonProperty("Property180", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property180 { get; set; }

        [JsonProperty("Property159", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property159 { get; set; }

        [JsonProperty("Property170", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property170 { get; set; }

        [JsonProperty("Property169", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property169 { get; set; }

        [JsonProperty("Property173", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property173 { get; set; }

        [JsonProperty("Property151", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property151 { get; set; }

        [JsonProperty("Property171", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property171 { get; set; }

        [JsonProperty("Property157", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property157 { get; set; }

        [JsonProperty("Property175", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property175 { get; set; }

        [JsonProperty("Property187", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property187 { get; set; }

        [JsonProperty("Property172", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property172 { get; set; }

        [JsonProperty("Property176", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property176 { get; set; }

        [JsonProperty("Property163", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property163 { get; set; }

        [JsonProperty("Property181", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property181 { get; set; }

        [JsonProperty("Property188", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property188 { get; set; }

        [JsonProperty("Property174", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property174 { get; set; }

        [JsonProperty("Property179", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property179 { get; set; }

        [JsonProperty("Property190", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property190 { get; set; }

        [JsonProperty("Property198", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property198 { get; set; }

        [JsonProperty("Property183", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property183 { get; set; }

        [JsonProperty("Property189", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property189 { get; set; }

        [JsonProperty("Property195", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property195 { get; set; }

        [JsonProperty("Property178", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property178 { get; set; }

        [JsonProperty("Property185", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property185 { get; set; }
    }

    public partial class BeamExhaust
    {
        [JsonProperty("Bones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Bones { get; set; }

        [JsonProperty("Cruise", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Cruise { get; set; }

        [JsonProperty("Idle", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Idle { get; set; }

        [JsonProperty("Landed", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Landed { get; set; }

        [JsonProperty("Scale", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? Scale { get; set; }
    }

    public partial class Crush
    {
        [JsonProperty("Bones", NullValueHandling = NullValueHandling.Ignore)]
        public CrushBones Bones { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        public Damage Damage { get; set; }
    }

    public partial class CrushBones
    {
        [JsonProperty("Property219", NullValueHandling = NullValueHandling.Ignore)]
        public Property211Class Property219 { get; set; }

        [JsonProperty("Property227", NullValueHandling = NullValueHandling.Ignore)]
        public Property211Class Property227 { get; set; }

        [JsonProperty("Property211", NullValueHandling = NullValueHandling.Ignore)]
        public Property211Class Property211 { get; set; }
    }

    public partial class Property211Class
    {
        [JsonProperty("BoneName", NullValueHandling = NullValueHandling.Ignore)]
        public string BoneName { get; set; }

        [JsonProperty("Offset", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(DecodeArrayConverter))]
        public List<long> Offset { get; set; }
    }

    public partial class Damage
    {
        [JsonProperty("Amount", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Amount { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("Interval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Interval { get; set; }

        [JsonProperty("Radius", NullValueHandling = NullValueHandling.Ignore)]
        public string Radius { get; set; }

        [JsonProperty("Type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }
    }

    public partial class MovementEffectsLand
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public LandEffectsClass Effects { get; set; }

        [JsonProperty("Treads", NullValueHandling = NullValueHandling.Ignore)]
        public LandTreads Treads { get; set; }

        [JsonProperty("Footfall", NullValueHandling = NullValueHandling.Ignore)]
        public Footfall Footfall { get; set; }

        [JsonProperty("CameraShake", NullValueHandling = NullValueHandling.Ignore)]
        public CameraShake CameraShake { get; set; }
    }

    public partial class CameraShake
    {
        [JsonProperty("Interval", NullValueHandling = NullValueHandling.Ignore)]
        public string Interval { get; set; }

        [JsonProperty("MaxShakeEpicenter", NullValueHandling = NullValueHandling.Ignore)]
        public string MaxShakeEpicenter { get; set; }

        [JsonProperty("MinShakeAtRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinShakeAtRadius { get; set; }

        [JsonProperty("Radius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Radius { get; set; }
    }

    public partial class LandEffectsClass
    {
        [JsonProperty("Property105", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property105 { get; set; }

        [JsonProperty("Property111", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property111 { get; set; }

        [JsonProperty("Property108", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property108 { get; set; }

        [JsonProperty("Property113", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property113 { get; set; }

        [JsonProperty("Property55", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property55 { get; set; }

        [JsonProperty("Property61", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property61 { get; set; }

        [JsonProperty("Property68", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property68 { get; set; }

        [JsonProperty("Property169", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property169 { get; set; }

        [JsonProperty("Property180", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property180 { get; set; }

        [JsonProperty("Property167", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property167 { get; set; }

        [JsonProperty("Property198", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property198 { get; set; }

        [JsonProperty("Property117", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property117 { get; set; }

        [JsonProperty("Property123", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property123 { get; set; }

        [JsonProperty("Property86", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property86 { get; set; }

        [JsonProperty("Property88", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property88 { get; set; }

        [JsonProperty("Property160", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property160 { get; set; }

        [JsonProperty("Property166", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property166 { get; set; }

        [JsonProperty("Property103", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property103 { get; set; }

        [JsonProperty("Property99", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property99 { get; set; }

        [JsonProperty("Property106", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property106 { get; set; }

        [JsonProperty("Property112", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property112 { get; set; }

        [JsonProperty("Property119", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property119 { get; set; }

        [JsonProperty("Property157", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property157 { get; set; }

        [JsonProperty("Property163", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property163 { get; set; }

        [JsonProperty("Property204", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property204 { get; set; }

        [JsonProperty("Property137", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property137 { get; set; }

        [JsonProperty("Property85", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property85 { get; set; }

        [JsonProperty("Property125", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property125 { get; set; }

        [JsonProperty("Property131", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property131 { get; set; }

        [JsonProperty("Property66", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property66 { get; set; }

        [JsonProperty("Property225", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property225 { get; set; }

        [JsonProperty("Property92", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property92 { get; set; }

        [JsonProperty("Property87", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property87 { get; set; }

        [JsonProperty("Property89", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property89 { get; set; }

        [JsonProperty("Property143", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property143 { get; set; }

        [JsonProperty("Property101", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property101 { get; set; }

        [JsonProperty("Property151", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property151 { get; set; }

        [JsonProperty("Property158", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property158 { get; set; }

        [JsonProperty("Property142", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property142 { get; set; }

        [JsonProperty("Property195", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property195 { get; set; }

        [JsonProperty("Property126", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property126 { get; set; }

        [JsonProperty("Property97", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property97 { get; set; }

        [JsonProperty("Property141", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property141 { get; set; }

        [JsonProperty("Property229", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property229 { get; set; }

        [JsonProperty("Property236", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property236 { get; set; }

        [JsonProperty("Property245", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property245 { get; set; }

        [JsonProperty("Property65", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property65 { get; set; }

        [JsonProperty("Property91", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property91 { get; set; }

        [JsonProperty("Property83", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property83 { get; set; }

        [JsonProperty("Property129", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property129 { get; set; }

        [JsonProperty("Property95", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property95 { get; set; }

        [JsonProperty("Property122", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property122 { get; set; }

        [JsonProperty("Property82", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property82 { get; set; }

        [JsonProperty("Property94", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property94 { get; set; }

        [JsonProperty("Property128", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property128 { get; set; }

        [JsonProperty("Property191", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property191 { get; set; }

        [JsonProperty("Property80", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property80 { get; set; }

        [JsonProperty("Property127", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property127 { get; set; }

        [JsonProperty("Property130", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property130 { get; set; }

        [JsonProperty("Property136", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property136 { get; set; }

        [JsonProperty("Property155", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property155 { get; set; }

        [JsonProperty("Property120", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property120 { get; set; }

        [JsonProperty("Property124", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property124 { get; set; }

        [JsonProperty("Property181", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property181 { get; set; }

        [JsonProperty("Property186", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property186 { get; set; }

        [JsonProperty("Property187", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property187 { get; set; }

        [JsonProperty("Property221", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property221 { get; set; }

        [JsonProperty("Property138", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property138 { get; set; }

        [JsonProperty("Property145", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property145 { get; set; }

        [JsonProperty("Property114", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property114 { get; set; }

        [JsonProperty("Property161", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property161 { get; set; }

        [JsonProperty("Property168", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property168 { get; set; }

        [JsonProperty("Property211", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property211 { get; set; }

        [JsonProperty("Property110", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property110 { get; set; }

        [JsonProperty("Property152", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property152 { get; set; }

        [JsonProperty("Property159", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property159 { get; set; }

        [JsonProperty("Property179", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property179 { get; set; }

        [JsonProperty("Property90", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property90 { get; set; }

        [JsonProperty("Property116", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property116 { get; set; }

        [JsonProperty("Property109", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property109 { get; set; }

        [JsonProperty("Property241", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property241 { get; set; }

        [JsonProperty("Property400", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property400 { get; set; }

        [JsonProperty("Property190", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property190 { get; set; }

        [JsonProperty("Property144", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property144 { get; set; }

        [JsonProperty("Property183", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property183 { get; set; }

        [JsonProperty("Property118", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property118 { get; set; }

        [JsonProperty("Property93", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property93 { get; set; }

        [JsonProperty("Property202", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property202 { get; set; }

        [JsonProperty("Property189", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property189 { get; set; }

        [JsonProperty("Property193", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property193 { get; set; }

        [JsonProperty("Property58", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property58 { get; set; }
    }

    public partial class Footfall
    {
        [JsonProperty("Bones", NullValueHandling = NullValueHandling.Ignore)]
        public FootfallBones Bones { get; set; }

        [JsonProperty("CameraShake", NullValueHandling = NullValueHandling.Ignore)]
        public CameraShake CameraShake { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        public Damage Damage { get; set; }
    }

    public partial class FootfallBones
    {
        [JsonProperty("Property209", NullValueHandling = NullValueHandling.Ignore)]
        public Property214Class Property209 { get; set; }

        [JsonProperty("Property225", NullValueHandling = NullValueHandling.Ignore)]
        public Property214Class Property225 { get; set; }

        [JsonProperty("Property215", NullValueHandling = NullValueHandling.Ignore)]
        public Property201Class Property215 { get; set; }

        [JsonProperty("Property228", NullValueHandling = NullValueHandling.Ignore)]
        public Property201Class Property228 { get; set; }

        [JsonProperty("Property118", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Class Property118 { get; set; }

        [JsonProperty("Property140", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Class Property140 { get; set; }

        [JsonProperty("Property235", NullValueHandling = NullValueHandling.Ignore)]
        public Property214Class Property235 { get; set; }

        [JsonProperty("Property251", NullValueHandling = NullValueHandling.Ignore)]
        public Property214Class Property251 { get; set; }

        [JsonProperty("Property205", NullValueHandling = NullValueHandling.Ignore)]
        public Property201Class Property205 { get; set; }

        [JsonProperty("Property218", NullValueHandling = NullValueHandling.Ignore)]
        public Property208Class Property218 { get; set; }

        [JsonProperty("Property214", NullValueHandling = NullValueHandling.Ignore)]
        public Property214Class Property214 { get; set; }

        [JsonProperty("Property230", NullValueHandling = NullValueHandling.Ignore)]
        public Property214Class Property230 { get; set; }

        [JsonProperty("Property201", NullValueHandling = NullValueHandling.Ignore)]
        public Property201Class Property201 { get; set; }

        [JsonProperty("Property151", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Class Property151 { get; set; }

        [JsonProperty("Property162", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Class Property162 { get; set; }

        [JsonProperty("Property173", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Class Property173 { get; set; }

        [JsonProperty("Property184", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Class Property184 { get; set; }

        [JsonProperty("Property195", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Class Property195 { get; set; }

        [JsonProperty("Property193", NullValueHandling = NullValueHandling.Ignore)]
        public Property208Class Property193 { get; set; }

        [JsonProperty("Property198", NullValueHandling = NullValueHandling.Ignore)]
        public Property208Class Property198 { get; set; }

        [JsonProperty("Property203", NullValueHandling = NullValueHandling.Ignore)]
        public Property208Class Property203 { get; set; }

        [JsonProperty("Property208", NullValueHandling = NullValueHandling.Ignore)]
        public Property208Class Property208 { get; set; }

        [JsonProperty("Property213", NullValueHandling = NullValueHandling.Ignore)]
        public Property208Class Property213 { get; set; }

        [JsonProperty("Property153", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Class Property153 { get; set; }

        [JsonProperty("Property165", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Class Property165 { get; set; }

        [JsonProperty("Property177", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Class Property177 { get; set; }

        [JsonProperty("Property189", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Class Property189 { get; set; }

        [JsonProperty("Property232", NullValueHandling = NullValueHandling.Ignore)]
        public Property214Class Property232 { get; set; }

        [JsonProperty("Property248", NullValueHandling = NullValueHandling.Ignore)]
        public Property214Class Property248 { get; set; }

        [JsonProperty("Property119", NullValueHandling = NullValueHandling.Ignore)]
        public Property214Class Property119 { get; set; }

        [JsonProperty("Property125", NullValueHandling = NullValueHandling.Ignore)]
        public Property214Class Property125 { get; set; }

        [JsonProperty("Property222", NullValueHandling = NullValueHandling.Ignore)]
        public Property214Class Property222 { get; set; }

        [JsonProperty("Property238", NullValueHandling = NullValueHandling.Ignore)]
        public Property214Class Property238 { get; set; }

        [JsonProperty("Property133", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Class Property133 { get; set; }

        [JsonProperty("Property155", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Class Property155 { get; set; }

        [JsonProperty("Property267", NullValueHandling = NullValueHandling.Ignore)]
        public Property214Class Property267 { get; set; }

        [JsonProperty("Property410", NullValueHandling = NullValueHandling.Ignore)]
        public Property201Class Property410 { get; set; }

        [JsonProperty("Property423", NullValueHandling = NullValueHandling.Ignore)]
        public Property201Class Property423 { get; set; }
    }

    public partial class Property118Class
    {
        [JsonProperty("FootBone", NullValueHandling = NullValueHandling.Ignore)]
        public string FootBone { get; set; }

        [JsonProperty("HipBone", NullValueHandling = NullValueHandling.Ignore)]
        public string HipBone { get; set; }

        [JsonProperty("KneeBone", NullValueHandling = NullValueHandling.Ignore)]
        public string KneeBone { get; set; }

        [JsonProperty("MaxFootFall", NullValueHandling = NullValueHandling.Ignore)]
        public string MaxFootFall { get; set; }

        [JsonProperty("Offset", NullValueHandling = NullValueHandling.Ignore)]
        public Offset Offset { get; set; }

        [JsonProperty("StraightLegs", NullValueHandling = NullValueHandling.Ignore)]
        public bool? StraightLegs { get; set; }

        [JsonProperty("Tread", NullValueHandling = NullValueHandling.Ignore)]
        public Tread Tread { get; set; }

        [JsonProperty("Type", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Type? Type { get; set; }

        [JsonProperty("Scale", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? Scale { get; set; }
    }

    public partial class Offset
    {
        [JsonProperty("z", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Z { get; set; }
    }

    public partial class Tread
    {
        [JsonProperty("TreadLifeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TreadLifeTime { get; set; }

        [JsonProperty("TreadMarks", NullValueHandling = NullValueHandling.Ignore)]
        public TreadTreadMarks? TreadMarks { get; set; }

        [JsonProperty("TreadMarksSizeX", NullValueHandling = NullValueHandling.Ignore)]
        public string TreadMarksSizeX { get; set; }

        [JsonProperty("TreadMarksSizeZ", NullValueHandling = NullValueHandling.Ignore)]
        public string TreadMarksSizeZ { get; set; }

        [JsonProperty("TreadOffset", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TreadOffset { get; set; }
    }

    public partial class Property214Class
    {
        [JsonProperty("FootBone", NullValueHandling = NullValueHandling.Ignore)]
        public string FootBone { get; set; }

        [JsonProperty("HipBone", NullValueHandling = NullValueHandling.Ignore)]
        public string HipBone { get; set; }

        [JsonProperty("KneeBone", NullValueHandling = NullValueHandling.Ignore)]
        public string KneeBone { get; set; }

        [JsonProperty("Type", NullValueHandling = NullValueHandling.Ignore)]
        public Property209Type? Type { get; set; }

        [JsonProperty("Tread", NullValueHandling = NullValueHandling.Ignore)]
        public Tread Tread { get; set; }
    }

    public partial class Property208Class
    {
        [JsonProperty("FootBone", NullValueHandling = NullValueHandling.Ignore)]
        public string FootBone { get; set; }

        [JsonProperty("Scale", NullValueHandling = NullValueHandling.Ignore)]
        public string Scale { get; set; }

        [JsonProperty("Type", NullValueHandling = NullValueHandling.Ignore)]
        public Property118Type? Type { get; set; }

        [JsonProperty("Tread", NullValueHandling = NullValueHandling.Ignore)]
        public Tread Tread { get; set; }
    }

    public partial class Property201Class
    {
        [JsonProperty("FootBone", NullValueHandling = NullValueHandling.Ignore)]
        public string FootBone { get; set; }

        [JsonProperty("Tread", NullValueHandling = NullValueHandling.Ignore)]
        public Tread Tread { get; set; }
    }

    public partial class LandTreads
    {
        [JsonProperty("ScrollTreads", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ScrollTreads { get; set; }

        [JsonProperty("TreadMarks", NullValueHandling = NullValueHandling.Ignore)]
        public TreadMarksClass TreadMarks { get; set; }

        [JsonProperty("ScrollMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ScrollMultiplier { get; set; }
    }

    public partial class TreadMarksClass
    {
        [JsonProperty("Property78", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property78 { get; set; }

        [JsonProperty("Property96", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property96 { get; set; }

        [JsonProperty("Property97", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property97 { get; set; }

        [JsonProperty("Property110", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property110 { get; set; }

        [JsonProperty("Property134", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property134 { get; set; }

        [JsonProperty("Property95", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property95 { get; set; }

        [JsonProperty("Property77", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property77 { get; set; }

        [JsonProperty("Property102", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property102 { get; set; }

        [JsonProperty("Property98", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property98 { get; set; }

        [JsonProperty("Property100", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property100 { get; set; }

        [JsonProperty("Property154", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property154 { get; set; }

        [JsonProperty("Property99", NullValueHandling = NullValueHandling.Ignore)]
        public Property99 Property99 { get; set; }

        [JsonProperty("Property153", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property153 { get; set; }

        [JsonProperty("Property108", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property108 { get; set; }

        [JsonProperty("Property152", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property152 { get; set; }

        [JsonProperty("Property255", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property255 { get; set; }

        [JsonProperty("Property266", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property266 { get; set; }

        [JsonProperty("Property76", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property76 { get; set; }

        [JsonProperty("Property140", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property140 { get; set; }

        [JsonProperty("Property93", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property93 { get; set; }

        [JsonProperty("Property105", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property105 { get; set; }

        [JsonProperty("Property90", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property90 { get; set; }

        [JsonProperty("Property139", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property139 { get; set; }

        [JsonProperty("Property166", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property166 { get; set; }

        [JsonProperty("Property127", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property127 { get; set; }

        [JsonProperty("Property138", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property138 { get; set; }

        [JsonProperty("Property149", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property149 { get; set; }

        [JsonProperty("Property160", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property160 { get; set; }

        [JsonProperty("Property128", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property128 { get; set; }

        [JsonProperty("Property119", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property119 { get; set; }

        [JsonProperty("Property130", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property130 { get; set; }

        [JsonProperty("Property120", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property120 { get; set; }

        [JsonProperty("Property94", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property94 { get; set; }

        [JsonProperty("Property131", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property131 { get; set; }

        [JsonProperty("Property112", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property112 { get; set; }

        [JsonProperty("Property104", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property104 { get; set; }

        [JsonProperty("Property116", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property116 { get; set; }

        [JsonProperty("Property101", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property101 { get; set; }

        [JsonProperty("Property69", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property69 { get; set; }

        [JsonProperty("Property81", NullValueHandling = NullValueHandling.Ignore)]
        public Property255Class Property81 { get; set; }
    }

    public partial class Property255Class
    {
        [JsonProperty("BoneName", NullValueHandling = NullValueHandling.Ignore)]
        public string BoneName { get; set; }

        [JsonProperty("TreadMarks", NullValueHandling = NullValueHandling.Ignore)]
        public Property100TreadMarks? TreadMarks { get; set; }

        [JsonProperty("TreadMarksInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TreadMarksInterval { get; set; }

        [JsonProperty("TreadMarksSizeX", NullValueHandling = NullValueHandling.Ignore)]
        public string TreadMarksSizeX { get; set; }

        [JsonProperty("TreadMarksSizeZ", NullValueHandling = NullValueHandling.Ignore)]
        public string TreadMarksSizeZ { get; set; }

        [JsonProperty("TreadOffset", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TreadOffset { get; set; }

        [JsonProperty("TreadLifeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TreadLifeTime { get; set; }
    }

    public partial class Property99
    {
        [JsonProperty("TreadMarks", NullValueHandling = NullValueHandling.Ignore)]
        public Property100TreadMarks? TreadMarks { get; set; }

        [JsonProperty("TreadMarksInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TreadMarksInterval { get; set; }

        [JsonProperty("TreadMarksSizeX", NullValueHandling = NullValueHandling.Ignore)]
        public string TreadMarksSizeX { get; set; }

        [JsonProperty("TreadMarksSizeZ", NullValueHandling = NullValueHandling.Ignore)]
        public string TreadMarksSizeZ { get; set; }

        [JsonProperty("TreadOffset", NullValueHandling = NullValueHandling.Ignore)]
        public TreadOffset? TreadOffset { get; set; }

        [JsonProperty("BoneName", NullValueHandling = NullValueHandling.Ignore)]
        public string BoneName { get; set; }
    }

    public partial class MovementEffectsSeabed
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public HilariousEffects Effects { get; set; }

        [JsonProperty("Treads", NullValueHandling = NullValueHandling.Ignore)]
        public SeabedTreads Treads { get; set; }
    }

    public partial class HilariousEffects
    {
        [JsonProperty("Property246", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property246 { get; set; }

        [JsonProperty("Property272", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property272 { get; set; }

        [JsonProperty("Property236", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property236 { get; set; }

        [JsonProperty("Property282", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property282 { get; set; }

        [JsonProperty("Property251", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property251 { get; set; }

        [JsonProperty("Property232", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property232 { get; set; }

        [JsonProperty("Property269", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property269 { get; set; }

        [JsonProperty("Property259", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property259 { get; set; }

        [JsonProperty("Property176", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property176 { get; set; }

        [JsonProperty("Property288", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property288 { get; set; }

        [JsonProperty("Property441", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property441 { get; set; }
    }

    public partial class SeabedTreads
    {
        [JsonProperty("ScrollTreads", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ScrollTreads { get; set; }
    }

    public partial class MovementEffectsSub
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public SubEffects Effects { get; set; }
    }

    public partial class SubEffects
    {
        [JsonProperty("Property183", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property183 { get; set; }

        [JsonProperty("Property204", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property204 { get; set; }

        [JsonProperty("Property173", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property173 { get; set; }

        [JsonProperty("Property178", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property178 { get; set; }

        [JsonProperty("Property220", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property220 { get; set; }

        [JsonProperty("Property181", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property181 { get; set; }

        [JsonProperty("Property196", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property196 { get; set; }

        [JsonProperty("Property172", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property172 { get; set; }

        [JsonProperty("Property182", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property182 { get; set; }

        [JsonProperty("Property179", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property179 { get; set; }

        [JsonProperty("Property175", NullValueHandling = NullValueHandling.Ignore)]
        public EffectsProperty55 Property175 { get; set; }
    }

    public partial class MovementEffectsWater
    {
        [JsonProperty("Effects", NullValueHandling = NullValueHandling.Ignore)]
        public AmbitiousEffects Effects { get; set; }
    }

    public partial class AmbitiousEffects
    {
        [JsonProperty("Property126", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property126 { get; set; }

        [JsonProperty("Property77", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property77 { get; set; }

        [JsonProperty("Property139", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property139 { get; set; }

        [JsonProperty("Property108", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property108 { get; set; }

        [JsonProperty("Property109", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property109 { get; set; }

        [JsonProperty("Property176", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property176 { get; set; }

        [JsonProperty("Property183", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property183 { get; set; }

        [JsonProperty("Property127", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property127 { get; set; }

        [JsonProperty("Property135", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property135 { get; set; }

        [JsonProperty("Property173", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property173 { get; set; }

        [JsonProperty("Property181", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property181 { get; set; }

        [JsonProperty("Property146", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property146 { get; set; }

        [JsonProperty("Property180", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property180 { get; set; }

        [JsonProperty("Property118", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property118 { get; set; }

        [JsonProperty("Property128", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property128 { get; set; }

        [JsonProperty("Property195", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property195 { get; set; }

        [JsonProperty("Property202", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property202 { get; set; }

        [JsonProperty("Property209", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property209 { get; set; }

        [JsonProperty("Property136", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property136 { get; set; }

        [JsonProperty("Property138", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property138 { get; set; }

        [JsonProperty("Property207", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property207 { get; set; }

        [JsonProperty("Property219", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property219 { get; set; }

        [JsonProperty("Property89", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property89 { get; set; }

        [JsonProperty("Property215", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property215 { get; set; }

        [JsonProperty("Property227", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property227 { get; set; }

        [JsonProperty("Property239", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property239 { get; set; }

        [JsonProperty("Property171", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property171 { get; set; }

        [JsonProperty("Property178", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property178 { get; set; }

        [JsonProperty("Property185", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property185 { get; set; }

        [JsonProperty("Property187", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property187 { get; set; }

        [JsonProperty("Property194", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property194 { get; set; }

        [JsonProperty("Property170", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property170 { get; set; }

        [JsonProperty("Property177", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property177 { get; set; }

        [JsonProperty("Property184", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property184 { get; set; }

        [JsonProperty("Property169", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property169 { get; set; }

        [JsonProperty("Property132", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property132 { get; set; }

        [JsonProperty("Property140", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property140 { get; set; }

        [JsonProperty("Property147", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property147 { get; set; }

        [JsonProperty("Property154", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property154 { get; set; }

        [JsonProperty("Property142", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property142 { get; set; }

        [JsonProperty("Property149", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property149 { get; set; }

        [JsonProperty("Property156", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property156 { get; set; }

        [JsonProperty("Property191", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property191 { get; set; }

        [JsonProperty("Property198", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property198 { get; set; }

        [JsonProperty("Property189", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property189 { get; set; }

        [JsonProperty("Property196", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property196 { get; set; }

        [JsonProperty("Property203", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property203 { get; set; }

        [JsonProperty("Property234", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property234 { get; set; }

        [JsonProperty("Property246", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property246 { get; set; }

        [JsonProperty("Property258", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property258 { get; set; }

        [JsonProperty("Property157", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property157 { get; set; }

        [JsonProperty("Property164", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property164 { get; set; }

        [JsonProperty("Property163", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property163 { get; set; }

        [JsonProperty("Property137", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property137 { get; set; }

        [JsonProperty("Property228", NullValueHandling = NullValueHandling.Ignore)]
        public Property150 Property228 { get; set; }

        [JsonProperty("Property240", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property240 { get; set; }

        [JsonProperty("Property155", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property155 { get; set; }

        [JsonProperty("Property161", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property161 { get; set; }

        [JsonProperty("Property192", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property192 { get; set; }

        [JsonProperty("Property199", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property199 { get; set; }

        [JsonProperty("Property206", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property206 { get; set; }

        [JsonProperty("Property153", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property153 { get; set; }

        [JsonProperty("Property141", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property141 { get; set; }

        [JsonProperty("Property148", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property148 { get; set; }

        [JsonProperty("Property217", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property217 { get; set; }

        [JsonProperty("Property225", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property225 { get; set; }

        [JsonProperty("Property111", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property111 { get; set; }

        [JsonProperty("Property152", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property152 { get; set; }

        [JsonProperty("Property159", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property159 { get; set; }

        [JsonProperty("Property121", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property121 { get; set; }

        [JsonProperty("Property133", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property133 { get; set; }

        [JsonProperty("Property120", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property120 { get; set; }

        [JsonProperty("Property204", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property204 { get; set; }

        [JsonProperty("Property174", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property174 { get; set; }

        [JsonProperty("Property100", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property100 { get; set; }

        [JsonProperty("Property158", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property158 { get; set; }

        [JsonProperty("Property143", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property143 { get; set; }

        [JsonProperty("Property186", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property186 { get; set; }

        [JsonProperty("Property193", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property193 { get; set; }

        [JsonProperty("Property200", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property200 { get; set; }

        [JsonProperty("Property113", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property113 { get; set; }

        [JsonProperty("Property129", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property129 { get; set; }

        [JsonProperty("Property160", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property160 { get; set; }

        [JsonProperty("Property167", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property167 { get; set; }

        [JsonProperty("Property231", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property231 { get; set; }

        [JsonProperty("Property238", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property238 { get; set; }

        [JsonProperty("Property245", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property245 { get; set; }

        [JsonProperty("Property226", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property226 { get; set; }

        [JsonProperty("Property233", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property233 { get; set; }

        [JsonProperty("Property166", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property166 { get; set; }

        [JsonProperty("Property259", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property259 { get; set; }

        [JsonProperty("Property230", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property230 { get; set; }

        [JsonProperty("Property244", NullValueHandling = NullValueHandling.Ignore)]
        public Property196Class Property244 { get; set; }
    }

    public partial class PingPongScroller
    {
        [JsonProperty("Ping1", NullValueHandling = NullValueHandling.Ignore)]
        public string Ping1 { get; set; }

        [JsonProperty("Ping1Speed", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? Ping1Speed { get; set; }

        [JsonProperty("Ping2", NullValueHandling = NullValueHandling.Ignore)]
        public string Ping2 { get; set; }

        [JsonProperty("Ping2Speed", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? Ping2Speed { get; set; }

        [JsonProperty("Pong1", NullValueHandling = NullValueHandling.Ignore)]
        public string Pong1 { get; set; }

        [JsonProperty("Pong1Speed", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? Pong1Speed { get; set; }

        [JsonProperty("Pong2", NullValueHandling = NullValueHandling.Ignore)]
        public string Pong2 { get; set; }

        [JsonProperty("Pong2Speed", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? Pong2Speed { get; set; }
    }

    public partial class DisplayProperty100
    {
        [JsonProperty("Animation", NullValueHandling = NullValueHandling.Ignore)]
        public string Animation { get; set; }

        [JsonProperty("Weight", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Weight { get; set; }

        [JsonProperty("Rate", NullValueHandling = NullValueHandling.Ignore)]
        public string Rate { get; set; }
    }

    public partial class Tarmac
    {
        [JsonProperty("Albedo", NullValueHandling = NullValueHandling.Ignore)]
        public Albedo? Albedo { get; set; }

        [JsonProperty("DeathLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DeathLifetime { get; set; }

        [JsonProperty("FadeOut", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FadeOut { get; set; }

        [JsonProperty("Length", NullValueHandling = NullValueHandling.Ignore)]
        public string Length { get; set; }

        [JsonProperty("Normal", NullValueHandling = NullValueHandling.Ignore)]
        public Normal? Normal { get; set; }

        [JsonProperty("Orientations", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(DecodeArrayConverter))]
        public List<long> Orientations { get; set; }

        [JsonProperty("RemoveWhenDead", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RemoveWhenDead { get; set; }

        [JsonProperty("Width", NullValueHandling = NullValueHandling.Ignore)]
        public string Width { get; set; }

        [JsonProperty("AlbedoKilled", NullValueHandling = NullValueHandling.Ignore)]
        public string AlbedoKilled { get; set; }
    }

    public partial class TeleportEffects
    {
        [JsonProperty("ChargeFxAtUnitBones", NullValueHandling = NullValueHandling.Ignore)]
        public ChargeFxAtUnitBones ChargeFxAtUnitBones { get; set; }

        [JsonProperty("PlayChargeFxAtDestination", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PlayChargeFxAtDestination { get; set; }

        [JsonProperty("PlayChargeFxAtUnit", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PlayChargeFxAtUnit { get; set; }

        [JsonProperty("PlayTeleportOutFx", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PlayTeleportOutFx { get; set; }

        [JsonProperty("PlayTeleportInFx", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PlayTeleportInFx { get; set; }

        [JsonProperty("FxOffsetX", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FxOffsetX { get; set; }

        [JsonProperty("FxOffsetY", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FxOffsetY { get; set; }

        [JsonProperty("FxOffsetZ", NullValueHandling = NullValueHandling.Ignore)]
        public string FxOffsetZ { get; set; }

        [JsonProperty("FxSizeX", NullValueHandling = NullValueHandling.Ignore)]
        public string FxSizeX { get; set; }

        [JsonProperty("FxSizeY", NullValueHandling = NullValueHandling.Ignore)]
        public string FxSizeY { get; set; }

        [JsonProperty("FxSizeZ", NullValueHandling = NullValueHandling.Ignore)]
        public string FxSizeZ { get; set; }
    }

    public partial class ChargeFxAtUnitBones
    {
        [JsonProperty("Property265", NullValueHandling = NullValueHandling.Ignore)]
        public Property270Class Property265 { get; set; }

        [JsonProperty("Property291", NullValueHandling = NullValueHandling.Ignore)]
        public Property270Class Property291 { get; set; }

        [JsonProperty("Property270", NullValueHandling = NullValueHandling.Ignore)]
        public Property270Class Property270 { get; set; }

        [JsonProperty("Property288", NullValueHandling = NullValueHandling.Ignore)]
        public Property270Class Property288 { get; set; }

        [JsonProperty("Property276", NullValueHandling = NullValueHandling.Ignore)]
        public Property270Class Property276 { get; set; }
    }

    public partial class Property270Class
    {
        [JsonProperty("Bone", NullValueHandling = NullValueHandling.Ignore)]
        public string Bone { get; set; }

        [JsonProperty("Offset", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Offset { get; set; }
    }

    public partial class WarpInEffect
    {
        [JsonProperty("HideBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> HideBones { get; set; }

        [JsonProperty("PhaseShieldMesh", NullValueHandling = NullValueHandling.Ignore)]
        public string PhaseShieldMesh { get; set; }
    }

    public partial class WaterAnimationDeath
    {
        [JsonProperty("Property254", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property254 { get; set; }

        [JsonProperty("Property260", NullValueHandling = NullValueHandling.Ignore)]
        public Property68Class Property260 { get; set; }
    }

    public partial class Economy
    {
        [JsonProperty("BuildCostEnergy", NullValueHandling = NullValueHandling.Ignore)]
        public string BuildCostEnergy { get; set; }

        [JsonProperty("BuildCostMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostMass { get; set; }

        [JsonProperty("BuildTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildTime { get; set; }

        [JsonProperty("TeleportEnergyMod", NullValueHandling = NullValueHandling.Ignore)]
        public string TeleportEnergyMod { get; set; }

        [JsonProperty("TeleportMassMod", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TeleportMassMod { get; set; }

        [JsonProperty("TeleportTimeMod", NullValueHandling = NullValueHandling.Ignore)]
        public string TeleportTimeMod { get; set; }

        [JsonProperty("BuildRate", NullValueHandling = NullValueHandling.Ignore)]
        public string BuildRate { get; set; }

        [JsonProperty("BuildableCategory", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> BuildableCategory { get; set; }

        [JsonProperty("RebuildBonusIds", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> RebuildBonusIds { get; set; }

        [JsonProperty("StorageEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? StorageEnergy { get; set; }

        [JsonProperty("StorageMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? StorageMass { get; set; }

        [JsonProperty("InitialRallyX", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialRallyX { get; set; }

        [JsonProperty("InitialRallyZ", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialRallyZ { get; set; }

        [JsonProperty("DifferentialUpgradeCostCalculation", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DifferentialUpgradeCostCalculation { get; set; }

        [JsonProperty("AdjacentStructureEnergyMod", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AdjacentStructureEnergyMod { get; set; }

        [JsonProperty("ProductionPerSecondEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProductionPerSecondEnergy { get; set; }

        [JsonProperty("MaintenanceConsumptionPerSecondEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaintenanceConsumptionPerSecondEnergy { get; set; }

        [JsonProperty("ProductionPerSecondMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProductionPerSecondMass { get; set; }

        [JsonProperty("AdjacentEnergyProductionMod", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AdjacentEnergyProductionMod { get; set; }

        [JsonProperty("AdjacentMassProductionMod", NullValueHandling = NullValueHandling.Ignore)]
        public string AdjacentMassProductionMod { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("MaxBuildDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string MaxBuildDistance { get; set; }

        [JsonProperty("NaturalProducer", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NaturalProducer { get; set; }

        [JsonProperty("NeedToFaceTargetToBuild", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedToFaceTargetToBuild { get; set; }

        [JsonProperty("SacrificeEnergyMult", NullValueHandling = NullValueHandling.Ignore)]
        public string SacrificeEnergyMult { get; set; }

        [JsonProperty("SacrificeMassMult", NullValueHandling = NullValueHandling.Ignore)]
        public string SacrificeMassMult { get; set; }

        [JsonProperty("BuildRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildRadius { get; set; }

        [JsonProperty("MinBuildTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinBuildTime { get; set; }

        [JsonProperty("ConsumptionPerSecondEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ConsumptionPerSecondEnergy { get; set; }

        [JsonProperty("ConsumptionPerSecondMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ConsumptionPerSecondMass { get; set; }

        [JsonProperty("MaxEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxEnergy { get; set; }

        [JsonProperty("MaxMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxMass { get; set; }

        [JsonProperty("InitialRemoteViewingEnergyDrain", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialRemoteViewingEnergyDrain { get; set; }

        [JsonProperty("EngineeringPods", NullValueHandling = NullValueHandling.Ignore)]
        public EngineeringPods EngineeringPods { get; set; }

        [JsonProperty("BuildUnit", NullValueHandling = NullValueHandling.Ignore)]
        public string BuildUnit { get; set; }
    }

    public partial class EngineeringPods
    {
        [JsonProperty("Property154", NullValueHandling = NullValueHandling.Ignore)]
        public Property145Class Property154 { get; set; }

        [JsonProperty("Property145", NullValueHandling = NullValueHandling.Ignore)]
        public Property145Class Property145 { get; set; }

        [JsonProperty("Property151", NullValueHandling = NullValueHandling.Ignore)]
        public Property145Class Property151 { get; set; }
    }

    public partial class Property145Class
    {
        [JsonProperty("CreateWithUnit", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CreateWithUnit { get; set; }

        [JsonProperty("PodAttachpoint", NullValueHandling = NullValueHandling.Ignore)]
        public string PodAttachpoint { get; set; }

        [JsonProperty("PodName", NullValueHandling = NullValueHandling.Ignore)]
        public string PodName { get; set; }

        [JsonProperty("PodUnitID", NullValueHandling = NullValueHandling.Ignore)]
        public string PodUnitId { get; set; }
    }

    public partial class EnhancementPresets
    {
        [JsonProperty("Engineer", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat Engineer { get; set; }

        [JsonProperty("NanoCombat", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat NanoCombat { get; set; }

        [JsonProperty("Rambo", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat Rambo { get; set; }

        [JsonProperty("RAS", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat Ras { get; set; }

        [JsonProperty("ShieldCombat", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat ShieldCombat { get; set; }

        [JsonProperty("SimpleCombat", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat SimpleCombat { get; set; }

        [JsonProperty("BubbleShield", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat BubbleShield { get; set; }

        [JsonProperty("Combat", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat Combat { get; set; }

        [JsonProperty("IntelJammer", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat IntelJammer { get; set; }

        [JsonProperty("AntiAir", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat AntiAir { get; set; }

        [JsonProperty("Cloak", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat Cloak { get; set; }

        [JsonProperty("Stealth", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat Stealth { get; set; }

        [JsonProperty("AdvancedCombat", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat AdvancedCombat { get; set; }

        [JsonProperty("Missile", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat Missile { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("2", NullValueHandling = NullValueHandling.Ignore)]
        public string The2 { get; set; }

        [JsonProperty("3", NullValueHandling = NullValueHandling.Ignore)]
        public string The3 { get; set; }

        [JsonProperty("4", NullValueHandling = NullValueHandling.Ignore)]
        public string The4 { get; set; }

        [JsonProperty("5", NullValueHandling = NullValueHandling.Ignore)]
        public string The5 { get; set; }

        [JsonProperty("6", NullValueHandling = NullValueHandling.Ignore)]
        public string The6 { get; set; }

        [JsonProperty("7", NullValueHandling = NullValueHandling.Ignore)]
        public string The7 { get; set; }

        [JsonProperty("8", NullValueHandling = NullValueHandling.Ignore)]
        public string The8 { get; set; }

        [JsonProperty("9", NullValueHandling = NullValueHandling.Ignore)]
        public string The9 { get; set; }

        [JsonProperty("10", NullValueHandling = NullValueHandling.Ignore)]
        public string The10 { get; set; }

        [JsonProperty("Amphibious", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat Amphibious { get; set; }

        [JsonProperty("AntiNaval", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat AntiNaval { get; set; }

        [JsonProperty("Default", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat Default { get; set; }

        [JsonProperty("FastCombat", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat FastCombat { get; set; }

        [JsonProperty("Gunslinger", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat Gunslinger { get; set; }

        [JsonProperty("HeavyTrooper", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat HeavyTrooper { get; set; }

        [JsonProperty("NaturalProducer", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat NaturalProducer { get; set; }

        [JsonProperty("Rocket", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCombat Rocket { get; set; }
    }

    public partial class AdvancedCombat
    {
        [JsonProperty("BuildIconSortPriority", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildIconSortPriority { get; set; }

        [JsonProperty("Description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("Enhancements", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> Enhancements { get; set; }

        [JsonProperty("HelpText", NullValueHandling = NullValueHandling.Ignore)]
        public string HelpText { get; set; }

        [JsonProperty("SortCategory", NullValueHandling = NullValueHandling.Ignore)]
        public SortCategory? SortCategory { get; set; }

        [JsonProperty("UnitName", NullValueHandling = NullValueHandling.Ignore)]
        public string UnitName { get; set; }

        [JsonProperty("SelectionPriority", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SelectionPriority { get; set; }

        [JsonProperty("UIUnitViewOverrides", NullValueHandling = NullValueHandling.Ignore)]
        public UiUnitViewOverrides UiUnitViewOverrides { get; set; }
    }

    public partial class UiUnitViewOverrides
    {
        [JsonProperty("CapacitorDuration", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CapacitorDuration { get; set; }

        [JsonProperty("MaxHealth", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxHealth { get; set; }

        [JsonProperty("ProductionPerSecondEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProductionPerSecondEnergy { get; set; }

        [JsonProperty("ProductionPerSecondMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProductionPerSecondMass { get; set; }
    }

    public partial class Enhancements
    {
        [JsonProperty("AdvancedEngineering", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedEngineering AdvancedEngineering { get; set; }

        [JsonProperty("AdvancedEngineeringRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove AdvancedEngineeringRemove { get; set; }

        [JsonProperty("ChronoDampener", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack ChronoDampener { get; set; }

        [JsonProperty("ChronoDampenerRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove ChronoDampenerRemove { get; set; }

        [JsonProperty("CrysalisBeam", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack CrysalisBeam { get; set; }

        [JsonProperty("CrysalisBeamRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade CrysalisBeamRemove { get; set; }

        [JsonProperty("EnhancedSensors", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack EnhancedSensors { get; set; }

        [JsonProperty("EnhancedSensorsRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack EnhancedSensorsRemove { get; set; }

        [JsonProperty("HeatSink", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedEngineering HeatSink { get; set; }

        [JsonProperty("HeatSinkRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove HeatSinkRemove { get; set; }

        [JsonProperty("ResourceAllocation", NullValueHandling = NullValueHandling.Ignore)]
        public ResourceAllocation ResourceAllocation { get; set; }

        [JsonProperty("ResourceAllocationAdvanced", NullValueHandling = NullValueHandling.Ignore)]
        public ResourceAllocation ResourceAllocationAdvanced { get; set; }

        [JsonProperty("ResourceAllocationAdvancedRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade ResourceAllocationAdvancedRemove { get; set; }

        [JsonProperty("ResourceAllocationRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade ResourceAllocationRemove { get; set; }

        [JsonProperty("Shield", NullValueHandling = NullValueHandling.Ignore)]
        public ShieldHeavyClass Shield { get; set; }

        [JsonProperty("ShieldHeavy", NullValueHandling = NullValueHandling.Ignore)]
        public ShieldHeavyClass ShieldHeavy { get; set; }

        [JsonProperty("ShieldHeavyRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack ShieldHeavyRemove { get; set; }

        [JsonProperty("ShieldRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack ShieldRemove { get; set; }

        [JsonProperty("Slots", NullValueHandling = NullValueHandling.Ignore)]
        public Slots Slots { get; set; }

        [JsonProperty("T3Engineering", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedEngineering T3Engineering { get; set; }

        [JsonProperty("T3EngineeringRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack T3EngineeringRemove { get; set; }

        [JsonProperty("Teleporter", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack Teleporter { get; set; }

        [JsonProperty("TeleporterRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack TeleporterRemove { get; set; }

        [JsonProperty("EngineeringFocusingModule", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack EngineeringFocusingModule { get; set; }

        [JsonProperty("EngineeringFocusingModuleRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack EngineeringFocusingModuleRemove { get; set; }

        [JsonProperty("Sacrifice", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade Sacrifice { get; set; }

        [JsonProperty("SacrificeRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade SacrificeRemove { get; set; }

        [JsonProperty("StabilitySuppressant", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack StabilitySuppressant { get; set; }

        [JsonProperty("StabilitySuppressantRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack StabilitySuppressantRemove { get; set; }

        [JsonProperty("SystemIntegrityCompensator", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack SystemIntegrityCompensator { get; set; }

        [JsonProperty("SystemIntegrityCompensatorRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack SystemIntegrityCompensatorRemove { get; set; }

        [JsonProperty("DamageStabilization", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedEngineering DamageStabilization { get; set; }

        [JsonProperty("DamageStabilizationRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade DamageStabilizationRemove { get; set; }

        [JsonProperty("HeavyAntiMatterCannon", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedEngineering HeavyAntiMatterCannon { get; set; }

        [JsonProperty("HeavyAntiMatterCannonRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove HeavyAntiMatterCannonRemove { get; set; }

        [JsonProperty("LeftPod", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove LeftPod { get; set; }

        [JsonProperty("LeftPodRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove LeftPodRemove { get; set; }

        [JsonProperty("RightPod", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade RightPod { get; set; }

        [JsonProperty("RightPodRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade RightPodRemove { get; set; }

        [JsonProperty("ShieldGeneratorField", NullValueHandling = NullValueHandling.Ignore)]
        public ShieldGeneratorField ShieldGeneratorField { get; set; }

        [JsonProperty("ShieldGeneratorFieldRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove ShieldGeneratorFieldRemove { get; set; }

        [JsonProperty("TacticalMissile", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack TacticalMissile { get; set; }

        [JsonProperty("TacticalMissileRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack TacticalMissileRemove { get; set; }

        [JsonProperty("TacticalNukeMissile", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack TacticalNukeMissile { get; set; }

        [JsonProperty("TacticalNukeMissileRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack TacticalNukeMissileRemove { get; set; }

        [JsonProperty("AdvancedCoolingUpgrade", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade AdvancedCoolingUpgrade { get; set; }

        [JsonProperty("AdvancedCoolingUpgradeRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove AdvancedCoolingUpgradeRemove { get; set; }

        [JsonProperty("HighExplosiveOrdnance", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedEngineering HighExplosiveOrdnance { get; set; }

        [JsonProperty("HighExplosiveOrdnanceRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove HighExplosiveOrdnanceRemove { get; set; }

        [JsonProperty("Pod", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove Pod { get; set; }

        [JsonProperty("PodRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove PodRemove { get; set; }

        [JsonProperty("RadarJammer", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove RadarJammer { get; set; }

        [JsonProperty("RadarJammerRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove RadarJammerRemove { get; set; }

        [JsonProperty("SensorRangeEnhancer", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedEngineering SensorRangeEnhancer { get; set; }

        [JsonProperty("SensorRangeEnhancerRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade SensorRangeEnhancerRemove { get; set; }

        [JsonProperty("CloakingGenerator", NullValueHandling = NullValueHandling.Ignore)]
        public CloakingGenerator CloakingGenerator { get; set; }

        [JsonProperty("CloakingGeneratorRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade CloakingGeneratorRemove { get; set; }

        [JsonProperty("CoolingUpgrade", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack CoolingUpgrade { get; set; }

        [JsonProperty("CoolingUpgradeRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade CoolingUpgradeRemove { get; set; }

        [JsonProperty("MicrowaveLaserGenerator", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove MicrowaveLaserGenerator { get; set; }

        [JsonProperty("MicrowaveLaserGeneratorRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove MicrowaveLaserGeneratorRemove { get; set; }

        [JsonProperty("NaniteTorpedoTube", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove NaniteTorpedoTube { get; set; }

        [JsonProperty("NaniteTorpedoTubeRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove NaniteTorpedoTubeRemove { get; set; }

        [JsonProperty("StealthGenerator", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack StealthGenerator { get; set; }

        [JsonProperty("StealthGeneratorRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack StealthGeneratorRemove { get; set; }

        [JsonProperty("EMPCharge", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack EmpCharge { get; set; }

        [JsonProperty("EMPChargeRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack EmpChargeRemove { get; set; }

        [JsonProperty("FocusConvertor", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack FocusConvertor { get; set; }

        [JsonProperty("FocusConvertorRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack FocusConvertorRemove { get; set; }

        [JsonProperty("NaniteMissileSystem", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove NaniteMissileSystem { get; set; }

        [JsonProperty("NaniteMissileSystemRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove NaniteMissileSystemRemove { get; set; }

        [JsonProperty("SelfRepairSystem", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade SelfRepairSystem { get; set; }

        [JsonProperty("SelfRepairSystemRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade SelfRepairSystemRemove { get; set; }

        [JsonProperty("Switchback", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack Switchback { get; set; }

        [JsonProperty("SwitchbackRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack SwitchbackRemove { get; set; }

        [JsonProperty("AdvancedRegenAura", NullValueHandling = NullValueHandling.Ignore)]
        public RegenAura AdvancedRegenAura { get; set; }

        [JsonProperty("AdvancedRegenAuraRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade AdvancedRegenAuraRemove { get; set; }

        [JsonProperty("BlastAttack", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack BlastAttack { get; set; }

        [JsonProperty("BlastAttackRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove BlastAttackRemove { get; set; }

        [JsonProperty("DamageStabilizationAdvanced", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedEngineering DamageStabilizationAdvanced { get; set; }

        [JsonProperty("DamageStabilizationAdvancedRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade DamageStabilizationAdvancedRemove { get; set; }

        [JsonProperty("Missile", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove Missile { get; set; }

        [JsonProperty("MissileRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove MissileRemove { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack RateOfFire { get; set; }

        [JsonProperty("RateOfFireRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack RateOfFireRemove { get; set; }

        [JsonProperty("RegenAura", NullValueHandling = NullValueHandling.Ignore)]
        public RegenAura RegenAura { get; set; }

        [JsonProperty("RegenAuraRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack RegenAuraRemove { get; set; }

        [JsonProperty("EngineeringThroughput", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack EngineeringThroughput { get; set; }

        [JsonProperty("EngineeringThroughputRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack EngineeringThroughputRemove { get; set; }

        [JsonProperty("Overcharge", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove Overcharge { get; set; }

        [JsonProperty("OverchargeRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove OverchargeRemove { get; set; }

        [JsonProperty("DoubleGuns", NullValueHandling = NullValueHandling.Ignore)]
        public DoubleGuns DoubleGuns { get; set; }

        [JsonProperty("DoubleGunsRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove DoubleGunsRemove { get; set; }

        [JsonProperty("GunUpgrade", NullValueHandling = NullValueHandling.Ignore)]
        public DoubleGuns GunUpgrade { get; set; }

        [JsonProperty("GunUpgradeRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove GunUpgradeRemove { get; set; }

        [JsonProperty("IntelProbe", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove IntelProbe { get; set; }

        [JsonProperty("IntelProbeRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove IntelProbeRemove { get; set; }

        [JsonProperty("IntelProbeAdv", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove IntelProbeAdv { get; set; }

        [JsonProperty("IntelProbeAdvRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove IntelProbeAdvRemove { get; set; }

        [JsonProperty("MovementSpeedIncrease", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove MovementSpeedIncrease { get; set; }

        [JsonProperty("MovementSpeedIncreaseRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove MovementSpeedIncreaseRemove { get; set; }

        [JsonProperty("Capacitor", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack Capacitor { get; set; }

        [JsonProperty("CapacitorRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove CapacitorRemove { get; set; }

        [JsonProperty("OrbitalBombardment", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove OrbitalBombardment { get; set; }

        [JsonProperty("OrbitalBombardmentRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove OrbitalBombardmentRemove { get; set; }

        [JsonProperty("PowerArmor", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove PowerArmor { get; set; }

        [JsonProperty("PowerArmorRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove PowerArmorRemove { get; set; }

        [JsonProperty("RapidRepair", NullValueHandling = NullValueHandling.Ignore)]
        public RapidRepair RapidRepair { get; set; }

        [JsonProperty("RapidRepairRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack RapidRepairRemove { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("2", NullValueHandling = NullValueHandling.Ignore)]
        public string The2 { get; set; }

        [JsonProperty("3", NullValueHandling = NullValueHandling.Ignore)]
        public string The3 { get; set; }

        [JsonProperty("4", NullValueHandling = NullValueHandling.Ignore)]
        public string The4 { get; set; }

        [JsonProperty("5", NullValueHandling = NullValueHandling.Ignore)]
        public string The5 { get; set; }

        [JsonProperty("6", NullValueHandling = NullValueHandling.Ignore)]
        public string The6 { get; set; }

        [JsonProperty("7", NullValueHandling = NullValueHandling.Ignore)]
        public string The7 { get; set; }

        [JsonProperty("8", NullValueHandling = NullValueHandling.Ignore)]
        public string The8 { get; set; }

        [JsonProperty("9", NullValueHandling = NullValueHandling.Ignore)]
        public string The9 { get; set; }

        [JsonProperty("10", NullValueHandling = NullValueHandling.Ignore)]
        public string The10 { get; set; }

        [JsonProperty("11", NullValueHandling = NullValueHandling.Ignore)]
        public string The11 { get; set; }

        [JsonProperty("12", NullValueHandling = NullValueHandling.Ignore)]
        public string The12 { get; set; }

        [JsonProperty("13", NullValueHandling = NullValueHandling.Ignore)]
        public string The13 { get; set; }

        [JsonProperty("14", NullValueHandling = NullValueHandling.Ignore)]
        public string The14 { get; set; }

        [JsonProperty("15", NullValueHandling = NullValueHandling.Ignore)]
        public string The15 { get; set; }

        [JsonProperty("16", NullValueHandling = NullValueHandling.Ignore)]
        public string The16 { get; set; }

        [JsonProperty("17", NullValueHandling = NullValueHandling.Ignore)]
        public string The17 { get; set; }

        [JsonProperty("18", NullValueHandling = NullValueHandling.Ignore)]
        public string The18 { get; set; }

        [JsonProperty("19", NullValueHandling = NullValueHandling.Ignore)]
        public string The19 { get; set; }

        [JsonProperty("20", NullValueHandling = NullValueHandling.Ignore)]
        public string The20 { get; set; }

        [JsonProperty("21", NullValueHandling = NullValueHandling.Ignore)]
        public string The21 { get; set; }

        [JsonProperty("22", NullValueHandling = NullValueHandling.Ignore)]
        public string The22 { get; set; }

        [JsonProperty("23", NullValueHandling = NullValueHandling.Ignore)]
        public string The23 { get; set; }

        [JsonProperty("24", NullValueHandling = NullValueHandling.Ignore)]
        public string The24 { get; set; }

        [JsonProperty("25", NullValueHandling = NullValueHandling.Ignore)]
        public string The25 { get; set; }

        [JsonProperty("26", NullValueHandling = NullValueHandling.Ignore)]
        public string The26 { get; set; }

        [JsonProperty("27", NullValueHandling = NullValueHandling.Ignore)]
        public string The27 { get; set; }

        [JsonProperty("28", NullValueHandling = NullValueHandling.Ignore)]
        public string The28 { get; set; }

        [JsonProperty("29", NullValueHandling = NullValueHandling.Ignore)]
        public string The29 { get; set; }

        [JsonProperty("30", NullValueHandling = NullValueHandling.Ignore)]
        public string The30 { get; set; }

        [JsonProperty("31", NullValueHandling = NullValueHandling.Ignore)]
        public string The31 { get; set; }

        [JsonProperty("32", NullValueHandling = NullValueHandling.Ignore)]
        public string The32 { get; set; }

        [JsonProperty("33", NullValueHandling = NullValueHandling.Ignore)]
        public string The33 { get; set; }

        [JsonProperty("34", NullValueHandling = NullValueHandling.Ignore)]
        public string The34 { get; set; }

        [JsonProperty("35", NullValueHandling = NullValueHandling.Ignore)]
        public string The35 { get; set; }

        [JsonProperty("36", NullValueHandling = NullValueHandling.Ignore)]
        public string The36 { get; set; }

        [JsonProperty("37", NullValueHandling = NullValueHandling.Ignore)]
        public string The37 { get; set; }

        [JsonProperty("38", NullValueHandling = NullValueHandling.Ignore)]
        public string The38 { get; set; }

        [JsonProperty("39", NullValueHandling = NullValueHandling.Ignore)]
        public string The39 { get; set; }

        [JsonProperty("40", NullValueHandling = NullValueHandling.Ignore)]
        public string The40 { get; set; }

        [JsonProperty("41", NullValueHandling = NullValueHandling.Ignore)]
        public string The41 { get; set; }

        [JsonProperty("42", NullValueHandling = NullValueHandling.Ignore)]
        public string The42 { get; set; }

        [JsonProperty("43", NullValueHandling = NullValueHandling.Ignore)]
        public string The43 { get; set; }

        [JsonProperty("AdditionalCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitor AdditionalCapacitor { get; set; }

        [JsonProperty("AdditionalCapacitorRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove AdditionalCapacitorRemove { get; set; }

        [JsonProperty("EngineeringLeft", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack EngineeringLeft { get; set; }

        [JsonProperty("EngineeringLeftRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack EngineeringLeftRemove { get; set; }

        [JsonProperty("EngineeringRight", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack EngineeringRight { get; set; }

        [JsonProperty("EngineeringRightRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack EngineeringRightRemove { get; set; }

        [JsonProperty("GunLeft", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack GunLeft { get; set; }

        [JsonProperty("GunLeftRemove", NullValueHandling = NullValueHandling.Ignore)]
        public BlastAttack GunLeftRemove { get; set; }

        [JsonProperty("GunLeftUpgrade", NullValueHandling = NullValueHandling.Ignore)]
        public DoubleGuns GunLeftUpgrade { get; set; }

        [JsonProperty("GunLeftUpgradeRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove GunLeftUpgradeRemove { get; set; }

        [JsonProperty("GunRight", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedEngineering GunRight { get; set; }

        [JsonProperty("GunRightRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove GunRightRemove { get; set; }

        [JsonProperty("LeftRocket", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove LeftRocket { get; set; }

        [JsonProperty("LeftRocketRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove LeftRocketRemove { get; set; }

        [JsonProperty("Railgun", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove Railgun { get; set; }

        [JsonProperty("RailgunRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdditionalCapacitorRemove RailgunRemove { get; set; }

        [JsonProperty("RightRocket", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedEngineering RightRocket { get; set; }

        [JsonProperty("RightRocketRemove", NullValueHandling = NullValueHandling.Ignore)]
        public AdvancedCoolingUpgrade RightRocketRemove { get; set; }
    }

    public partial class AdditionalCapacitor
    {
        [JsonProperty("BuildCostEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostEnergy { get; set; }

        [JsonProperty("BuildCostMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostMass { get; set; }

        [JsonProperty("BuildTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildTime { get; set; }

        [JsonProperty("HideBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> HideBones { get; set; }

        [JsonProperty("Icon", NullValueHandling = NullValueHandling.Ignore)]
        public string Icon { get; set; }

        [JsonProperty("Name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("Prerequisite", NullValueHandling = NullValueHandling.Ignore)]
        public string Prerequisite { get; set; }

        [JsonProperty("CapacitorNewDuration", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CapacitorNewDuration { get; set; }

        [JsonProperty("CapacitorNewChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CapacitorNewChargeTime { get; set; }

        [JsonProperty("CapacitorNewChargeEnergyCost", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CapacitorNewChargeEnergyCost { get; set; }

        [JsonProperty("ShowBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ShowBones { get; set; }

        [JsonProperty("Slot", NullValueHandling = NullValueHandling.Ignore)]
        public Slot? Slot { get; set; }

        [JsonProperty("UpgradeEffectBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeEffectBones { get; set; }

        [JsonProperty("UpgradeUnitAmbientBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeUnitAmbientBones { get; set; }
    }

    public partial class AdditionalCapacitorRemove
    {
        [JsonProperty("BuildCostEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostEnergy { get; set; }

        [JsonProperty("BuildCostMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostMass { get; set; }

        [JsonProperty("BuildTime", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? BuildTime { get; set; }

        [JsonProperty("HideBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> HideBones { get; set; }

        [JsonProperty("Icon", NullValueHandling = NullValueHandling.Ignore)]
        public string Icon { get; set; }

        [JsonProperty("Name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("Prerequisite", NullValueHandling = NullValueHandling.Ignore)]
        public string Prerequisite { get; set; }

        [JsonProperty("RemoveEnhancements", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> RemoveEnhancements { get; set; }

        [JsonProperty("Slot", NullValueHandling = NullValueHandling.Ignore)]
        public Slot? Slot { get; set; }

        [JsonProperty("RemovesLeftArm", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RemovesLeftArm { get; set; }

        [JsonProperty("RemovesRightArm", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RemovesRightArm { get; set; }

        [JsonProperty("NewDamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewDamageRadius { get; set; }

        [JsonProperty("NewMaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewMaxRadius { get; set; }

        [JsonProperty("UpgradeEffectBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeEffectBones { get; set; }

        [JsonProperty("UpgradeUnitAmbientBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeUnitAmbientBones { get; set; }

        [JsonProperty("ShowBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ShowBones { get; set; }

        [JsonProperty("EnableWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string EnableWeapon { get; set; }

        [JsonProperty("SpeedMulti", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? SpeedMulti { get; set; }

        [JsonProperty("AddHealth", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AddHealth { get; set; }

        [JsonProperty("AddRegenRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AddRegenRate { get; set; }

        [JsonProperty("Mesh", NullValueHandling = NullValueHandling.Ignore)]
        public string Mesh { get; set; }

        [JsonProperty("MaintenanceConsumptionPerSecondEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaintenanceConsumptionPerSecondEnergy { get; set; }

        [JsonProperty("NewJammerRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewJammerRadius { get; set; }

        [JsonProperty("CreatesLeftArm", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CreatesLeftArm { get; set; }
    }

    public partial class AdvancedCoolingUpgrade
    {
        [JsonProperty("BuildCostEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostEnergy { get; set; }

        [JsonProperty("BuildCostMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostMass { get; set; }

        [JsonProperty("BuildTime", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? BuildTime { get; set; }

        [JsonProperty("Icon", NullValueHandling = NullValueHandling.Ignore)]
        public string Icon { get; set; }

        [JsonProperty("Name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("NewRateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string NewRateOfFire { get; set; }

        [JsonProperty("Slot", NullValueHandling = NullValueHandling.Ignore)]
        public Slot? Slot { get; set; }

        [JsonProperty("UpgradeUnitAmbientBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeUnitAmbientBones { get; set; }

        [JsonProperty("Prerequisite", NullValueHandling = NullValueHandling.Ignore)]
        public string Prerequisite { get; set; }

        [JsonProperty("RemoveEnhancements", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> RemoveEnhancements { get; set; }

        [JsonProperty("HideBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> HideBones { get; set; }

        [JsonProperty("UpgradeEffectBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeEffectBones { get; set; }

        [JsonProperty("NewRegenRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewRegenRate { get; set; }
    }

    public partial class AdvancedEngineering
    {
        [JsonProperty("BuildCostEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostEnergy { get; set; }

        [JsonProperty("BuildCostMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostMass { get; set; }

        [JsonProperty("BuildTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildTime { get; set; }

        [JsonProperty("BuildableCategoryAdds", NullValueHandling = NullValueHandling.Ignore)]
        public string BuildableCategoryAdds { get; set; }

        [JsonProperty("Icon", NullValueHandling = NullValueHandling.Ignore)]
        public string Icon { get; set; }

        [JsonProperty("Name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("NewBuildRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewBuildRate { get; set; }

        [JsonProperty("NewHealth", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewHealth { get; set; }

        [JsonProperty("NewRegenRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewRegenRate { get; set; }

        [JsonProperty("ShowBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ShowBones { get; set; }

        [JsonProperty("Slot", NullValueHandling = NullValueHandling.Ignore)]
        public Slot? Slot { get; set; }

        [JsonProperty("UpgradeUnitAmbientBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeUnitAmbientBones { get; set; }

        [JsonProperty("UpgradeEffectBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeEffectBones { get; set; }

        [JsonProperty("Prerequisite", NullValueHandling = NullValueHandling.Ignore)]
        public string Prerequisite { get; set; }

        [JsonProperty("CreatesRightArm", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CreatesRightArm { get; set; }

        [JsonProperty("EnableWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string EnableWeapon { get; set; }

        [JsonProperty("HideBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> HideBones { get; set; }

        [JsonProperty("NewRateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewRateOfFire { get; set; }

        [JsonProperty("NewMaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewMaxRadius { get; set; }

        [JsonProperty("ZephyrDamageMod", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ZephyrDamageMod { get; set; }

        [JsonProperty("NewDamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewDamageRadius { get; set; }

        [JsonProperty("NewOmniRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewOmniRadius { get; set; }

        [JsonProperty("NewVisionRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewVisionRadius { get; set; }
    }

    public partial class RegenAura
    {
        [JsonProperty("ACUAddHealth", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AcuAddHealth { get; set; }

        [JsonProperty("BuildCostEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostEnergy { get; set; }

        [JsonProperty("BuildCostMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostMass { get; set; }

        [JsonProperty("BuildTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildTime { get; set; }

        [JsonProperty("Icon", NullValueHandling = NullValueHandling.Ignore)]
        public string Icon { get; set; }

        [JsonProperty("Name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("Prerequisite", NullValueHandling = NullValueHandling.Ignore)]
        public string Prerequisite { get; set; }

        [JsonProperty("Radius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Radius { get; set; }

        [JsonProperty("MaxHealthFactor", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MaxHealthFactor { get; set; }

        [JsonProperty("RegenCeiling", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RegenCeiling { get; set; }

        [JsonProperty("RegenPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        public string RegenPerSecond { get; set; }

        [JsonProperty("Slot", NullValueHandling = NullValueHandling.Ignore)]
        public Slot? Slot { get; set; }

        [JsonProperty("UnitCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string UnitCategory { get; set; }

        [JsonProperty("UpgradeEffectBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeEffectBones { get; set; }

        [JsonProperty("UpgradeUnitAmbientBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeUnitAmbientBones { get; set; }

        [JsonProperty("ShowBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ShowBones { get; set; }
    }

    public partial class BlastAttack
    {
        [JsonProperty("AdditionalDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AdditionalDamage { get; set; }

        [JsonProperty("BuildCostEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostEnergy { get; set; }

        [JsonProperty("BuildCostMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostMass { get; set; }

        [JsonProperty("BuildTime", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? BuildTime { get; set; }

        [JsonProperty("Icon", NullValueHandling = NullValueHandling.Ignore)]
        public string Icon { get; set; }

        [JsonProperty("Name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("NewDamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string NewDamageRadius { get; set; }

        [JsonProperty("ShowBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ShowBones { get; set; }

        [JsonProperty("Slot", NullValueHandling = NullValueHandling.Ignore)]
        public Slot? Slot { get; set; }

        [JsonProperty("UpgradeEffectBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeEffectBones { get; set; }

        [JsonProperty("UpgradeUnitAmbientBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeUnitAmbientBones { get; set; }

        [JsonProperty("SpeedMulti", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? SpeedMulti { get; set; }

        [JsonProperty("HideBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> HideBones { get; set; }

        [JsonProperty("NewMaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewMaxRadius { get; set; }

        [JsonProperty("NewRateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewRateOfFire { get; set; }

        [JsonProperty("Prerequisite", NullValueHandling = NullValueHandling.Ignore)]
        public string Prerequisite { get; set; }

        [JsonProperty("RemoveEnhancements", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> RemoveEnhancements { get; set; }

        [JsonProperty("NewBuildRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewBuildRate { get; set; }

        [JsonProperty("AddBuildRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AddBuildRate { get; set; }

        [JsonProperty("CreatesLeftArm", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CreatesLeftArm { get; set; }

        [JsonProperty("RemoveBuildRestrictions", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RemoveBuildRestrictions { get; set; }

        [JsonProperty("RemovesLeftArm", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RemovesLeftArm { get; set; }

        [JsonProperty("CreatesRightArm", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CreatesRightArm { get; set; }

        [JsonProperty("RemovesRightArm", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RemovesRightArm { get; set; }

        [JsonProperty("NewOmniRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewOmniRadius { get; set; }

        [JsonProperty("NewVisionRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewVisionRadius { get; set; }

        [JsonProperty("NewDamageMod", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewDamageMod { get; set; }

        [JsonProperty("EnableWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string EnableWeapon { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("NewDamageRadiusMod", NullValueHandling = NullValueHandling.Ignore)]
        public string NewDamageRadiusMod { get; set; }

        [JsonProperty("MaintenanceConsumptionPerSecondEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaintenanceConsumptionPerSecondEnergy { get; set; }

        [JsonProperty("NewRegenRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewRegenRate { get; set; }
    }

    public partial class CloakingGenerator
    {
        [JsonProperty("BuildCostEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostEnergy { get; set; }

        [JsonProperty("BuildCostMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostMass { get; set; }

        [JsonProperty("BuildTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildTime { get; set; }

        [JsonProperty("Icon", NullValueHandling = NullValueHandling.Ignore)]
        public string Icon { get; set; }

        [JsonProperty("MaintenanceConsumptionPerSecondEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaintenanceConsumptionPerSecondEnergy { get; set; }

        [JsonProperty("Name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("NewHealth", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewHealth { get; set; }

        [JsonProperty("Prerequisite", NullValueHandling = NullValueHandling.Ignore)]
        public string Prerequisite { get; set; }

        [JsonProperty("Slot", NullValueHandling = NullValueHandling.Ignore)]
        public Slot? Slot { get; set; }

        [JsonProperty("UpgradeUnitAmbientBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeUnitAmbientBones { get; set; }
    }

    public partial class DoubleGuns
    {
        [JsonProperty("BuildCostEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostEnergy { get; set; }

        [JsonProperty("BuildCostMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostMass { get; set; }

        [JsonProperty("BuildTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildTime { get; set; }

        [JsonProperty("Icon", NullValueHandling = NullValueHandling.Ignore)]
        public string Icon { get; set; }

        [JsonProperty("Name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("NewDamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewDamageDuringCapacitor { get; set; }

        [JsonProperty("NewDamageRadiusDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? NewDamageRadiusDuringCapacitor { get; set; }

        [JsonProperty("NewDoTPulsesDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewDoTPulsesDuringCapacitor { get; set; }

        [JsonProperty("NewDoTTimeDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? NewDoTTimeDuringCapacitor { get; set; }

        [JsonProperty("NewInitialDamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewInitialDamageDuringCapacitor { get; set; }

        [JsonProperty("ShowBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ShowBones { get; set; }

        [JsonProperty("OverchargeIncluded", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OverchargeIncluded { get; set; }

        [JsonProperty("Prerequisite", NullValueHandling = NullValueHandling.Ignore)]
        public string Prerequisite { get; set; }

        [JsonProperty("Slot", NullValueHandling = NullValueHandling.Ignore)]
        public Slot? Slot { get; set; }

        [JsonProperty("UpgradeEffectBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeEffectBones { get; set; }

        [JsonProperty("UpgradeUnitAmbientBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeUnitAmbientBones { get; set; }

        [JsonProperty("NewMaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewMaxRadius { get; set; }

        [JsonProperty("NewProjectileIdDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public string NewProjectileIdDuringCapacitor { get; set; }

        [JsonProperty("RateOfFireMulti", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFireMulti { get; set; }

        [JsonProperty("NewDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NewDamage { get; set; }
    }

    public partial class RapidRepair
    {
        [JsonProperty("AddHealth", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AddHealth { get; set; }

        [JsonProperty("BuildCostEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostEnergy { get; set; }

        [JsonProperty("BuildCostMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostMass { get; set; }

        [JsonProperty("BuildTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildTime { get; set; }

        [JsonProperty("Icon", NullValueHandling = NullValueHandling.Ignore)]
        public string Icon { get; set; }

        [JsonProperty("Name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("RepairDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RepairDelay { get; set; }

        [JsonProperty("RepairRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RepairRate { get; set; }

        [JsonProperty("Slot", NullValueHandling = NullValueHandling.Ignore)]
        public Slot? Slot { get; set; }

        [JsonProperty("UpgradeEffectBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeEffectBones { get; set; }

        [JsonProperty("UpgradeUnitAmbientBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeUnitAmbientBones { get; set; }

        [JsonProperty("InterruptRapidRepairByWeaponFired", NullValueHandling = NullValueHandling.Ignore)]
        public bool? InterruptRapidRepairByWeaponFired { get; set; }

        [JsonProperty("ShowBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ShowBones { get; set; }
    }

    public partial class ResourceAllocation
    {
        [JsonProperty("BuildCostEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostEnergy { get; set; }

        [JsonProperty("BuildCostMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostMass { get; set; }

        [JsonProperty("BuildTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildTime { get; set; }

        [JsonProperty("Icon", NullValueHandling = NullValueHandling.Ignore)]
        public ResourceAllocationIcon? Icon { get; set; }

        [JsonProperty("Name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("ProductionPerSecondEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProductionPerSecondEnergy { get; set; }

        [JsonProperty("ProductionPerSecondMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProductionPerSecondMass { get; set; }

        [JsonProperty("ShowBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ShowBones { get; set; }

        [JsonProperty("Slot", NullValueHandling = NullValueHandling.Ignore)]
        public Slot? Slot { get; set; }

        [JsonProperty("UpgradeUnitAmbientBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeUnitAmbientBones { get; set; }

        [JsonProperty("UpgradeEffectBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeEffectBones { get; set; }

        [JsonProperty("NewDeathWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string NewDeathWeapon { get; set; }

        [JsonProperty("StorageEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? StorageEnergy { get; set; }

        [JsonProperty("StorageMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? StorageMass { get; set; }

        [JsonProperty("Prerequisite", NullValueHandling = NullValueHandling.Ignore)]
        public string Prerequisite { get; set; }
    }

    public partial class ShieldHeavyClass
    {
        [JsonProperty("BuildCostEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostEnergy { get; set; }

        [JsonProperty("BuildCostMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostMass { get; set; }

        [JsonProperty("BuildTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildTime { get; set; }

        [JsonProperty("Icon", NullValueHandling = NullValueHandling.Ignore)]
        public string Icon { get; set; }

        [JsonProperty("ImpactEffects", NullValueHandling = NullValueHandling.Ignore)]
        public ImpactEffects? ImpactEffects { get; set; }

        [JsonProperty("MaintenanceConsumptionPerSecondEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaintenanceConsumptionPerSecondEnergy { get; set; }

        [JsonProperty("Name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("OwnerShieldMesh", NullValueHandling = NullValueHandling.Ignore)]
        public string OwnerShieldMesh { get; set; }

        [JsonProperty("PersonalShield", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PersonalShield { get; set; }

        [JsonProperty("RegenAssistMult", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RegenAssistMult { get; set; }

        [JsonProperty("ShieldEnergyDrainRechargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldEnergyDrainRechargeTime { get; set; }

        [JsonProperty("ShieldMaxHealth", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldMaxHealth { get; set; }

        [JsonProperty("ShieldRechargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldRechargeTime { get; set; }

        [JsonProperty("ShieldRegenRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldRegenRate { get; set; }

        [JsonProperty("ShieldRegenStartTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldRegenStartTime { get; set; }

        [JsonProperty("ShowBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ShowBones { get; set; }

        [JsonProperty("Slot", NullValueHandling = NullValueHandling.Ignore)]
        public Slot? Slot { get; set; }

        [JsonProperty("UpgradeUnitAmbientBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeUnitAmbientBones { get; set; }

        [JsonProperty("UpgradeEffectBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeEffectBones { get; set; }

        [JsonProperty("ShieldSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldSize { get; set; }

        [JsonProperty("ShieldVerticalOffset", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldVerticalOffset { get; set; }

        [JsonProperty("Prerequisite", NullValueHandling = NullValueHandling.Ignore)]
        public string Prerequisite { get; set; }
    }

    public partial class ShieldGeneratorField
    {
        [JsonProperty("BuildCostEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostEnergy { get; set; }

        [JsonProperty("BuildCostMass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildCostMass { get; set; }

        [JsonProperty("BuildTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BuildTime { get; set; }

        [JsonProperty("Icon", NullValueHandling = NullValueHandling.Ignore)]
        public string Icon { get; set; }

        [JsonProperty("ImpactEffects", NullValueHandling = NullValueHandling.Ignore)]
        public ImpactEffects? ImpactEffects { get; set; }

        [JsonProperty("ImpactMesh", NullValueHandling = NullValueHandling.Ignore)]
        public ImpactMesh? ImpactMesh { get; set; }

        [JsonProperty("MaintenanceConsumptionPerSecondEnergy", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaintenanceConsumptionPerSecondEnergy { get; set; }

        [JsonProperty("Mesh", NullValueHandling = NullValueHandling.Ignore)]
        public string Mesh { get; set; }

        [JsonProperty("MeshZ", NullValueHandling = NullValueHandling.Ignore)]
        public MeshZ? MeshZ { get; set; }

        [JsonProperty("Name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("Prerequisite", NullValueHandling = NullValueHandling.Ignore)]
        public string Prerequisite { get; set; }

        [JsonProperty("ShieldEnergyDrainRechargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldEnergyDrainRechargeTime { get; set; }

        [JsonProperty("ShieldEnhancementNumber", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldEnhancementNumber { get; set; }

        [JsonProperty("ShieldMaxHealth", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldMaxHealth { get; set; }

        [JsonProperty("ShieldRechargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldRechargeTime { get; set; }

        [JsonProperty("ShieldRegenRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldRegenRate { get; set; }

        [JsonProperty("ShieldRegenStartTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldRegenStartTime { get; set; }

        [JsonProperty("ShieldSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldSize { get; set; }

        [JsonProperty("ShieldSpillOverDamageMod", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? ShieldSpillOverDamageMod { get; set; }

        [JsonProperty("ShieldVerticalOffset", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldVerticalOffset { get; set; }

        [JsonProperty("Slot", NullValueHandling = NullValueHandling.Ignore)]
        public Slot? Slot { get; set; }

        [JsonProperty("UpgradeEffectBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeEffectBones { get; set; }

        [JsonProperty("UpgradeUnitAmbientBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> UpgradeUnitAmbientBones { get; set; }

        [JsonProperty("HideBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> HideBones { get; set; }
    }

    public partial class Slots
    {
        [JsonProperty("Back", NullValueHandling = NullValueHandling.Ignore)]
        public Back Back { get; set; }

        [JsonProperty("LCH", NullValueHandling = NullValueHandling.Ignore)]
        public Back Lch { get; set; }

        [JsonProperty("RCH", NullValueHandling = NullValueHandling.Ignore)]
        public Back Rch { get; set; }
    }

    public partial class Back
    {
        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public Name? Name { get; set; }

        [JsonProperty("x", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? X { get; set; }

        [JsonProperty("y", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Y { get; set; }
    }

    public partial class UnitFootprint
    {
        [JsonProperty("MaxSlope", NullValueHandling = NullValueHandling.Ignore)]
        public string MaxSlope { get; set; }

        [JsonProperty("SizeX", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SizeX { get; set; }

        [JsonProperty("SizeZ", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SizeZ { get; set; }

        [JsonProperty("MinWaterDepth", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MinWaterDepth { get; set; }

        [JsonProperty("SizeY", NullValueHandling = NullValueHandling.Ignore)]
        public string SizeY { get; set; }
    }

    public partial class General
    {
        [JsonProperty("Category", NullValueHandling = NullValueHandling.Ignore)]
        public Category? Category { get; set; }

        [JsonProperty("Classification", NullValueHandling = NullValueHandling.Ignore)]
        public Classification? Classification { get; set; }

        [JsonProperty("CommandCaps", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, bool> CommandCaps { get; set; }

        [JsonProperty("FactionName", NullValueHandling = NullValueHandling.Ignore)]
        public FactionName? FactionName { get; set; }

        [JsonProperty("Icon", NullValueHandling = NullValueHandling.Ignore)]
        public GeneralIcon? Icon { get; set; }

        [JsonProperty("TechLevel", NullValueHandling = NullValueHandling.Ignore)]
        public TechLevel? TechLevel { get; set; }

        [JsonProperty("UnitName", NullValueHandling = NullValueHandling.Ignore)]
        public string UnitName { get; set; }

        [JsonProperty("UnitWeight", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? UnitWeight { get; set; }

        [JsonProperty("ToggleCaps", NullValueHandling = NullValueHandling.Ignore)]
        public ToggleCaps ToggleCaps { get; set; }

        [JsonProperty("TarmacGlowDecal", NullValueHandling = NullValueHandling.Ignore)]
        public string TarmacGlowDecal { get; set; }

        [JsonProperty("SelectionPriority", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SelectionPriority { get; set; }

        [JsonProperty("ConstructionBar", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ConstructionBar { get; set; }

        [JsonProperty("OrderOverrides", NullValueHandling = NullValueHandling.Ignore)]
        public OrderOverrides OrderOverrides { get; set; }

        [JsonProperty("BuildBones", NullValueHandling = NullValueHandling.Ignore)]
        public BuildBones BuildBones { get; set; }

        [JsonProperty("UpgradesFromBase", NullValueHandling = NullValueHandling.Ignore)]
        public string UpgradesFromBase { get; set; }

        [JsonProperty("UpgradesTo", NullValueHandling = NullValueHandling.Ignore)]
        public string UpgradesTo { get; set; }

        [JsonProperty("UpgradesFrom", NullValueHandling = NullValueHandling.Ignore)]
        public string UpgradesFrom { get; set; }

        [JsonProperty("TarmacDecal", NullValueHandling = NullValueHandling.Ignore)]
        public string TarmacDecal { get; set; }

        [JsonProperty("CapCost", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? CapCost { get; set; }

        [JsonProperty("QuickSelectPriority", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? QuickSelectPriority { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("2", NullValueHandling = NullValueHandling.Ignore)]
        public string The2 { get; set; }

        [JsonProperty("InstantDeathOnSelfDestruct", NullValueHandling = NullValueHandling.Ignore)]
        public bool? InstantDeathOnSelfDestruct { get; set; }

        [JsonProperty("BuildBonesAlt1", NullValueHandling = NullValueHandling.Ignore)]
        public BuildBonesAlt1 BuildBonesAlt1 { get; set; }

        [JsonProperty("BuildEffectScaleX", NullValueHandling = NullValueHandling.Ignore)]
        public string BuildEffectScaleX { get; set; }

        [JsonProperty("BuildEffectScaleY", NullValueHandling = NullValueHandling.Ignore)]
        public string BuildEffectScaleY { get; set; }

        [JsonProperty("BuildEffectScaleZ", NullValueHandling = NullValueHandling.Ignore)]
        public string BuildEffectScaleZ { get; set; }
    }

    public partial class BuildBones
    {
        [JsonProperty("BuildEffectBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> BuildEffectBones { get; set; }

        [JsonProperty("AimBone", NullValueHandling = NullValueHandling.Ignore)]
        public string AimBone { get; set; }

        [JsonProperty("PitchBone", NullValueHandling = NullValueHandling.Ignore)]
        public string PitchBone { get; set; }

        [JsonProperty("YawBone", NullValueHandling = NullValueHandling.Ignore)]
        public string YawBone { get; set; }

        [JsonProperty("BuildAttachBone", NullValueHandling = NullValueHandling.Ignore)]
        public BuildAttachBone? BuildAttachBone { get; set; }
    }

    public partial class BuildBonesAlt1
    {
        [JsonProperty("AimBone", NullValueHandling = NullValueHandling.Ignore)]
        public string AimBone { get; set; }

        [JsonProperty("PitchBone", NullValueHandling = NullValueHandling.Ignore)]
        public string PitchBone { get; set; }

        [JsonProperty("YawBone", NullValueHandling = NullValueHandling.Ignore)]
        public string YawBone { get; set; }
    }

    public partial class OrderOverrides
    {
        [JsonProperty("RULEUCC_Transport", NullValueHandling = NullValueHandling.Ignore)]
        public DroneL RuleuccTransport { get; set; }

        [JsonProperty("RULEUTC_IntelToggle", NullValueHandling = NullValueHandling.Ignore)]
        public DroneL RuleutcIntelToggle { get; set; }

        [JsonProperty("RULEUTC_ShieldToggle", NullValueHandling = NullValueHandling.Ignore)]
        public DroneL RuleutcShieldToggle { get; set; }

        [JsonProperty("RULEUTC_StealthToggle", NullValueHandling = NullValueHandling.Ignore)]
        public DroneL RuleutcStealthToggle { get; set; }

        [JsonProperty("DroneL", NullValueHandling = NullValueHandling.Ignore)]
        public DroneL DroneL { get; set; }

        [JsonProperty("RULEUTC_WeaponToggle", NullValueHandling = NullValueHandling.Ignore)]
        public DroneL RuleutcWeaponToggle { get; set; }

        [JsonProperty("RULEUTC_JammingToggle", NullValueHandling = NullValueHandling.Ignore)]
        public DroneL RuleutcJammingToggle { get; set; }

        [JsonProperty("RULEUCC_Nuke", NullValueHandling = NullValueHandling.Ignore)]
        public Ruleu RuleuccNuke { get; set; }

        [JsonProperty("RULEUCC_SiloBuildNuke", NullValueHandling = NullValueHandling.Ignore)]
        public Ruleu RuleuccSiloBuildNuke { get; set; }

        [JsonProperty("DroneR", NullValueHandling = NullValueHandling.Ignore)]
        public DroneL DroneR { get; set; }

        [JsonProperty("RULEUTC_ProductionToggle", NullValueHandling = NullValueHandling.Ignore)]
        public RuleutcProductionToggle RuleutcProductionToggle { get; set; }

        [JsonProperty("RULEUTC_CloakToggle", NullValueHandling = NullValueHandling.Ignore)]
        public Ruleu RuleutcCloakToggle { get; set; }

        [JsonProperty("RULEUTC_SpecialToggle", NullValueHandling = NullValueHandling.Ignore)]
        public DroneL RuleutcSpecialToggle { get; set; }
    }

    public partial class DroneL
    {
        [JsonProperty("bitmapId", NullValueHandling = NullValueHandling.Ignore)]
        public string BitmapId { get; set; }

        [JsonProperty("helpText", NullValueHandling = NullValueHandling.Ignore)]
        public string HelpText { get; set; }
    }

    public partial class Ruleu
    {
        [JsonProperty("helpText", NullValueHandling = NullValueHandling.Ignore)]
        public string HelpText { get; set; }
    }

    public partial class RuleutcProductionToggle
    {
        [JsonProperty("bitmapId", NullValueHandling = NullValueHandling.Ignore)]
        public string BitmapId { get; set; }

        [JsonProperty("helpText", NullValueHandling = NullValueHandling.Ignore)]
        public string HelpText { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }
    }

    public partial class ToggleCaps
    {
        [JsonProperty("RULEUTC_SpecialToggle", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RuleutcSpecialToggle { get; set; }

        [JsonProperty("RULEUTC_ProductionToggle", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RuleutcProductionToggle { get; set; }

        [JsonProperty("RULEUTC_IntelToggle", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RuleutcIntelToggle { get; set; }

        [JsonProperty("RULEUTC_ShieldToggle", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RuleutcShieldToggle { get; set; }

        [JsonProperty("RULEUTC_StealthToggle", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RuleutcStealthToggle { get; set; }

        [JsonProperty("RULEUTC_WeaponToggle", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RuleutcWeaponToggle { get; set; }

        [JsonProperty("RULEUTC_JammingToggle", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RuleutcJammingToggle { get; set; }

        [JsonProperty("RULEUTC_CloakToggle", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RuleutcCloakToggle { get; set; }
    }

    public partial class Intel
    {
        [JsonProperty("VisionRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? VisionRadius { get; set; }

        [JsonProperty("RadarRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RadarRadius { get; set; }

        [JsonProperty("SonarRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SonarRadius { get; set; }

        [JsonProperty("OmniRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? OmniRadius { get; set; }

        [JsonProperty("WaterVisionRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WaterVisionRadius { get; set; }

        [JsonProperty("RadarStealth", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RadarStealth { get; set; }

        [JsonProperty("SonarStealth", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SonarStealth { get; set; }

        [JsonProperty("ReactivateTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ReactivateTime { get; set; }

        [JsonProperty("ShowIntelOnSelect", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ShowIntelOnSelect { get; set; }

        [JsonProperty("RadarStealthFieldRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RadarStealthFieldRadius { get; set; }

        [JsonProperty("SonarStealthFieldRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SonarStealthFieldRadius { get; set; }

        [JsonProperty("FreeIntel", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FreeIntel { get; set; }

        [JsonProperty("JamRadius", NullValueHandling = NullValueHandling.Ignore)]
        public JamRadius JamRadius { get; set; }

        [JsonProperty("JammerBlips", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? JammerBlips { get; set; }

        [JsonProperty("ActiveIntel", NullValueHandling = NullValueHandling.Ignore)]
        public ActiveIntel ActiveIntel { get; set; }

        [JsonProperty("Cloak", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Cloak { get; set; }

        [JsonProperty("RadarStealthField", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RadarStealthField { get; set; }

        [JsonProperty("RemoteViewingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RemoteViewingRadius { get; set; }

        [JsonProperty("MaxVisionRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxVisionRadius { get; set; }

        [JsonProperty("MinVisionRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinVisionRadius { get; set; }

        [JsonProperty("IntelDurationOnDeath", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? IntelDurationOnDeath { get; set; }

        [JsonProperty("VisionRadiusOnDeath", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? VisionRadiusOnDeath { get; set; }

        [JsonProperty("StealthWaitTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? StealthWaitTime { get; set; }

        [JsonProperty("WaterVisionradius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WaterVisionradius { get; set; }

        [JsonProperty("OverchargeDamageMulti", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? OverchargeDamageMulti { get; set; }

        [JsonProperty("OverchargeEnergyCost", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? OverchargeEnergyCost { get; set; }

        [JsonProperty("OverchargeEnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? OverchargeEnergyDrainPerSecond { get; set; }

        [JsonProperty("OverchargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? OverchargeTime { get; set; }

        [JsonProperty("OverchargeType", NullValueHandling = NullValueHandling.Ignore)]
        public string OverchargeType { get; set; }
    }

    public partial class ActiveIntel
    {
        [JsonProperty("Omni", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Omni { get; set; }

        [JsonProperty("Sonar", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sonar { get; set; }
    }

    public partial class JamRadius
    {
        [JsonProperty("Max", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Max { get; set; }

        [JsonProperty("Min", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Min { get; set; }
    }

    public partial class Interface
    {
        [JsonProperty("HelpText", NullValueHandling = NullValueHandling.Ignore)]
        public string HelpText { get; set; }

        [JsonProperty("Selectable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Selectable { get; set; }
    }

    public partial class Physics
    {
        [JsonProperty("AttackElevation", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? AttackElevation { get; set; }

        [JsonProperty("BuildOnLayerCaps", NullValueHandling = NullValueHandling.Ignore)]
        public BuildOnLayerCaps BuildOnLayerCaps { get; set; }

        [JsonProperty("Elevation", NullValueHandling = NullValueHandling.Ignore)]
        public string Elevation { get; set; }

        [JsonProperty("FuelRechargeRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FuelRechargeRate { get; set; }

        [JsonProperty("FuelUseTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FuelUseTime { get; set; }

        [JsonProperty("GroundCollisionOffset", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? GroundCollisionOffset { get; set; }

        [JsonProperty("MaxSpeed", NullValueHandling = NullValueHandling.Ignore)]
        public string MaxSpeed { get; set; }

        [JsonProperty("MeshExtentsX", NullValueHandling = NullValueHandling.Ignore)]
        public string MeshExtentsX { get; set; }

        [JsonProperty("MeshExtentsY", NullValueHandling = NullValueHandling.Ignore)]
        public string MeshExtentsY { get; set; }

        [JsonProperty("MeshExtentsZ", NullValueHandling = NullValueHandling.Ignore)]
        public string MeshExtentsZ { get; set; }

        [JsonProperty("MinSpeedPercent", NullValueHandling = NullValueHandling.Ignore)]
        public string MinSpeedPercent { get; set; }

        [JsonProperty("MotionType", NullValueHandling = NullValueHandling.Ignore)]
        public MotionType? MotionType { get; set; }

        [JsonProperty("BankingSlope", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? BankingSlope { get; set; }

        [JsonProperty("DragCoefficient", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? DragCoefficient { get; set; }

        [JsonProperty("MaxAcceleration", NullValueHandling = NullValueHandling.Ignore)]
        public string MaxAcceleration { get; set; }

        [JsonProperty("MaxBrake", NullValueHandling = NullValueHandling.Ignore)]
        public string MaxBrake { get; set; }

        [JsonProperty("MaxSpeedReverse", NullValueHandling = NullValueHandling.Ignore)]
        public string MaxSpeedReverse { get; set; }

        [JsonProperty("MaxSteerForce", NullValueHandling = NullValueHandling.Ignore)]
        public string MaxSteerForce { get; set; }

        [JsonProperty("RotateBodyWhileMoving", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RotateBodyWhileMoving { get; set; }

        [JsonProperty("RotateOnSpot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RotateOnSpot { get; set; }

        [JsonProperty("TurnFacingRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurnFacingRate { get; set; }

        [JsonProperty("TurnRadius", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? TurnRadius { get; set; }

        [JsonProperty("TurnRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurnRate { get; set; }

        [JsonProperty("StandUpright", NullValueHandling = NullValueHandling.Ignore)]
        public bool? StandUpright { get; set; }

        [JsonProperty("BackUpDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BackUpDistance { get; set; }

        [JsonProperty("RotateOnSpotThreshold", NullValueHandling = NullValueHandling.Ignore)]
        public string RotateOnSpotThreshold { get; set; }

        [JsonProperty("SkirtOffsetX", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? SkirtOffsetX { get; set; }

        [JsonProperty("SkirtOffsetZ", NullValueHandling = NullValueHandling.Ignore)]
        public string SkirtOffsetZ { get; set; }

        [JsonProperty("SkirtSizeX", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SkirtSizeX { get; set; }

        [JsonProperty("SkirtSizeZ", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SkirtSizeZ { get; set; }

        [JsonProperty("FlattenSkirt", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FlattenSkirt { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("2", NullValueHandling = NullValueHandling.Ignore)]
        public string The2 { get; set; }

        [JsonProperty("RaisedPlatforms", NullValueHandling = NullValueHandling.Ignore)]
        public List<CombatTurnSpeed> RaisedPlatforms { get; set; }

        [JsonProperty("RollOffPoints", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, RollOffPoint> RollOffPoints { get; set; }

        [JsonProperty("OccupyRects", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> OccupyRects { get; set; }

        [JsonProperty("BuildRestriction", NullValueHandling = NullValueHandling.Ignore)]
        public BuildRestriction? BuildRestriction { get; set; }

        [JsonProperty("MaxGroundVariation", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxGroundVariation { get; set; }

        [JsonProperty("LayerChangeOffsetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public string LayerChangeOffsetHeight { get; set; }

        [JsonProperty("WobbleFactor", NullValueHandling = NullValueHandling.Ignore)]
        public string WobbleFactor { get; set; }

        [JsonProperty("WobbleSpeed", NullValueHandling = NullValueHandling.Ignore)]
        public string WobbleSpeed { get; set; }

        [JsonProperty("WaterSpeedMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string WaterSpeedMultiplier { get; set; }

        [JsonProperty("CatchUpAcc", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CatchUpAcc { get; set; }

        [JsonProperty("CollisionOffsetX", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CollisionOffsetX { get; set; }

        [JsonProperty("MeshExtentsOffsetY", NullValueHandling = NullValueHandling.Ignore)]
        public string MeshExtentsOffsetY { get; set; }

        [JsonProperty("Footprint", NullValueHandling = NullValueHandling.Ignore)]
        public PhysicsFootprint Footprint { get; set; }

        [JsonProperty("BackupDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BackupDistance { get; set; }

        [JsonProperty("SinkLower", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SinkLower { get; set; }

        [JsonProperty("AltMotionType", NullValueHandling = NullValueHandling.Ignore)]
        public MotionType? AltMotionType { get; set; }

        [JsonProperty("LandSpeedMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? LandSpeedMultiplier { get; set; }

        [JsonProperty("LayerTransitionDuration", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? LayerTransitionDuration { get; set; }

        [JsonProperty("SinkSpeed", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? SinkSpeed { get; set; }

        [JsonProperty("StayUpright", NullValueHandling = NullValueHandling.Ignore)]
        public bool? StayUpright { get; set; }
    }

    public partial class BuildOnLayerCaps
    {
        [JsonProperty("LAYER_Air", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LayerAir { get; set; }

        [JsonProperty("LAYER_Land", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LayerLand { get; set; }

        [JsonProperty("LAYER_Orbit", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LayerOrbit { get; set; }

        [JsonProperty("LAYER_Seabed", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LayerSeabed { get; set; }

        [JsonProperty("LAYER_Sub", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LayerSub { get; set; }

        [JsonProperty("LAYER_Water", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LayerWater { get; set; }
    }

    public partial class PhysicsFootprint
    {
        [JsonProperty("SizeX", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? SizeX { get; set; }

        [JsonProperty("SizeY", NullValueHandling = NullValueHandling.Ignore)]
        public string SizeY { get; set; }

        [JsonProperty("SizeZ", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SizeZ { get; set; }
    }

    public partial class RollOffPoint
    {
        [JsonProperty("X", NullValueHandling = NullValueHandling.Ignore)]
        public string X { get; set; }

        [JsonProperty("Y", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Y { get; set; }

        [JsonProperty("Z", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? Z { get; set; }

        [JsonProperty("UnitSpin", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? UnitSpin { get; set; }
    }

    public partial class Rotators
    {
        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("2", NullValueHandling = NullValueHandling.Ignore)]
        public string The2 { get; set; }

        [JsonProperty("3", NullValueHandling = NullValueHandling.Ignore)]
        public string The3 { get; set; }

        [JsonProperty("Stationary", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Stationary { get; set; }

        [JsonProperty("PrimaryAccel", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? PrimaryAccel { get; set; }

        [JsonProperty("PrimarySpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? PrimarySpeed { get; set; }

        [JsonProperty("SecondaryAccel", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SecondaryAccel { get; set; }

        [JsonProperty("SecondarySpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SecondarySpeed { get; set; }
    }

    public partial class SpecialAbilities
    {
        [JsonProperty("LaunchTacMissile", NullValueHandling = NullValueHandling.Ignore)]
        public LaunchTacMissile LaunchTacMissile { get; set; }

        [JsonProperty("LaunchNuke", NullValueHandling = NullValueHandling.Ignore)]
        public LaunchNuke LaunchNuke { get; set; }

        [JsonProperty("NomadsIntelOvercharge", NullValueHandling = NullValueHandling.Ignore)]
        public LaunchNuke NomadsIntelOvercharge { get; set; }

        [JsonProperty("NomadsAreaBombardment", NullValueHandling = NullValueHandling.Ignore)]
        public NomadsAreaBombardment NomadsAreaBombardment { get; set; }

        [JsonProperty("NomadsIntelProbe", NullValueHandling = NullValueHandling.Ignore)]
        public NomadsIntelProbe NomadsIntelProbe { get; set; }

        [JsonProperty("NomadsIntelProbeAdvanced", NullValueHandling = NullValueHandling.Ignore)]
        public NomadsIntelProbe NomadsIntelProbeAdvanced { get; set; }
    }

    public partial class LaunchNuke
    {
        [JsonProperty("AreaOfEffect", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AreaOfEffect { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }
    }

    public partial class LaunchTacMissile
    {
        [JsonProperty("AreaOfEffect", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AreaOfEffect { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }
    }

    public partial class NomadsAreaBombardment
    {
        [JsonProperty("AreaOfEffect", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AreaOfEffect { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("NoAutoEnable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NoAutoEnable { get; set; }

        [JsonProperty("WantNumTargets", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WantNumTargets { get; set; }

        [JsonProperty("CanUseRangeExtenders", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CanUseRangeExtenders { get; set; }

        [JsonProperty("IsRangeExtender", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsRangeExtender { get; set; }
    }

    public partial class NomadsIntelProbe
    {
        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("NoAutoEnable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NoAutoEnable { get; set; }
    }

    public partial class SplitDamage
    {
        [JsonProperty("DamageAmount", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageAmount { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageRadius { get; set; }
    }

    public partial class Transport
    {
        [JsonProperty("AirClass", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AirClass { get; set; }

        [JsonProperty("TransportClass", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TransportClass { get; set; }

        [JsonProperty("CanFireFromTransport", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CanFireFromTransport { get; set; }

        [JsonProperty("Class2AttachSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Class2AttachSize { get; set; }

        [JsonProperty("Class3AttachSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Class3AttachSize { get; set; }

        [JsonProperty("ClassGenericUpTo", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ClassGenericUpTo { get; set; }

        [JsonProperty("Class4AttachSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Class4AttachSize { get; set; }

        [JsonProperty("StorageSlots", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? StorageSlots { get; set; }

        [JsonProperty("DockingSlots", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DockingSlots { get; set; }

        [JsonProperty("RepairRate", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RepairRate { get; set; }

        [JsonProperty("ClassSAttachSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ClassSAttachSize { get; set; }

        [JsonProperty("Class1AttachSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Class1AttachSize { get; set; }

        [JsonProperty("DontUseForcedAttachPoints", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DontUseForcedAttachPoints { get; set; }
    }

    public partial class Weapon
    {
        [JsonProperty("Property235", NullValueHandling = NullValueHandling.Ignore)]
        public Property235 Property235 { get; set; }

        [JsonProperty("Property309", NullValueHandling = NullValueHandling.Ignore)]
        public Property309 Property309 { get; set; }

        [JsonProperty("Property227", NullValueHandling = NullValueHandling.Ignore)]
        public WeaponProperty227 Property227 { get; set; }

        [JsonProperty("Property284", NullValueHandling = NullValueHandling.Ignore)]
        public Property284 Property284 { get; set; }

        [JsonProperty("Property362", NullValueHandling = NullValueHandling.Ignore)]
        public Property362 Property362 { get; set; }

        [JsonProperty("Property441", NullValueHandling = NullValueHandling.Ignore)]
        public Property441 Property441 { get; set; }

        [JsonProperty("Property518", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property518 { get; set; }

        [JsonProperty("Property212", NullValueHandling = NullValueHandling.Ignore)]
        public Property212 Property212 { get; set; }

        [JsonProperty("Property290", NullValueHandling = NullValueHandling.Ignore)]
        public Property290 Property290 { get; set; }

        [JsonProperty("Property266", NullValueHandling = NullValueHandling.Ignore)]
        public Property266 Property266 { get; set; }

        [JsonProperty("Property343", NullValueHandling = NullValueHandling.Ignore)]
        public Property343 Property343 { get; set; }

        [JsonProperty("Property420", NullValueHandling = NullValueHandling.Ignore)]
        public Property420 Property420 { get; set; }

        [JsonProperty("Property221", NullValueHandling = NullValueHandling.Ignore)]
        public Property221 Property221 { get; set; }

        [JsonProperty("Property267", NullValueHandling = NullValueHandling.Ignore)]
        public Property267 Property267 { get; set; }

        [JsonProperty("Property277", NullValueHandling = NullValueHandling.Ignore)]
        public Property277 Property277 { get; set; }

        [JsonProperty("Property350", NullValueHandling = NullValueHandling.Ignore)]
        public Property350 Property350 { get; set; }

        [JsonProperty("Property423", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property423 { get; set; }

        [JsonProperty("Property265", NullValueHandling = NullValueHandling.Ignore)]
        public Property280Class Property265 { get; set; }

        [JsonProperty("Property340", NullValueHandling = NullValueHandling.Ignore)]
        public Property340 Property340 { get; set; }

        [JsonProperty("Property270", NullValueHandling = NullValueHandling.Ignore)]
        public Property270 Property270 { get; set; }

        [JsonProperty("Property339", NullValueHandling = NullValueHandling.Ignore)]
        public Property339 Property339 { get; set; }

        [JsonProperty("Property409", NullValueHandling = NullValueHandling.Ignore)]
        public Property409 Property409 { get; set; }

        [JsonProperty("Property479", NullValueHandling = NullValueHandling.Ignore)]
        public Property479 Property479 { get; set; }

        [JsonProperty("Property549", NullValueHandling = NullValueHandling.Ignore)]
        public Property549 Property549 { get; set; }

        [JsonProperty("Property578", NullValueHandling = NullValueHandling.Ignore)]
        public Property578 Property578 { get; set; }

        [JsonProperty("Property250", NullValueHandling = NullValueHandling.Ignore)]
        public Property250 Property250 { get; set; }

        [JsonProperty("Property233", NullValueHandling = NullValueHandling.Ignore)]
        public Property233 Property233 { get; set; }

        [JsonProperty("Property301", NullValueHandling = NullValueHandling.Ignore)]
        public Property301 Property301 { get; set; }

        [JsonProperty("Property272", NullValueHandling = NullValueHandling.Ignore)]
        public Property272 Property272 { get; set; }

        [JsonProperty("Property341", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property341 { get; set; }

        [JsonProperty("Property244", NullValueHandling = NullValueHandling.Ignore)]
        public WeaponProperty244 Property244 { get; set; }

        [JsonProperty("Property268", NullValueHandling = NullValueHandling.Ignore)]
        public Property268 Property268 { get; set; }

        [JsonProperty("Property264", NullValueHandling = NullValueHandling.Ignore)]
        public Property264 Property264 { get; set; }

        [JsonProperty("Property328", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property328 { get; set; }

        [JsonProperty("Property338", NullValueHandling = NullValueHandling.Ignore)]
        public Property338 Property338 { get; set; }

        [JsonProperty("Property407", NullValueHandling = NullValueHandling.Ignore)]
        public Property407 Property407 { get; set; }

        [JsonProperty("Property477", NullValueHandling = NullValueHandling.Ignore)]
        public Property477 Property477 { get; set; }

        [JsonProperty("Property547", NullValueHandling = NullValueHandling.Ignore)]
        public Property547 Property547 { get; set; }

        [JsonProperty("Property617", NullValueHandling = NullValueHandling.Ignore)]
        public Property617 Property617 { get; set; }

        [JsonProperty("Property670", NullValueHandling = NullValueHandling.Ignore)]
        public Property670 Property670 { get; set; }

        [JsonProperty("Property724", NullValueHandling = NullValueHandling.Ignore)]
        public Property724 Property724 { get; set; }

        [JsonProperty("Property802", NullValueHandling = NullValueHandling.Ignore)]
        public Property802 Property802 { get; set; }

        [JsonProperty("Property881", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property881 { get; set; }

        [JsonProperty("Property193", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property193 { get; set; }

        [JsonProperty("Property175", NullValueHandling = NullValueHandling.Ignore)]
        public Property175 Property175 { get; set; }

        [JsonProperty("Property196", NullValueHandling = NullValueHandling.Ignore)]
        public Property196 Property196 { get; set; }

        [JsonProperty("Property237", NullValueHandling = NullValueHandling.Ignore)]
        public Property237 Property237 { get; set; }

        [JsonProperty("Property241", NullValueHandling = NullValueHandling.Ignore)]
        public Property241 Property241 { get; set; }

        [JsonProperty("Property228", NullValueHandling = NullValueHandling.Ignore)]
        public WeaponProperty228 Property228 { get; set; }

        [JsonProperty("Property174", NullValueHandling = NullValueHandling.Ignore)]
        public Property174 Property174 { get; set; }

        [JsonProperty("Property194", NullValueHandling = NullValueHandling.Ignore)]
        public Property194 Property194 { get; set; }

        [JsonProperty("Property232", NullValueHandling = NullValueHandling.Ignore)]
        public WeaponProperty232 Property232 { get; set; }

        [JsonProperty("Property189", NullValueHandling = NullValueHandling.Ignore)]
        public Property189 Property189 { get; set; }

        [JsonProperty("Property199", NullValueHandling = NullValueHandling.Ignore)]
        public Property199 Property199 { get; set; }

        [JsonProperty("Property219", NullValueHandling = NullValueHandling.Ignore)]
        public Property219 Property219 { get; set; }

        [JsonProperty("Property183", NullValueHandling = NullValueHandling.Ignore)]
        public Property183 Property183 { get; set; }

        [JsonProperty("Property182", NullValueHandling = NullValueHandling.Ignore)]
        public Property182 Property182 { get; set; }

        [JsonProperty("Property190", NullValueHandling = NullValueHandling.Ignore)]
        public Property190 Property190 { get; set; }

        [JsonProperty("Property313", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property313 { get; set; }

        [JsonProperty("Property243", NullValueHandling = NullValueHandling.Ignore)]
        public Property243 Property243 { get; set; }

        [JsonProperty("Property214", NullValueHandling = NullValueHandling.Ignore)]
        public Property214 Property214 { get; set; }

        [JsonProperty("Property871", NullValueHandling = NullValueHandling.Ignore)]
        public Property871 Property871 { get; set; }

        [JsonProperty("Property942", NullValueHandling = NullValueHandling.Ignore)]
        public Property942 Property942 { get; set; }

        [JsonProperty("Property1024", NullValueHandling = NullValueHandling.Ignore)]
        public Property1024 Property1024 { get; set; }

        [JsonProperty("Property1104", NullValueHandling = NullValueHandling.Ignore)]
        public Property1104 Property1104 { get; set; }

        [JsonProperty("Property1180", NullValueHandling = NullValueHandling.Ignore)]
        public Property1180 Property1180 { get; set; }

        [JsonProperty("Property1219", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property1219 { get; set; }

        [JsonProperty("Property206", NullValueHandling = NullValueHandling.Ignore)]
        public Property206 Property206 { get; set; }

        [JsonProperty("Property210", NullValueHandling = NullValueHandling.Ignore)]
        public WeaponProperty210 Property210 { get; set; }

        [JsonProperty("Property236", NullValueHandling = NullValueHandling.Ignore)]
        public Property236 Property236 { get; set; }

        [JsonProperty("Property217", NullValueHandling = NullValueHandling.Ignore)]
        public Property217 Property217 { get; set; }

        [JsonProperty("Property248", NullValueHandling = NullValueHandling.Ignore)]
        public Property248 Property248 { get; set; }

        [JsonProperty("Property760", NullValueHandling = NullValueHandling.Ignore)]
        public Property760 Property760 { get; set; }

        [JsonProperty("Property832", NullValueHandling = NullValueHandling.Ignore)]
        public Property832 Property832 { get; set; }

        [JsonProperty("Property863", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property863 { get; set; }

        [JsonProperty("Property256", NullValueHandling = NullValueHandling.Ignore)]
        public Property256 Property256 { get; set; }

        [JsonProperty("Property197", NullValueHandling = NullValueHandling.Ignore)]
        public Property197 Property197 { get; set; }

        [JsonProperty("Property254", NullValueHandling = NullValueHandling.Ignore)]
        public Property254 Property254 { get; set; }

        [JsonProperty("Property369", NullValueHandling = NullValueHandling.Ignore)]
        public Property369 Property369 { get; set; }

        [JsonProperty("Property443", NullValueHandling = NullValueHandling.Ignore)]
        public Property443 Property443 { get; set; }

        [JsonProperty("Property532", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property532 { get; set; }

        [JsonProperty("Property215", NullValueHandling = NullValueHandling.Ignore)]
        public Property215 Property215 { get; set; }

        [JsonProperty("Property308", NullValueHandling = NullValueHandling.Ignore)]
        public Property308 Property308 { get; set; }

        [JsonProperty("Property379", NullValueHandling = NullValueHandling.Ignore)]
        public Property379 Property379 { get; set; }

        [JsonProperty("Property310", NullValueHandling = NullValueHandling.Ignore)]
        public Property310 Property310 { get; set; }

        [JsonProperty("Property365", NullValueHandling = NullValueHandling.Ignore)]
        public Property365 Property365 { get; set; }

        [JsonProperty("Property303", NullValueHandling = NullValueHandling.Ignore)]
        public Property303 Property303 { get; set; }

        [JsonProperty("Property374", NullValueHandling = NullValueHandling.Ignore)]
        public Property374 Property374 { get; set; }

        [JsonProperty("Property446", NullValueHandling = NullValueHandling.Ignore)]
        public Property446 Property446 { get; set; }

        [JsonProperty("Property316", NullValueHandling = NullValueHandling.Ignore)]
        public Property316 Property316 { get; set; }

        [JsonProperty("Property323", NullValueHandling = NullValueHandling.Ignore)]
        public Property323 Property323 { get; set; }

        [JsonProperty("Property411", NullValueHandling = NullValueHandling.Ignore)]
        public Property411 Property411 { get; set; }

        [JsonProperty("Property499", NullValueHandling = NullValueHandling.Ignore)]
        public Property499 Property499 { get; set; }

        [JsonProperty("Property257", NullValueHandling = NullValueHandling.Ignore)]
        public Property257 Property257 { get; set; }

        [JsonProperty("Property327", NullValueHandling = NullValueHandling.Ignore)]
        public Property327 Property327 { get; set; }

        [JsonProperty("Property326", NullValueHandling = NullValueHandling.Ignore)]
        public Property326 Property326 { get; set; }

        [JsonProperty("Property391", NullValueHandling = NullValueHandling.Ignore)]
        public Property391 Property391 { get; set; }

        [JsonProperty("Property195", NullValueHandling = NullValueHandling.Ignore)]
        public Property195 Property195 { get; set; }

        [JsonProperty("Property353", NullValueHandling = NullValueHandling.Ignore)]
        public Property353 Property353 { get; set; }

        [JsonProperty("Property442", NullValueHandling = NullValueHandling.Ignore)]
        public Property442 Property442 { get; set; }

        [JsonProperty("Property512", NullValueHandling = NullValueHandling.Ignore)]
        public Property512 Property512 { get; set; }

        [JsonProperty("Property224", NullValueHandling = NullValueHandling.Ignore)]
        public Property224 Property224 { get; set; }

        [JsonProperty("Property258", NullValueHandling = NullValueHandling.Ignore)]
        public Property258 Property258 { get; set; }

        [JsonProperty("Property320", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property320 { get; set; }

        [JsonProperty("Property294", NullValueHandling = NullValueHandling.Ignore)]
        public Property294 Property294 { get; set; }

        [JsonProperty("Property361", NullValueHandling = NullValueHandling.Ignore)]
        public Property361 Property361 { get; set; }

        [JsonProperty("Property429", NullValueHandling = NullValueHandling.Ignore)]
        public Property429 Property429 { get; set; }

        [JsonProperty("Property504", NullValueHandling = NullValueHandling.Ignore)]
        public Property504 Property504 { get; set; }

        [JsonProperty("Property580", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property580 { get; set; }

        [JsonProperty("Property344", NullValueHandling = NullValueHandling.Ignore)]
        public Property344 Property344 { get; set; }

        [JsonProperty("Property280", NullValueHandling = NullValueHandling.Ignore)]
        public Property280Class Property280 { get; set; }

        [JsonProperty("Property252", NullValueHandling = NullValueHandling.Ignore)]
        public Property252 Property252 { get; set; }

        [JsonProperty("Property273", NullValueHandling = NullValueHandling.Ignore)]
        public Property273 Property273 { get; set; }

        [JsonProperty("Property346", NullValueHandling = NullValueHandling.Ignore)]
        public Property346 Property346 { get; set; }

        [JsonProperty("Property419", NullValueHandling = NullValueHandling.Ignore)]
        public Property419 Property419 { get; set; }

        [JsonProperty("Property283", NullValueHandling = NullValueHandling.Ignore)]
        public Property283 Property283 { get; set; }

        [JsonProperty("Property351", NullValueHandling = NullValueHandling.Ignore)]
        public Property351 Property351 { get; set; }

        [JsonProperty("Property421", NullValueHandling = NullValueHandling.Ignore)]
        public Property421 Property421 { get; set; }

        [JsonProperty("Property492", NullValueHandling = NullValueHandling.Ignore)]
        public Property492 Property492 { get; set; }

        [JsonProperty("Property321", NullValueHandling = NullValueHandling.Ignore)]
        public Property321 Property321 { get; set; }

        [JsonProperty("Property395", NullValueHandling = NullValueHandling.Ignore)]
        public Property395 Property395 { get; set; }

        [JsonProperty("Property468", NullValueHandling = NullValueHandling.Ignore)]
        public Property468 Property468 { get; set; }

        [JsonProperty("Property162", NullValueHandling = NullValueHandling.Ignore)]
        public Property162 Property162 { get; set; }

        [JsonProperty("Property203", NullValueHandling = NullValueHandling.Ignore)]
        public Property203 Property203 { get; set; }

        [JsonProperty("Property245", NullValueHandling = NullValueHandling.Ignore)]
        public Property245 Property245 { get; set; }

        [JsonProperty("Property205", NullValueHandling = NullValueHandling.Ignore)]
        public Property205 Property205 { get; set; }

        [JsonProperty("Property160", NullValueHandling = NullValueHandling.Ignore)]
        public Property160 Property160 { get; set; }

        [JsonProperty("Property185", NullValueHandling = NullValueHandling.Ignore)]
        public Property185 Property185 { get; set; }

        [JsonProperty("Property202", NullValueHandling = NullValueHandling.Ignore)]
        public Property202 Property202 { get; set; }

        [JsonProperty("Property188", NullValueHandling = NullValueHandling.Ignore)]
        public Property188 Property188 { get; set; }

        [JsonProperty("Property191", NullValueHandling = NullValueHandling.Ignore)]
        public Property191 Property191 { get; set; }

        [JsonProperty("Property285", NullValueHandling = NullValueHandling.Ignore)]
        public Property285 Property285 { get; set; }

        [JsonProperty("Property169", NullValueHandling = NullValueHandling.Ignore)]
        public Property169 Property169 { get; set; }

        [JsonProperty("Property181", NullValueHandling = NullValueHandling.Ignore)]
        public WeaponProperty181 Property181 { get; set; }

        [JsonProperty("Property937", NullValueHandling = NullValueHandling.Ignore)]
        public Property937 Property937 { get; set; }

        [JsonProperty("Property1007", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007 Property1007 { get; set; }

        [JsonProperty("Property1089", NullValueHandling = NullValueHandling.Ignore)]
        public Property1089 Property1089 { get; set; }

        [JsonProperty("Property1169", NullValueHandling = NullValueHandling.Ignore)]
        public Property1169 Property1169 { get; set; }

        [JsonProperty("Property1237", NullValueHandling = NullValueHandling.Ignore)]
        public Property1237 Property1237 { get; set; }

        [JsonProperty("Property1307", NullValueHandling = NullValueHandling.Ignore)]
        public Property1307 Property1307 { get; set; }

        [JsonProperty("Property1346", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property1346 { get; set; }

        [JsonProperty("Property231", NullValueHandling = NullValueHandling.Ignore)]
        public Property231 Property231 { get; set; }

        [JsonProperty("Property216", NullValueHandling = NullValueHandling.Ignore)]
        public Property216 Property216 { get; set; }

        [JsonProperty("Property200", NullValueHandling = NullValueHandling.Ignore)]
        public Property200 Property200 { get; set; }

        [JsonProperty("Property201", NullValueHandling = NullValueHandling.Ignore)]
        public Property201 Property201 { get; set; }

        [JsonProperty("Property302", NullValueHandling = NullValueHandling.Ignore)]
        public Property302 Property302 { get; set; }

        [JsonProperty("Property229", NullValueHandling = NullValueHandling.Ignore)]
        public Property229 Property229 { get; set; }

        [JsonProperty("Property766", NullValueHandling = NullValueHandling.Ignore)]
        public Property766 Property766 { get; set; }

        [JsonProperty("Property838", NullValueHandling = NullValueHandling.Ignore)]
        public Property838 Property838 { get; set; }

        [JsonProperty("Property431", NullValueHandling = NullValueHandling.Ignore)]
        public Property431 Property431 { get; set; }

        [JsonProperty("Property522", NullValueHandling = NullValueHandling.Ignore)]
        public Property522 Property522 { get; set; }

        [JsonProperty("Property612", NullValueHandling = NullValueHandling.Ignore)]
        public Property612 Property612 { get; set; }

        [JsonProperty("Property704", NullValueHandling = NullValueHandling.Ignore)]
        public Property704 Property704 { get; set; }

        [JsonProperty("Property796", NullValueHandling = NullValueHandling.Ignore)]
        public Property796 Property796 { get; set; }

        [JsonProperty("Property867", NullValueHandling = NullValueHandling.Ignore)]
        public Property867 Property867 { get; set; }

        [JsonProperty("Property939", NullValueHandling = NullValueHandling.Ignore)]
        public Property939 Property939 { get; set; }

        [JsonProperty("Property1018", NullValueHandling = NullValueHandling.Ignore)]
        public Property1018 Property1018 { get; set; }

        [JsonProperty("Property1098", NullValueHandling = NullValueHandling.Ignore)]
        public Property1098 Property1098 { get; set; }

        [JsonProperty("Property1162", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property1162 { get; set; }

        [JsonProperty("Property255", NullValueHandling = NullValueHandling.Ignore)]
        public Property255 Property255 { get; set; }

        [JsonProperty("Property336", NullValueHandling = NullValueHandling.Ignore)]
        public Property336 Property336 { get; set; }

        [JsonProperty("Property427", NullValueHandling = NullValueHandling.Ignore)]
        public Property427 Property427 { get; set; }

        [JsonProperty("Property508", NullValueHandling = NullValueHandling.Ignore)]
        public Property508 Property508 { get; set; }

        [JsonProperty("Property602", NullValueHandling = NullValueHandling.Ignore)]
        public Property602 Property602 { get; set; }

        [JsonProperty("Property259", NullValueHandling = NullValueHandling.Ignore)]
        public Property259 Property259 { get; set; }

        [JsonProperty("Property370", NullValueHandling = NullValueHandling.Ignore)]
        public Property370 Property370 { get; set; }

        [JsonProperty("Property450", NullValueHandling = NullValueHandling.Ignore)]
        public Property450 Property450 { get; set; }

        [JsonProperty("Property527", NullValueHandling = NullValueHandling.Ignore)]
        public Property527 Property527 { get; set; }

        [JsonProperty("Property305", NullValueHandling = NullValueHandling.Ignore)]
        public Property305 Property305 { get; set; }

        [JsonProperty("Property363", NullValueHandling = NullValueHandling.Ignore)]
        public Property363 Property363 { get; set; }

        [JsonProperty("Property572", NullValueHandling = NullValueHandling.Ignore)]
        public Property572 Property572 { get; set; }

        [JsonProperty("Property649", NullValueHandling = NullValueHandling.Ignore)]
        public Property649 Property649 { get; set; }

        [JsonProperty("Property727", NullValueHandling = NullValueHandling.Ignore)]
        public Property727 Property727 { get; set; }

        [JsonProperty("Property805", NullValueHandling = NullValueHandling.Ignore)]
        public Property805 Property805 { get; set; }

        [JsonProperty("Property883", NullValueHandling = NullValueHandling.Ignore)]
        public Property883 Property883 { get; set; }

        [JsonProperty("Property946", NullValueHandling = NullValueHandling.Ignore)]
        public Property946 Property946 { get; set; }

        [JsonProperty("Property387", NullValueHandling = NullValueHandling.Ignore)]
        public Property387 Property387 { get; set; }

        [JsonProperty("Property520", NullValueHandling = NullValueHandling.Ignore)]
        public Property520 Property520 { get; set; }

        [JsonProperty("Property591", NullValueHandling = NullValueHandling.Ignore)]
        public Property591 Property591 { get; set; }

        [JsonProperty("Property662", NullValueHandling = NullValueHandling.Ignore)]
        public Property662 Property662 { get; set; }

        [JsonProperty("Property247", NullValueHandling = NullValueHandling.Ignore)]
        public Property247 Property247 { get; set; }

        [JsonProperty("Property400", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property400 { get; set; }

        [JsonProperty("Property274", NullValueHandling = NullValueHandling.Ignore)]
        public Property274 Property274 { get; set; }

        [JsonProperty("Property366", NullValueHandling = NullValueHandling.Ignore)]
        public Property366 Property366 { get; set; }

        [JsonProperty("Property436", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property436 { get; set; }

        [JsonProperty("Property269", NullValueHandling = NullValueHandling.Ignore)]
        public Property269 Property269 { get; set; }

        [JsonProperty("Property342", NullValueHandling = NullValueHandling.Ignore)]
        public Property342 Property342 { get; set; }

        [JsonProperty("Property281", NullValueHandling = NullValueHandling.Ignore)]
        public Property281 Property281 { get; set; }

        [JsonProperty("Property345", NullValueHandling = NullValueHandling.Ignore)]
        public Property345 Property345 { get; set; }

        [JsonProperty("Property347", NullValueHandling = NullValueHandling.Ignore)]
        public Property347 Property347 { get; set; }

        [JsonProperty("Property295", NullValueHandling = NullValueHandling.Ignore)]
        public Property295 Property295 { get; set; }

        [JsonProperty("Property360", NullValueHandling = NullValueHandling.Ignore)]
        public Property360 Property360 { get; set; }

        [JsonProperty("Property503", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property503 { get; set; }

        [JsonProperty("Property282", NullValueHandling = NullValueHandling.Ignore)]
        public Property282 Property282 { get; set; }

        [JsonProperty("Property425", NullValueHandling = NullValueHandling.Ignore)]
        public Property425 Property425 { get; set; }

        [JsonProperty("Property498", NullValueHandling = NullValueHandling.Ignore)]
        public Property498 Property498 { get; set; }

        [JsonProperty("Property644", NullValueHandling = NullValueHandling.Ignore)]
        public Property644 Property644 { get; set; }

        [JsonProperty("Property717", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property717 { get; set; }

        [JsonProperty("Property192", NullValueHandling = NullValueHandling.Ignore)]
        public Property192 Property192 { get; set; }

        [JsonProperty("Property171", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property171 { get; set; }

        [JsonProperty("Property186", NullValueHandling = NullValueHandling.Ignore)]
        public Property186 Property186 { get; set; }

        [JsonProperty("Property204", NullValueHandling = NullValueHandling.Ignore)]
        public Property204 Property204 { get; set; }

        [JsonProperty("Property179", NullValueHandling = NullValueHandling.Ignore)]
        public Property179 Property179 { get; set; }

        [JsonProperty("Property178", NullValueHandling = NullValueHandling.Ignore)]
        public Property178 Property178 { get; set; }

        [JsonProperty("Property166", NullValueHandling = NullValueHandling.Ignore)]
        public Property166 Property166 { get; set; }

        [JsonProperty("Property211", NullValueHandling = NullValueHandling.Ignore)]
        public Property211 Property211 { get; set; }

        [JsonProperty("Property774", NullValueHandling = NullValueHandling.Ignore)]
        public Property774 Property774 { get; set; }

        [JsonProperty("Property816", NullValueHandling = NullValueHandling.Ignore)]
        public Property816 Property816 { get; set; }

        [JsonProperty("Property889", NullValueHandling = NullValueHandling.Ignore)]
        public Property889 Property889 { get; set; }

        [JsonProperty("Property972", NullValueHandling = NullValueHandling.Ignore)]
        public Property972 Property972 { get; set; }

        [JsonProperty("Property1053", NullValueHandling = NullValueHandling.Ignore)]
        public Property1053 Property1053 { get; set; }

        [JsonProperty("Property1092", NullValueHandling = NullValueHandling.Ignore)]
        public Property1092 Property1092 { get; set; }

        [JsonProperty("Property1187", NullValueHandling = NullValueHandling.Ignore)]
        public Property1187 Property1187 { get; set; }

        [JsonProperty("Property198", NullValueHandling = NullValueHandling.Ignore)]
        public Property198 Property198 { get; set; }

        [JsonProperty("Property337", NullValueHandling = NullValueHandling.Ignore)]
        public Property337 Property337 { get; set; }

        [JsonProperty("Property223", NullValueHandling = NullValueHandling.Ignore)]
        public Property223 Property223 { get; set; }

        [JsonProperty("Property684", NullValueHandling = NullValueHandling.Ignore)]
        public Property684 Property684 { get; set; }

        [JsonProperty("Property800", NullValueHandling = NullValueHandling.Ignore)]
        public Property800 Property800 { get; set; }

        [JsonProperty("Property879", NullValueHandling = NullValueHandling.Ignore)]
        public Property879 Property879 { get; set; }

        [JsonProperty("Property381", NullValueHandling = NullValueHandling.Ignore)]
        public Property381 Property381 { get; set; }

        [JsonProperty("Property331", NullValueHandling = NullValueHandling.Ignore)]
        public Property331 Property331 { get; set; }

        [JsonProperty("Property426", NullValueHandling = NullValueHandling.Ignore)]
        public Property426 Property426 { get; set; }

        [JsonProperty("Property501", NullValueHandling = NullValueHandling.Ignore)]
        public Property501 Property501 { get; set; }

        [JsonProperty("Property577", NullValueHandling = NullValueHandling.Ignore)]
        public Property577 Property577 { get; set; }

        [JsonProperty("Property648", NullValueHandling = NullValueHandling.Ignore)]
        public Property648 Property648 { get; set; }

        [JsonProperty("Property719", NullValueHandling = NullValueHandling.Ignore)]
        public Property719 Property719 { get; set; }

        [JsonProperty("Property783", NullValueHandling = NullValueHandling.Ignore)]
        public Property783 Property783 { get; set; }

        [JsonProperty("Property314", NullValueHandling = NullValueHandling.Ignore)]
        public Property314 Property314 { get; set; }

        [JsonProperty("Property355", NullValueHandling = NullValueHandling.Ignore)]
        public Property355 Property355 { get; set; }

        [JsonProperty("Property434", NullValueHandling = NullValueHandling.Ignore)]
        public Property434 Property434 { get; set; }

        [JsonProperty("Property510", NullValueHandling = NullValueHandling.Ignore)]
        public Property510 Property510 { get; set; }

        [JsonProperty("Property570", NullValueHandling = NullValueHandling.Ignore)]
        public Property570 Property570 { get; set; }

        [JsonProperty("Property352", NullValueHandling = NullValueHandling.Ignore)]
        public Property352 Property352 { get; set; }

        [JsonProperty("Property496", NullValueHandling = NullValueHandling.Ignore)]
        public Property496 Property496 { get; set; }

        [JsonProperty("Property556", NullValueHandling = NullValueHandling.Ignore)]
        public Property556 Property556 { get; set; }

        [JsonProperty("Property372", NullValueHandling = NullValueHandling.Ignore)]
        public Property372 Property372 { get; set; }

        [JsonProperty("Property507", NullValueHandling = NullValueHandling.Ignore)]
        public Property507 Property507 { get; set; }

        [JsonProperty("Property584", NullValueHandling = NullValueHandling.Ignore)]
        public Property584 Property584 { get; set; }

        [JsonProperty("Property710", NullValueHandling = NullValueHandling.Ignore)]
        public Property710 Property710 { get; set; }

        [JsonProperty("Property271", NullValueHandling = NullValueHandling.Ignore)]
        public Property271 Property271 { get; set; }

        [JsonProperty("Property500", NullValueHandling = NullValueHandling.Ignore)]
        public Property500 Property500 { get; set; }

        [JsonProperty("Property579", NullValueHandling = NullValueHandling.Ignore)]
        public Property579 Property579 { get; set; }

        [JsonProperty("Property422", NullValueHandling = NullValueHandling.Ignore)]
        public Property422 Property422 { get; set; }

        [JsonProperty("Property476", NullValueHandling = NullValueHandling.Ignore)]
        public Property476 Property476 { get; set; }

        [JsonProperty("Property90", NullValueHandling = NullValueHandling.Ignore)]
        public Property90 Property90 { get; set; }

        [JsonProperty("Property242", NullValueHandling = NullValueHandling.Ignore)]
        public Property242 Property242 { get; set; }

        [JsonProperty("Property383", NullValueHandling = NullValueHandling.Ignore)]
        public Property383 Property383 { get; set; }

        [JsonProperty("Property457", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property457 { get; set; }

        [JsonProperty("Property275", NullValueHandling = NullValueHandling.Ignore)]
        public Property27 Property275 { get; set; }

        [JsonProperty("Property222", NullValueHandling = NullValueHandling.Ignore)]
        public Property222 Property222 { get; set; }

        [JsonProperty("Property304", NullValueHandling = NullValueHandling.Ignore)]
        public Property304 Property304 { get; set; }

        [JsonProperty("Property396", NullValueHandling = NullValueHandling.Ignore)]
        public Property396 Property396 { get; set; }

        [JsonProperty("Property455", NullValueHandling = NullValueHandling.Ignore)]
        public Property455 Property455 { get; set; }

        [JsonProperty("Property515", NullValueHandling = NullValueHandling.Ignore)]
        public Property515 Property515 { get; set; }

        [JsonProperty("Property575", NullValueHandling = NullValueHandling.Ignore)]
        public Property575 Property575 { get; set; }

        [JsonProperty("Property330", NullValueHandling = NullValueHandling.Ignore)]
        public Property330 Property330 { get; set; }

        [JsonProperty("Property463", NullValueHandling = NullValueHandling.Ignore)]
        public Property463 Property463 { get; set; }

        [JsonProperty("Property569", NullValueHandling = NullValueHandling.Ignore)]
        public Property569 Property569 { get; set; }

        [JsonProperty("Property676", NullValueHandling = NullValueHandling.Ignore)]
        public Property676 Property676 { get; set; }

        [JsonProperty("Property890", NullValueHandling = NullValueHandling.Ignore)]
        public Property890 Property890 { get; set; }

        [JsonProperty("Property180", NullValueHandling = NullValueHandling.Ignore)]
        public Property180 Property180 { get; set; }

        [JsonProperty("Property318", NullValueHandling = NullValueHandling.Ignore)]
        public Property318 Property318 { get; set; }

        [JsonProperty("Property207", NullValueHandling = NullValueHandling.Ignore)]
        public Property207 Property207 { get; set; }

        [JsonProperty("Property220", NullValueHandling = NullValueHandling.Ignore)]
        public Property220 Property220 { get; set; }

        [JsonProperty("Property329", NullValueHandling = NullValueHandling.Ignore)]
        public Property329 Property329 { get; set; }

        [JsonProperty("Property406", NullValueHandling = NullValueHandling.Ignore)]
        public Property406 Property406 { get; set; }

        [JsonProperty("Property474", NullValueHandling = NullValueHandling.Ignore)]
        public Property474 Property474 { get; set; }

        [JsonProperty("Property533", NullValueHandling = NullValueHandling.Ignore)]
        public Property533 Property533 { get; set; }

        [JsonProperty("Property334", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property334 { get; set; }

        [JsonProperty("Property293", NullValueHandling = NullValueHandling.Ignore)]
        public Property293 Property293 { get; set; }

        [JsonProperty("Property226", NullValueHandling = NullValueHandling.Ignore)]
        public Property226 Property226 { get; set; }

        [JsonProperty("Property317", NullValueHandling = NullValueHandling.Ignore)]
        public Property317 Property317 { get; set; }

        [JsonProperty("Property573", NullValueHandling = NullValueHandling.Ignore)]
        public Property573 Property573 { get; set; }

        [JsonProperty("Property639", NullValueHandling = NullValueHandling.Ignore)]
        public Property639 Property639 { get; set; }

        [JsonProperty("Property720", NullValueHandling = NullValueHandling.Ignore)]
        public Property720 Property720 { get; set; }

        [JsonProperty("Property792", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property792 { get; set; }

        [JsonProperty("Property376", NullValueHandling = NullValueHandling.Ignore)]
        public Property376 Property376 { get; set; }

        [JsonProperty("Property278", NullValueHandling = NullValueHandling.Ignore)]
        public Property27 Property278 { get; set; }

        [JsonProperty("Property354", NullValueHandling = NullValueHandling.Ignore)]
        public Property354 Property354 { get; set; }

        [JsonProperty("Property286", NullValueHandling = NullValueHandling.Ignore)]
        public Property286 Property286 { get; set; }

        [JsonProperty("Property297", NullValueHandling = NullValueHandling.Ignore)]
        public Property297 Property297 { get; set; }

        [JsonProperty("Property373", NullValueHandling = NullValueHandling.Ignore)]
        public Property373 Property373 { get; set; }

        [JsonProperty("Property516", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property516 { get; set; }

        [JsonProperty("Property359", NullValueHandling = NullValueHandling.Ignore)]
        public Property359 Property359 { get; set; }

        [JsonProperty("Property435", NullValueHandling = NullValueHandling.Ignore)]
        public Property435 Property435 { get; set; }

        [JsonProperty("Property249", NullValueHandling = NullValueHandling.Ignore)]
        public Property249 Property249 { get; set; }

        [JsonProperty("Property315", NullValueHandling = NullValueHandling.Ignore)]
        public Property315 Property315 { get; set; }

        [JsonProperty("Property382", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property382 { get; set; }

        [JsonProperty("Property333", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property333 { get; set; }

        [JsonProperty("Property348", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property348 { get; set; }

        [JsonProperty("Property357", NullValueHandling = NullValueHandling.Ignore)]
        public Property357 Property357 { get; set; }

        [JsonProperty("Property430", NullValueHandling = NullValueHandling.Ignore)]
        public Property430 Property430 { get; set; }

        [JsonProperty("Property652", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property652 { get; set; }

        [JsonProperty("Property209", NullValueHandling = NullValueHandling.Ignore)]
        public Property209 Property209 { get; set; }

        [JsonProperty("Property213", NullValueHandling = NullValueHandling.Ignore)]
        public Property213 Property213 { get; set; }

        [JsonProperty("Property306", NullValueHandling = NullValueHandling.Ignore)]
        public Property306 Property306 { get; set; }

        [JsonProperty("Property130", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property130 { get; set; }

        [JsonProperty("Property960", NullValueHandling = NullValueHandling.Ignore)]
        public Property960 Property960 { get; set; }

        [JsonProperty("Property1043", NullValueHandling = NullValueHandling.Ignore)]
        public WeaponProperty1043 Property1043 { get; set; }

        [JsonProperty("Property1124", NullValueHandling = NullValueHandling.Ignore)]
        public Property1124 Property1124 { get; set; }

        [JsonProperty("Property1163", NullValueHandling = NullValueHandling.Ignore)]
        public Property1163 Property1163 { get; set; }

        [JsonProperty("Property1230", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property1230 { get; set; }

        [JsonProperty("Property276", NullValueHandling = NullValueHandling.Ignore)]
        public Property276 Property276 { get; set; }

        [JsonProperty("Property239", NullValueHandling = NullValueHandling.Ignore)]
        public Property239 Property239 { get; set; }

        [JsonProperty("Property291", NullValueHandling = NullValueHandling.Ignore)]
        public Property291 Property291 { get; set; }

        [JsonProperty("Property288", NullValueHandling = NullValueHandling.Ignore)]
        public Property288 Property288 { get; set; }

        [JsonProperty("Property753", NullValueHandling = NullValueHandling.Ignore)]
        public Property753 Property753 { get; set; }

        [JsonProperty("Property825", NullValueHandling = NullValueHandling.Ignore)]
        public Property825 Property825 { get; set; }

        [JsonProperty("Property907", NullValueHandling = NullValueHandling.Ignore)]
        public Property907 Property907 { get; set; }

        [JsonProperty("Property987", NullValueHandling = NullValueHandling.Ignore)]
        public Property987 Property987 { get; set; }

        [JsonProperty("Property1085", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property1085 { get; set; }

        [JsonProperty("Property497", NullValueHandling = NullValueHandling.Ignore)]
        public Property497 Property497 { get; set; }

        [JsonProperty("Property292", NullValueHandling = NullValueHandling.Ignore)]
        public Property292 Property292 { get; set; }

        [JsonProperty("Property371", NullValueHandling = NullValueHandling.Ignore)]
        public Property371 Property371 { get; set; }

        [JsonProperty("Property536", NullValueHandling = NullValueHandling.Ignore)]
        public Property536 Property536 { get; set; }

        [JsonProperty("Property618", NullValueHandling = NullValueHandling.Ignore)]
        public Property618 Property618 { get; set; }

        [JsonProperty("Property701", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property701 { get; set; }

        [JsonProperty("Property312", NullValueHandling = NullValueHandling.Ignore)]
        public Property312 Property312 { get; set; }

        [JsonProperty("Property437", NullValueHandling = NullValueHandling.Ignore)]
        public Property437 Property437 { get; set; }

        [JsonProperty("Property439", NullValueHandling = NullValueHandling.Ignore)]
        public Property439 Property439 { get; set; }

        [JsonProperty("Property417", NullValueHandling = NullValueHandling.Ignore)]
        public Property417 Property417 { get; set; }

        [JsonProperty("Property263", NullValueHandling = NullValueHandling.Ignore)]
        public Property263 Property263 { get; set; }

        [JsonProperty("Property428", NullValueHandling = NullValueHandling.Ignore)]
        public Property428 Property428 { get; set; }

        [JsonProperty("Property511", NullValueHandling = NullValueHandling.Ignore)]
        public Property511 Property511 { get; set; }

        [JsonProperty("Property635", NullValueHandling = NullValueHandling.Ignore)]
        public Property635 Property635 { get; set; }

        [JsonProperty("Property711", NullValueHandling = NullValueHandling.Ignore)]
        public Property711 Property711 { get; set; }

        [JsonProperty("Property788", NullValueHandling = NullValueHandling.Ignore)]
        public Property788 Property788 { get; set; }

        [JsonProperty("Property262", NullValueHandling = NullValueHandling.Ignore)]
        public Property262 Property262 { get; set; }

        [JsonProperty("Property390", NullValueHandling = NullValueHandling.Ignore)]
        public Property390 Property390 { get; set; }

        [JsonProperty("Property418", NullValueHandling = NullValueHandling.Ignore)]
        public Property418 Property418 { get; set; }

        [JsonProperty("Property238", NullValueHandling = NullValueHandling.Ignore)]
        public Property238 Property238 { get; set; }

        [JsonProperty("Property397", NullValueHandling = NullValueHandling.Ignore)]
        public Property397 Property397 { get; set; }

        [JsonProperty("Property493", NullValueHandling = NullValueHandling.Ignore)]
        public Property493 Property493 { get; set; }

        [JsonProperty("Property567", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property567 { get; set; }

        [JsonProperty("Property415", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property415 { get; set; }

        [JsonProperty("Property299", NullValueHandling = NullValueHandling.Ignore)]
        public Property299 Property299 { get; set; }

        [JsonProperty("Property519", NullValueHandling = NullValueHandling.Ignore)]
        public Property519 Property519 { get; set; }

        [JsonProperty("Property590", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property590 { get; set; }

        [JsonProperty("Property506", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property506 { get; set; }

        [JsonProperty("Property164", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property164 { get; set; }

        [JsonProperty("Property168", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property168 { get; set; }

        [JsonProperty("Property159", NullValueHandling = NullValueHandling.Ignore)]
        public Property159 Property159 { get; set; }

        [JsonProperty("Property176", NullValueHandling = NullValueHandling.Ignore)]
        public Property176 Property176 { get; set; }

        [JsonProperty("Property253", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property253 { get; set; }

        [JsonProperty("Property251", NullValueHandling = NullValueHandling.Ignore)]
        public Property251 Property251 { get; set; }

        [JsonProperty("Property177", NullValueHandling = NullValueHandling.Ignore)]
        public Property177 Property177 { get; set; }

        [JsonProperty("Property161", NullValueHandling = NullValueHandling.Ignore)]
        public Property161 Property161 { get; set; }

        [JsonProperty("Property172", NullValueHandling = NullValueHandling.Ignore)]
        public Property172 Property172 { get; set; }

        [JsonProperty("Property138", NullValueHandling = NullValueHandling.Ignore)]
        public Property138 Property138 { get; set; }

        [JsonProperty("Property157", NullValueHandling = NullValueHandling.Ignore)]
        public Property157 Property157 { get; set; }

        [JsonProperty("Property143", NullValueHandling = NullValueHandling.Ignore)]
        public Property143 Property143 { get; set; }

        [JsonProperty("Property375", NullValueHandling = NullValueHandling.Ignore)]
        public Property375 Property375 { get; set; }

        [JsonProperty("Property433", NullValueHandling = NullValueHandling.Ignore)]
        public Property433 Property433 { get; set; }

        [JsonProperty("Property491", NullValueHandling = NullValueHandling.Ignore)]
        public Property491 Property491 { get; set; }

        [JsonProperty("Property607", NullValueHandling = NullValueHandling.Ignore)]
        public Property607 Property607 { get; set; }

        [JsonProperty("Property665", NullValueHandling = NullValueHandling.Ignore)]
        public Property665 Property665 { get; set; }

        [JsonProperty("Property153", NullValueHandling = NullValueHandling.Ignore)]
        public Property153 Property153 { get; set; }

        [JsonProperty("Property307", NullValueHandling = NullValueHandling.Ignore)]
        public Property307 Property307 { get; set; }

        [JsonProperty("Property505", NullValueHandling = NullValueHandling.Ignore)]
        public Property505 Property505 { get; set; }

        [JsonProperty("Property412", NullValueHandling = NullValueHandling.Ignore)]
        public Property412 Property412 { get; set; }

        [JsonProperty("Property349", NullValueHandling = NullValueHandling.Ignore)]
        public Property349 Property349 { get; set; }

        [JsonProperty("Property432", NullValueHandling = NullValueHandling.Ignore)]
        public Property432 Property432 { get; set; }

        [JsonProperty("Property517", NullValueHandling = NullValueHandling.Ignore)]
        public Property517 Property517 { get; set; }

        [JsonProperty("Property687", NullValueHandling = NullValueHandling.Ignore)]
        public Property687 Property687 { get; set; }

        [JsonProperty("Property764", NullValueHandling = NullValueHandling.Ignore)]
        public Property764 Property764 { get; set; }

        [JsonProperty("Property465", NullValueHandling = NullValueHandling.Ignore)]
        public Property465 Property465 { get; set; }

        [JsonProperty("Property534", NullValueHandling = NullValueHandling.Ignore)]
        public Property534 Property534 { get; set; }

        [JsonProperty("Property603", NullValueHandling = NullValueHandling.Ignore)]
        public Property603 Property603 { get; set; }

        [JsonProperty("Property680", NullValueHandling = NullValueHandling.Ignore)]
        public Property680 Property680 { get; set; }

        [JsonProperty("Property857", NullValueHandling = NullValueHandling.Ignore)]
        public Property857 Property857 { get; set; }

        [JsonProperty("Property931", NullValueHandling = NullValueHandling.Ignore)]
        public Property931 Property931 { get; set; }

        [JsonProperty("Property1019", NullValueHandling = NullValueHandling.Ignore)]
        public Property1019 Property1019 { get; set; }

        [JsonProperty("Property1107", NullValueHandling = NullValueHandling.Ignore)]
        public Property1107 Property1107 { get; set; }

        [JsonProperty("Property1148", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148 Property1148 { get; set; }

        [JsonProperty("Property1397", NullValueHandling = NullValueHandling.Ignore)]
        public Property1397 Property1397 { get; set; }

        [JsonProperty("Property1483", NullValueHandling = NullValueHandling.Ignore)]
        public Property1483 Property1483 { get; set; }

        [JsonProperty("Property1574", NullValueHandling = NullValueHandling.Ignore)]
        public Property1574 Property1574 { get; set; }

        [JsonProperty("Property1660", NullValueHandling = NullValueHandling.Ignore)]
        public Property1660 Property1660 { get; set; }

        [JsonProperty("Property1746", NullValueHandling = NullValueHandling.Ignore)]
        public Property1746 Property1746 { get; set; }

        [JsonProperty("Property1822", NullValueHandling = NullValueHandling.Ignore)]
        public Property1822 Property1822 { get; set; }

        [JsonProperty("Property1861", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property1861 { get; set; }

        [JsonProperty("Property392", NullValueHandling = NullValueHandling.Ignore)]
        public Property392 Property392 { get; set; }

        [JsonProperty("Property322", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property322 { get; set; }

        [JsonProperty("Property324", NullValueHandling = NullValueHandling.Ignore)]
        public Property324 Property324 { get; set; }

        [JsonProperty("Property405", NullValueHandling = NullValueHandling.Ignore)]
        public Property405 Property405 { get; set; }

        [JsonProperty("Property489", NullValueHandling = NullValueHandling.Ignore)]
        public Property489 Property489 { get; set; }

        [JsonProperty("Property716", NullValueHandling = NullValueHandling.Ignore)]
        public Property716 Property716 { get; set; }

        [JsonProperty("Property803", NullValueHandling = NullValueHandling.Ignore)]
        public Property803 Property803 { get; set; }

        [JsonProperty("Property965", NullValueHandling = NullValueHandling.Ignore)]
        public Property965 Property965 { get; set; }

        [JsonProperty("Property1041", NullValueHandling = NullValueHandling.Ignore)]
        public Property1041 Property1041 { get; set; }

        [JsonProperty("Property1117", NullValueHandling = NullValueHandling.Ignore)]
        public Property1117 Property1117 { get; set; }

        [JsonProperty("Property1193", NullValueHandling = NullValueHandling.Ignore)]
        public Property1193 Property1193 { get; set; }

        [JsonProperty("Property1280", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property1280 { get; set; }

        [JsonProperty("Property377", NullValueHandling = NullValueHandling.Ignore)]
        public Property377 Property377 { get; set; }

        [JsonProperty("Property458", NullValueHandling = NullValueHandling.Ignore)]
        public Property458 Property458 { get; set; }

        [JsonProperty("Property548", NullValueHandling = NullValueHandling.Ignore)]
        public Property548 Property548 { get; set; }

        [JsonProperty("Property622", NullValueHandling = NullValueHandling.Ignore)]
        public Property622 Property622 { get; set; }

        [JsonProperty("Property696", NullValueHandling = NullValueHandling.Ignore)]
        public Property696 Property696 { get; set; }

        [JsonProperty("Property790", NullValueHandling = NullValueHandling.Ignore)]
        public Property790 Property790 { get; set; }

        [JsonProperty("Property884", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Class Property884 { get; set; }
    }

    public partial class Property1007
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("OverChargeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OverChargeWeapon { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Audio
    {
        [JsonProperty("Fire", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Fire { get; set; }
    }

    public partial class Property1007FireTargetLayerCapsTable
    {
        [JsonProperty("Land", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Land { get; set; }

        [JsonProperty("Seabed", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Seabed { get; set; }

        [JsonProperty("Water", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Water { get; set; }

        [JsonProperty("Sub", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Sub { get; set; }

        [JsonProperty("Air", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Air { get; set; }
    }

    public partial class Property1007RackBones
    {
        [JsonProperty("Property1043", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1043 { get; set; }
    }

    public partial class Property1043
    {
        [JsonProperty("MuzzleBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> MuzzleBones { get; set; }

        [JsonProperty("RackBone", NullValueHandling = NullValueHandling.Ignore)]
        public string RackBone { get; set; }
    }

    public partial class Property1018
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1018RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleChargeDelay { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }
    }

    public partial class Property1018RackBones
    {
        [JsonProperty("Property1052", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1052 { get; set; }

        [JsonProperty("Property1056", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1056 { get; set; }
    }

    public partial class Property1019
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageDuringCapacitor { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageRadiusDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadiusDuringCapacitor { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTTimeDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTimeDuringCapacitor { get; set; }

        [JsonProperty("DoTPulsesDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulsesDuringCapacitor { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("InitialDamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialDamageDuringCapacitor { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileIdDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileIdDuringCapacitor { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1019RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property1019RackBones
    {
        [JsonProperty("Property1061", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1061 { get; set; }
    }

    public partial class Property1024
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1024RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property1024RackBones
    {
        [JsonProperty("Property1058", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1058 { get; set; }
    }

    public partial class Property1041
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombardDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardDisable { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1041RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property1041RackBones
    {
        [JsonProperty("Property1074", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1074 { get; set; }
    }

    public partial class WeaponProperty1043
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property1043RackBones
    {
        [JsonProperty("Property1078", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1078 { get; set; }
    }

    public partial class Property1053
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireOnDeath", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FireOnDeath { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property1085Class
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public WeaponCategory? WeaponCategory { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property1085Buffs Buffs { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }
    }

    public partial class Property1085Buffs
    {
        [JsonProperty("Property262", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property262 { get; set; }

        [JsonProperty("Property270", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property270 { get; set; }

        [JsonProperty("Property278", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property278 { get; set; }
    }

    public partial class Property262Class
    {
        [JsonProperty("Add", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Add Add { get; set; }

        [JsonProperty("BuffType", NullValueHandling = NullValueHandling.Ignore)]
        public BuffType? BuffType { get; set; }

        [JsonProperty("Duration", NullValueHandling = NullValueHandling.Ignore)]
        public string Duration { get; set; }

        [JsonProperty("Radius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Radius { get; set; }

        [JsonProperty("TargetAllow", NullValueHandling = NullValueHandling.Ignore)]
        public Target? TargetAllow { get; set; }

        [JsonProperty("TargetDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public TargetDisallow? TargetDisallow { get; set; }

        [JsonProperty("ApplyToFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ApplyToFriendly { get; set; }
    }

    public partial class Property262Add
    {
        [JsonProperty("OnFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OnFire { get; set; }
    }

    public partial class Property1089
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1089RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property1089RackBones
    {
        [JsonProperty("Property1123", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1123 { get; set; }
    }

    public partial class Property1092
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property1092Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("CanFireFromTransport", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CanFireFromTransport { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("ContinuousBeam", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ContinuousBeam { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnabledByEnhancement", NullValueHandling = NullValueHandling.Ignore)]
        public string EnabledByEnhancement { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1092RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property1092Audio
    {
        [JsonProperty("BeamLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BeamLoop { get; set; }

        [JsonProperty("BeamStart", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BeamStart { get; set; }

        [JsonProperty("BeamStop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BeamStop { get; set; }

        [JsonProperty("Unpack", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Unpack { get; set; }

        [JsonProperty("Fire", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Fire { get; set; }
    }

    public partial class Property1092RackBones
    {
        [JsonProperty("Property1145", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1145 { get; set; }
    }

    public partial class Property1098
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1098FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1089RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property1098FireTargetLayerCapsTable
    {
        [JsonProperty("Seabed", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Seabed { get; set; }
    }

    public partial class Property1104
    {
        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("2", NullValueHandling = NullValueHandling.Ignore)]
        public string The2 { get; set; }

        [JsonProperty("3", NullValueHandling = NullValueHandling.Ignore)]
        public string The3 { get; set; }

        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property1104Buffs Buffs { get; set; }

        [JsonProperty("CanFireFromTransport", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CanFireFromTransport { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnabledByEnhancement", NullValueHandling = NullValueHandling.Ignore)]
        public string EnabledByEnhancement { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1104RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<Target> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property1104Buffs
    {
        [JsonProperty("Property1109", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property1109 { get; set; }
    }

    public partial class Property1104RackBones
    {
        [JsonProperty("Property1143", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1143 { get; set; }
    }

    public partial class Property1107
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireOnDeath", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FireOnDeath { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NukeBlackHoleMinDuration", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeBlackHoleMinDuration { get; set; }

        [JsonProperty("NukeBlackHoleFxScale", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeBlackHoleFxScale { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1107RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property1107RackBones
    {
        [JsonProperty("Property1134", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1134 { get; set; }
    }

    public partial class Property1117
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombardDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardDisable { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1117RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property1117RackBones
    {
        [JsonProperty("Property1150", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1150 { get; set; }
    }

    public partial class Property1124
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireOnDeath", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FireOnDeath { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1124RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property1124RackBones
    {
        [JsonProperty("Property1149", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1149 { get; set; }
    }

    public partial class Property1148
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property1148FireTargetLayerCapsTable
    {
        [JsonProperty("Land", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Land { get; set; }

        [JsonProperty("Water", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Water { get; set; }
    }

    public partial class Property1148RackBones
    {
        [JsonProperty("Property1180", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1180 { get; set; }
    }

    public partial class Property1163
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1163RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property1163RackBones
    {
        [JsonProperty("Property1201", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1201 { get; set; }
    }

    public partial class Property1169
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("EnabledByEnhancement", NullValueHandling = NullValueHandling.Ignore)]
        public string EnabledByEnhancement { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1169RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property1169RackBones
    {
        [JsonProperty("Property1207", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1207 { get; set; }
    }

    public partial class Property1180
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireOnDeath", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FireOnDeath { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1180RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property1180RackBones
    {
        [JsonProperty("Property1205", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1205 { get; set; }
    }

    public partial class Property1187
    {
        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BelowWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BelowWaterFireOnly { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("EnabledByEnhancement", NullValueHandling = NullValueHandling.Ignore)]
        public string EnabledByEnhancement { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1098FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1187RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property1187RackBones
    {
        [JsonProperty("Property1209", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1209 { get; set; }
    }

    public partial class Property1193
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombardDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardDisable { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1193RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property1193RackBones
    {
        [JsonProperty("Property1230", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1230 { get; set; }

        [JsonProperty("Property1237", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1237 { get; set; }

        [JsonProperty("Property1244", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1244 { get; set; }
    }

    public partial class Property1237
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("EnabledByEnhancement", NullValueHandling = NullValueHandling.Ignore)]
        public string EnabledByEnhancement { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("NukeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NukeWeapon { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1237RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property1237RackBones
    {
        [JsonProperty("Property1284", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1284 { get; set; }
    }

    public partial class Property1307
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireOnDeath", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FireOnDeath { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1307RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property1307RackBones
    {
        [JsonProperty("Property1332", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1332 { get; set; }
    }

    public partial class Property138
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property138RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property138RackBones
    {
        [JsonProperty("Property167", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property167 { get; set; }

        [JsonProperty("Property173", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property173 { get; set; }
    }

    public partial class Property1397
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageDuringCapacitor { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageRadiusDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadiusDuringCapacitor { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTTimeDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DoTTimeDuringCapacitor { get; set; }

        [JsonProperty("DoTPulsesDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulsesDuringCapacitor { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("InitialDamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialDamageDuringCapacitor { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileIdDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileIdDuringCapacitor { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1397RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("ReceiveROFBuff", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReceiveRofBuff { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property1397RackBones
    {
        [JsonProperty("Property1436", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1436 { get; set; }

        [JsonProperty("Property1442", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1442 { get; set; }
    }

    public partial class Property143
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property143RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property143RackBones
    {
        [JsonProperty("Property171", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property171 { get; set; }
    }

    public partial class Property1483
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property1483Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageDuringCapacitor { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringRandomness { get; set; }

        [JsonProperty("GattlingBarrelBone", NullValueHandling = NullValueHandling.Ignore)]
        public string GattlingBarrelBone { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileIdDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileIdDuringCapacitor { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1483RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("ReceiveROF2Buff", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReceiveRof2Buff { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property1483Audio
    {
        [JsonProperty("Fire", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Fire { get; set; }

        [JsonProperty("SpinningLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate SpinningLoop { get; set; }

        [JsonProperty("SpinningStop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate SpinningStop { get; set; }
    }

    public partial class Property1483RackBones
    {
        [JsonProperty("Property1529", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1529 { get; set; }
    }

    public partial class Property153
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property153RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property153RackBones
    {
        [JsonProperty("Property184", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property184 { get; set; }
    }

    public partial class Property157
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property157RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property157RackBones
    {
        [JsonProperty("Property186", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property186 { get; set; }
    }

    public partial class Property1574
    {
        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageDuringCapacitor { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageRadius { get; set; }

        [JsonProperty("DamageRadiusDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadiusDuringCapacitor { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTPulsesDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulsesDuringCapacitor { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DoTTime { get; set; }

        [JsonProperty("DoTTimeDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTimeDuringCapacitor { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("InitialDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialDamage { get; set; }

        [JsonProperty("InitialDamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialDamageDuringCapacitor { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileIdDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileIdDuringCapacitor { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1574RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property1574RackBones
    {
        [JsonProperty("Property1617", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1617 { get; set; }
    }

    public partial class Property159
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property1483Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("GattlingBarrelBone", NullValueHandling = NullValueHandling.Ignore)]
        public string GattlingBarrelBone { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property159RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property159RackBones
    {
        [JsonProperty("Property199", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property199 { get; set; }
    }

    public partial class Property160
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property160RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property160RackBones
    {
        [JsonProperty("Property188", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property188 { get; set; }
    }

    public partial class Property161
    {
        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property161Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamLifetime { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        public string Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MaximumBeamLength", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaximumBeamLength { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property161RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property161Audio
    {
        [JsonProperty("FireSpecial", NullValueHandling = NullValueHandling.Ignore)]
        public Activate FireSpecial { get; set; }
    }

    public partial class Property161RackBones
    {
        [JsonProperty("Property190", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property190 { get; set; }

        [JsonProperty("Property196", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property196 { get; set; }

        [JsonProperty("Property202", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property202 { get; set; }

        [JsonProperty("Property208", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property208 { get; set; }

        [JsonProperty("Property214", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property214 { get; set; }
    }

    public partial class Property162
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property162RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }
    }

    public partial class Property162RackBones
    {
        [JsonProperty("Property190", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property190 { get; set; }
    }

    public partial class Property166
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamLifetime { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MaximumBeamLength", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaximumBeamLength { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property166RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property166RackBones
    {
        [JsonProperty("Property194", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property194 { get; set; }
    }

    public partial class Property1660
    {
        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageDuringCapacitor { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageRadius { get; set; }

        [JsonProperty("DamageRadiusDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadiusDuringCapacitor { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTPulsesDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulsesDuringCapacitor { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DoTTime { get; set; }

        [JsonProperty("DoTTimeDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTimeDuringCapacitor { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("InitialDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialDamage { get; set; }

        [JsonProperty("InitialDamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialDamageDuringCapacitor { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileIdDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileIdDuringCapacitor { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1660RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property1660RackBones
    {
        [JsonProperty("Property1703", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1703 { get; set; }
    }

    public partial class Property169
    {
        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property169RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property169RackBones
    {
        [JsonProperty("Property197", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property197 { get; set; }
    }

    public partial class Property172
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property172FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property172RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property172FireTargetLayerCapsTable
    {
        [JsonProperty("Land", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Land { get; set; }

        [JsonProperty("Seabed", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Seabed { get; set; }
    }

    public partial class Property172RackBones
    {
        [JsonProperty("Property203", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property203 { get; set; }
    }

    public partial class Property174
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property174RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property174RackBones
    {
        [JsonProperty("Property202", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property202 { get; set; }
    }

    public partial class Property1746
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1098FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1746RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("ReceiveROF3Buff", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReceiveRof3Buff { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property1746RackBones
    {
        [JsonProperty("Property1776", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1776 { get; set; }
    }

    public partial class Property175
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property175RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property175RackBones
    {
        [JsonProperty("Property208", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property208 { get; set; }
    }

    public partial class Property176
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property176RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property176RackBones
    {
        [JsonProperty("Property207", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property207 { get; set; }
    }

    public partial class Property177
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property177RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property177RackBones
    {
        [JsonProperty("Property208", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property208 { get; set; }

        [JsonProperty("Property221", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property221 { get; set; }

        [JsonProperty("Property234", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property234 { get; set; }

        [JsonProperty("Property247", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property247 { get; set; }
    }

    public partial class Property178
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CameraShakeDuration", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? CameraShakeDuration { get; set; }

        [JsonProperty("CameraShakeMax", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeMax { get; set; }

        [JsonProperty("CameraShakeMin", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeMin { get; set; }

        [JsonProperty("CameraShakeRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeRadius { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property178RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }
    }

    public partial class Property178Audio
    {
        [JsonProperty("BarrelLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BarrelLoop { get; set; }

        [JsonProperty("BarrelStart", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BarrelStart { get; set; }

        [JsonProperty("Fire", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Fire { get; set; }

        [JsonProperty("MuzzleChargeStart", NullValueHandling = NullValueHandling.Ignore)]
        public Activate MuzzleChargeStart { get; set; }

        [JsonProperty("Open", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Open { get; set; }

        [JsonProperty("BarrelStop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BarrelStop { get; set; }
    }

    public partial class Property178RackBones
    {
        [JsonProperty("Property228", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property228 { get; set; }

        [JsonProperty("Property213", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property213 { get; set; }
    }

    public partial class Property179
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property176RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property180
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property180RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTime { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("SupportedFiringRandomnessDivider", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SupportedFiringRandomnessDivider { get; set; }
    }

    public partial class Property180RackBones
    {
        [JsonProperty("Property213", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property213 { get; set; }

        [JsonProperty("Property210", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property210 { get; set; }

        [JsonProperty("Property219", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property219 { get; set; }
    }

    public partial class WeaponProperty181
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property172FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property181RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property181RackBones
    {
        [JsonProperty("Property212", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property212 { get; set; }
    }

    public partial class Property182
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property182Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTime { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property182RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        public string RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("Flare", NullValueHandling = NullValueHandling.Ignore)]
        public Flare Flare { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("InitialDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialDamage { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleChargeDelay { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property182Audio
    {
        [JsonProperty("Fire", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Fire { get; set; }

        [JsonProperty("MuzzleChargeStart", NullValueHandling = NullValueHandling.Ignore)]
        public Activate MuzzleChargeStart { get; set; }
    }

    public partial class Flare
    {
        [JsonProperty("Category", NullValueHandling = NullValueHandling.Ignore)]
        public string Category { get; set; }

        [JsonProperty("Radius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Radius { get; set; }

        [JsonProperty("Stack", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Stack { get; set; }

        [JsonProperty("OffsetMult", NullValueHandling = NullValueHandling.Ignore)]
        public string OffsetMult { get; set; }
    }

    public partial class Property182RackBones
    {
        [JsonProperty("Property219", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property219 { get; set; }

        [JsonProperty("Property217", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property217 { get; set; }

        [JsonProperty("Property214", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property214 { get; set; }

        [JsonProperty("Property225", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property225 { get; set; }
    }

    public partial class Property1822
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property1822Audio Audio { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyBombFxScale", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? EnergyBombFxScale { get; set; }

        [JsonProperty("FireOnDeath", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FireOnDeath { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NoWreckage", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NoWreckage { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property1822RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property1822Audio
    {
        [JsonProperty("NukeExplosion", NullValueHandling = NullValueHandling.Ignore)]
        public Activate NukeExplosion { get; set; }
    }

    public partial class Property1822RackBones
    {
        [JsonProperty("Property1847", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1847 { get; set; }
    }

    public partial class Property183
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property182Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property183RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }
    }

    public partial class Property183RackBones
    {
        [JsonProperty("Property221", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property221 { get; set; }

        [JsonProperty("Property215", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property215 { get; set; }
    }

    public partial class Property185
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property185RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }
    }

    public partial class Property185RackBones
    {
        [JsonProperty("Property216", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property216 { get; set; }

        [JsonProperty("Property225", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property225 { get; set; }

        [JsonProperty("Property211", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property211 { get; set; }

        [JsonProperty("Property217", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property217 { get; set; }
    }

    public partial class Property186
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property186RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTime { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }
    }

    public partial class Property186RackBones
    {
        [JsonProperty("Property217", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property217 { get; set; }

        [JsonProperty("Property214", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property214 { get; set; }
    }

    public partial class Property188
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CameraShakeDuration", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? CameraShakeDuration { get; set; }

        [JsonProperty("CameraShakeMax", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeMax { get; set; }

        [JsonProperty("CameraShakeMin", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeMin { get; set; }

        [JsonProperty("CameraShakeRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeRadius { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property188RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property188RackBones
    {
        [JsonProperty("Property239", NullValueHandling = NullValueHandling.Ignore)]
        public Property302Class Property239 { get; set; }
    }

    public partial class Property302Class
    {
        [JsonProperty("MuzzleBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> MuzzleBones { get; set; }

        [JsonProperty("RackBone", NullValueHandling = NullValueHandling.Ignore)]
        public string RackBone { get; set; }

        [JsonProperty("TelescopeBone", NullValueHandling = NullValueHandling.Ignore)]
        public string TelescopeBone { get; set; }

        [JsonProperty("TelescopeRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TelescopeRecoilDistance { get; set; }
    }

    public partial class Property189
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property189RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }
    }

    public partial class Property189RackBones
    {
        [JsonProperty("Property215", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property215 { get; set; }

        [JsonProperty("Property217", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property217 { get; set; }

        [JsonProperty("Property223", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property223 { get; set; }
    }

    public partial class Property190
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property190Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property190RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }
    }

    public partial class Property190Audio
    {
        [JsonProperty("Fire", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Fire { get; set; }

        [JsonProperty("Open", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Open { get; set; }
    }

    public partial class Property190RackBones
    {
        [JsonProperty("Property226", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property226 { get; set; }

        [JsonProperty("Property216", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property216 { get; set; }
    }

    public partial class Property191
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property191RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        public string RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }
    }

    public partial class Property191RackBones
    {
        [JsonProperty("Property226", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property226 { get; set; }

        [JsonProperty("Property228", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property228 { get; set; }

        [JsonProperty("Property234", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property234 { get; set; }

        [JsonProperty("Property240", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property240 { get; set; }

        [JsonProperty("Property246", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property246 { get; set; }
    }

    public partial class Property192
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringTolerance { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property192RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property192RackBones
    {
        [JsonProperty("Property238", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property238 { get; set; }
    }

    public partial class Property194
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property194RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("CameraShakeDuration", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? CameraShakeDuration { get; set; }

        [JsonProperty("CameraShakeMax", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeMax { get; set; }

        [JsonProperty("CameraShakeMin", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeMin { get; set; }

        [JsonProperty("CameraShakeRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeRadius { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTime { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }
    }

    public partial class Property194RackBones
    {
        [JsonProperty("Property225", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property225 { get; set; }

        [JsonProperty("Property252", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property252 { get; set; }
    }

    public partial class Property195
    {
        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property195RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleChargeDelay { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property195RackBones
    {
        [JsonProperty("Property213", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property213 { get; set; }

        [JsonProperty("Property231", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property231 { get; set; }
    }

    public partial class Property196
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BarrelStart", NullValueHandling = NullValueHandling.Ignore)]
        public Audio BarrelStart { get; set; }

        [JsonProperty("BarrelLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Audio BarrelLoop { get; set; }

        [JsonProperty("MuzzleChargeStart", NullValueHandling = NullValueHandling.Ignore)]
        public Audio MuzzleChargeStart { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property196RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }
    }

    public partial class Property196RackBones
    {
        [JsonProperty("Property254", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property254 { get; set; }

        [JsonProperty("Property228", NullValueHandling = NullValueHandling.Ignore)]
        public RackBonesProperty228 Property228 { get; set; }
    }

    public partial class RackBonesProperty228
    {
        [JsonProperty("MuzzleBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> MuzzleBones { get; set; }
    }

    public partial class Property197
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property197Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTime { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property197RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("CameraShakeDuration", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? CameraShakeDuration { get; set; }

        [JsonProperty("CameraShakeMax", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeMax { get; set; }

        [JsonProperty("CameraShakeMin", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeMin { get; set; }

        [JsonProperty("CameraShakeRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeRadius { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("MuzzleVelocityRandom", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleVelocityRandom { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? BeamLifetime { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }
    }

    public partial class Property197Audio
    {
        [JsonProperty("Fire", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Fire { get; set; }

        [JsonProperty("BarrelLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BarrelLoop { get; set; }

        [JsonProperty("BarrelStart", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BarrelStart { get; set; }

        [JsonProperty("BeamLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BeamLoop { get; set; }

        [JsonProperty("BeamStart", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BeamStart { get; set; }

        [JsonProperty("BeamStop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BeamStop { get; set; }
    }

    public partial class Property197RackBones
    {
        [JsonProperty("Property232", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property232 { get; set; }

        [JsonProperty("Property250", NullValueHandling = NullValueHandling.Ignore)]
        public Property302Class Property250 { get; set; }

        [JsonProperty("Property225", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property225 { get; set; }

        [JsonProperty("Property206", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property206 { get; set; }

        [JsonProperty("Property238", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property238 { get; set; }
    }

    public partial class Property198
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property198RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("ToggleWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string ToggleWeapon { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageRadius { get; set; }

        [JsonProperty("MaximumBeamLength", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaximumBeamLength { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("FireOnSelfDestruct", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FireOnSelfDestruct { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property198RackBones
    {
        [JsonProperty("Property228", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property228 { get; set; }

        [JsonProperty("Property231", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property231 { get; set; }
    }

    public partial class Property199
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property199Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property192RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property199Audio
    {
        [JsonProperty("ChargeStart", NullValueHandling = NullValueHandling.Ignore)]
        public Activate ChargeStart { get; set; }

        [JsonProperty("Open", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Open { get; set; }
    }

    public partial class Property200
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property200RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? BeamLifetime { get; set; }

        [JsonProperty("ContinuousBeam", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ContinuousBeam { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RequireTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RequireTime { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }
    }

    public partial class Property200RackBones
    {
        [JsonProperty("Property229", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property229 { get; set; }

        [JsonProperty("Property233", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property233 { get; set; }
    }

    public partial class Property201
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property201RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }
    }

    public partial class Property201RackBones
    {
        [JsonProperty("Property230", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property230 { get; set; }

        [JsonProperty("Property235", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property235 { get; set; }

        [JsonProperty("Property242", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property242 { get; set; }

        [JsonProperty("Property229", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property229 { get; set; }

        [JsonProperty("Property243", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property243 { get; set; }
    }

    public partial class Property202
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property202RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SalvoShotDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? SalvoShotDelay { get; set; }

        [JsonProperty("SalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SalvoSize { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("CameraLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraLifetime { get; set; }

        [JsonProperty("CameraVisionRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraVisionRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }
    }

    public partial class Property202RackBones
    {
        [JsonProperty("Property236", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property236 { get; set; }

        [JsonProperty("Property242", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property242 { get; set; }

        [JsonProperty("Property211", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property211 { get; set; }

        [JsonProperty("Property233", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property233 { get; set; }
    }

    public partial class Property203
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimControlPrecedence", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AimControlPrecedence { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property203RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? ProjectileLifetime { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }
    }

    public partial class Property203RackBones
    {
        [JsonProperty("Property232", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property232 { get; set; }

        [JsonProperty("Property212", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property212 { get; set; }

        [JsonProperty("Property233", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property233 { get; set; }
    }

    public partial class Property204
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DoTTime { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property204RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property204Buffs Buffs { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("CameraShakeDuration", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? CameraShakeDuration { get; set; }

        [JsonProperty("CameraShakeMax", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeMax { get; set; }

        [JsonProperty("CameraShakeMin", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeMin { get; set; }

        [JsonProperty("CameraShakeRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraShakeRadius { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleChargeDelay { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("ShieldDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ShieldDamage { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("NukeBlackHoleMinDuration", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeBlackHoleMinDuration { get; set; }

        [JsonProperty("NukeBlackHoleFxLogo", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NukeBlackHoleFxLogo { get; set; }

        [JsonProperty("NukeBlackHoleFxScale", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeBlackHoleFxScale { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("NukeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NukeWeapon { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property204Buffs
    {
        [JsonProperty("Property216", NullValueHandling = NullValueHandling.Ignore)]
        public Property247Class Property216 { get; set; }

        [JsonProperty("Property227", NullValueHandling = NullValueHandling.Ignore)]
        public Property247Class Property227 { get; set; }
    }

    public partial class Property247Class
    {
        [JsonProperty("Add", NullValueHandling = NullValueHandling.Ignore)]
        public Property216Add Add { get; set; }

        [JsonProperty("AppliedToTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AppliedToTarget { get; set; }

        [JsonProperty("BuffType", NullValueHandling = NullValueHandling.Ignore)]
        public BuffType? BuffType { get; set; }

        [JsonProperty("Duration", NullValueHandling = NullValueHandling.Ignore)]
        public string Duration { get; set; }

        [JsonProperty("Radius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Radius { get; set; }

        [JsonProperty("TargetAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetAllow { get; set; }

        [JsonProperty("TargetDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetDisallow { get; set; }
    }

    public partial class Property216Add
    {
        [JsonProperty("OnImpact", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OnImpact { get; set; }
    }

    public partial class Property204RackBones
    {
        [JsonProperty("Property232", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property232 { get; set; }

        [JsonProperty("Property260", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property260 { get; set; }

        [JsonProperty("Property230", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property230 { get; set; }

        [JsonProperty("Property236", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property236 { get; set; }

        [JsonProperty("Property234", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property234 { get; set; }

        [JsonProperty("Property253", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property253 { get; set; }
    }

    public partial class Property205
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property205RackBones RackBones { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("TurretBoneDualMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualMuzzle { get; set; }

        [JsonProperty("TurretBoneDualPitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualPitch { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property205RackBones
    {
        [JsonProperty("Property214", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property214 { get; set; }

        [JsonProperty("Property234", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property234 { get; set; }

        [JsonProperty("Property240", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property240 { get; set; }
    }

    public partial class Property206
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property206RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("NukeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NukeWeapon { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }
    }

    public partial class Property206RackBones
    {
        [JsonProperty("Property237", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property237 { get; set; }

        [JsonProperty("Property253", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property253 { get; set; }

        [JsonProperty("Property238", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property238 { get; set; }
    }

    public partial class Property207
    {
        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AnimationReload", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationReload { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property207RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringRandomnessWhileMoving", NullValueHandling = NullValueHandling.Ignore)]
        public MassMult? FiringRandomnessWhileMoving { get; set; }

        [JsonProperty("FiringToleranceWhileMoving", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringToleranceWhileMoving { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }
    }

    public partial class Property207RackBones
    {
        [JsonProperty("Property241", NullValueHandling = NullValueHandling.Ignore)]
        public Property249Class Property241 { get; set; }

        [JsonProperty("Property242", NullValueHandling = NullValueHandling.Ignore)]
        public Property302Class Property242 { get; set; }
    }

    public partial class Property249Class
    {
        [JsonProperty("HideMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public bool? HideMuzzle { get; set; }

        [JsonProperty("MuzzleBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> MuzzleBones { get; set; }

        [JsonProperty("RackBone", NullValueHandling = NullValueHandling.Ignore)]
        public string RackBone { get; set; }
    }

    public partial class Property209
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AnimationReload", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationReload { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property209RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property209RackBones
    {
        [JsonProperty("Property242", NullValueHandling = NullValueHandling.Ignore)]
        public Property249Class Property242 { get; set; }
    }

    public partial class WeaponProperty210
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property210RackBones RackBones { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleChargeDelay { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }
    }

    public partial class Property210RackBones
    {
        [JsonProperty("Property219", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property219 { get; set; }

        [JsonProperty("Property239", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property239 { get; set; }

        [JsonProperty("Property242", NullValueHandling = NullValueHandling.Ignore)]
        public Property249Class Property242 { get; set; }

        [JsonProperty("Property241", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property241 { get; set; }
    }

    public partial class Property211
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property211RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpackLocksMotion", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpackLocksMotion { get; set; }
    }

    public partial class Property211RackBones
    {
        [JsonProperty("Property244", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property244 { get; set; }
    }

    public partial class Property212
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property212Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NoPause", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NoPause { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property212RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("SalvoShotDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SalvoShotDelay { get; set; }

        [JsonProperty("SalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SalvoSize { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DoTTime { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }
    }

    public partial class Property212Audio
    {
        [JsonProperty("Fire", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Fire { get; set; }

        [JsonProperty("FireUnderWater", NullValueHandling = NullValueHandling.Ignore)]
        public Activate FireUnderWater { get; set; }
    }

    public partial class Property212RackBones
    {
        [JsonProperty("Property245", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property245 { get; set; }

        [JsonProperty("Property243", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property243 { get; set; }

        [JsonProperty("Property240", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property240 { get; set; }
    }

    public partial class Property213
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property213RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property213Buffs Buffs { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property213Buffs
    {
        [JsonProperty("Property222", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property222 { get; set; }

        [JsonProperty("Property230", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property230 { get; set; }

        [JsonProperty("Property238", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property238 { get; set; }
    }

    public partial class Property213RackBones
    {
        [JsonProperty("Property247", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property247 { get; set; }
    }

    public partial class Property214
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property172FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property214RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property214RackBones
    {
        [JsonProperty("Property246", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property246 { get; set; }
    }

    public partial class Property215
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property215RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpackLocksMotion", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpackLocksMotion { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property215RackBones
    {
        [JsonProperty("Property245", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property245 { get; set; }

        [JsonProperty("Property249", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property249 { get; set; }
    }

    public partial class Property216
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property216RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property216Buffs Buffs { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property216Buffs
    {
        [JsonProperty("Property225", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property225 { get; set; }

        [JsonProperty("Property233", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property233 { get; set; }

        [JsonProperty("Property241", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property241 { get; set; }
    }

    public partial class Property216RackBones
    {
        [JsonProperty("Property249", NullValueHandling = NullValueHandling.Ignore)]
        public Property249Class Property249 { get; set; }
    }

    public partial class Property217
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property217RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("TurretBoneDualMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualMuzzle { get; set; }

        [JsonProperty("TurretBoneDualPitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualPitch { get; set; }

        [JsonProperty("TurretBoneDualYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualYaw { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulatorsAlternate", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulatorsAlternate { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property217RackBones
    {
        [JsonProperty("Property249", NullValueHandling = NullValueHandling.Ignore)]
        public Property249Class Property249 { get; set; }

        [JsonProperty("Property247", NullValueHandling = NullValueHandling.Ignore)]
        public RackBonesProperty247 Property247 { get; set; }

        [JsonProperty("Property255", NullValueHandling = NullValueHandling.Ignore)]
        public RackBonesProperty247 Property255 { get; set; }
    }

    public partial class RackBonesProperty247
    {
        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("MuzzleBones", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> MuzzleBones { get; set; }

        [JsonProperty("RackBone", NullValueHandling = NullValueHandling.Ignore)]
        public string RackBone { get; set; }

        [JsonProperty("TurretBoneDualManip", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualManip { get; set; }
    }

    public partial class Property219
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property219RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageRadius { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleChargeDelay { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("BombardParticipant", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardParticipant { get; set; }

        [JsonProperty("BombardSwingTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardSwingTurret { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property219Buffs Buffs { get; set; }

        [JsonProperty("DamageToShields", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageToShields { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("TurretBoneDualMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualMuzzle { get; set; }

        [JsonProperty("TurretBoneDualPitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualPitch { get; set; }
    }

    public partial class Property219Buffs
    {
        [JsonProperty("Property232", NullValueHandling = NullValueHandling.Ignore)]
        public Property437Class Property232 { get; set; }

        [JsonProperty("Property246", NullValueHandling = NullValueHandling.Ignore)]
        public Property437Class Property246 { get; set; }

        [JsonProperty("Property260", NullValueHandling = NullValueHandling.Ignore)]
        public Property437Class Property260 { get; set; }
    }

    public partial class Property437Class
    {
        [JsonProperty("Add", NullValueHandling = NullValueHandling.Ignore)]
        public Property232Add Add { get; set; }

        [JsonProperty("AppliedToTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AppliedToTarget { get; set; }

        [JsonProperty("BuffType", NullValueHandling = NullValueHandling.Ignore)]
        public BuffType? BuffType { get; set; }

        [JsonProperty("Duration", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? Duration { get; set; }

        [JsonProperty("Radius", NullValueHandling = NullValueHandling.Ignore)]
        public string Radius { get; set; }

        [JsonProperty("TargetAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetAllow { get; set; }

        [JsonProperty("TargetDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetDisallow { get; set; }
    }

    public partial class Property232Add
    {
        [JsonProperty("ImpactTypeDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ImpactTypeDisallow { get; set; }

        [JsonProperty("OnImpact", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OnImpact { get; set; }
    }

    public partial class Property219RackBones
    {
        [JsonProperty("Property250", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property250 { get; set; }

        [JsonProperty("Property257", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property257 { get; set; }

        [JsonProperty("Property263", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property263 { get; set; }

        [JsonProperty("Property228", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property228 { get; set; }

        [JsonProperty("Property295", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property295 { get; set; }

        [JsonProperty("Property301", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property301 { get; set; }
    }

    public partial class Property220
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property220Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property220RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("ContinuousBeam", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ContinuousBeam { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpackChargeUpAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpackChargeUpAnimation { get; set; }

        [JsonProperty("WeaponUnpackLocksMotion", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpackLocksMotion { get; set; }
    }

    public partial class Property220Audio
    {
        [JsonProperty("Fire", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Fire { get; set; }

        [JsonProperty("BeamLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BeamLoop { get; set; }

        [JsonProperty("BeamStart", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BeamStart { get; set; }

        [JsonProperty("BeamStop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BeamStop { get; set; }

        [JsonProperty("ChargingBeam", NullValueHandling = NullValueHandling.Ignore)]
        public Activate ChargingBeam { get; set; }

        [JsonProperty("Unpack", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Unpack { get; set; }
    }

    public partial class Property220RackBones
    {
        [JsonProperty("Property245", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property245 { get; set; }

        [JsonProperty("Property270", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property270 { get; set; }
    }

    public partial class Property221
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property221RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property221RackBones
    {
        [JsonProperty("Property252", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property252 { get; set; }
    }

    public partial class Property222
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("FiringRandomnessWhileMoving", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomnessWhileMoving { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property222RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        public string RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpackLocksMotion", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpackLocksMotion { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property222RackBones
    {
        [JsonProperty("Property254", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property254 { get; set; }

        [JsonProperty("Property231", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property231 { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("Property252", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property252 { get; set; }

        [JsonProperty("Property259", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property259 { get; set; }

        [JsonProperty("Property266", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property266 { get; set; }

        [JsonProperty("Property273", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property273 { get; set; }

        [JsonProperty("Property280", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property280 { get; set; }

        [JsonProperty("Property287", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property287 { get; set; }

        [JsonProperty("Property253", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property253 { get; set; }

        [JsonProperty("Property265", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property265 { get; set; }
    }

    public partial class Property223
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property223RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }
    }

    public partial class Property223RackBones
    {
        [JsonProperty("Property256", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property256 { get; set; }

        [JsonProperty("Property262", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property262 { get; set; }

        [JsonProperty("Property268", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property268 { get; set; }

        [JsonProperty("Property274", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property274 { get; set; }

        [JsonProperty("Property253", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property253 { get; set; }

        [JsonProperty("Property232", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property232 { get; set; }
    }

    public partial class Property224
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("DepthCharge", NullValueHandling = NullValueHandling.Ignore)]
        public DepthCharge DepthCharge { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property224RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class DepthCharge
    {
        [JsonProperty("Radius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Radius { get; set; }
    }

    public partial class Property224FireTargetLayerCapsTable
    {
        [JsonProperty("Water", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Water { get; set; }
    }

    public partial class Property224RackBones
    {
        [JsonProperty("Property253", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property253 { get; set; }
    }

    public partial class Property226
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property182Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("ChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ChargeDelay { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property226RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property226RackBones
    {
        [JsonProperty("Property263", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property263 { get; set; }
    }

    public partial class WeaponProperty227
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property227Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageToShields", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageToShields { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property227RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("FiringRandomnessWhileMoving", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomnessWhileMoving { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }
    }

    public partial class Property227Audio
    {
        [JsonProperty("MuzzleChargeStart", NullValueHandling = NullValueHandling.Ignore)]
        public Activate MuzzleChargeStart { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("2", NullValueHandling = NullValueHandling.Ignore)]
        public string The2 { get; set; }

        [JsonProperty("3", NullValueHandling = NullValueHandling.Ignore)]
        public string The3 { get; set; }

        [JsonProperty("4", NullValueHandling = NullValueHandling.Ignore)]
        public string The4 { get; set; }

        [JsonProperty("BarrelLoop", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BarrelLoop { get; set; }

        [JsonProperty("BarrelStart", NullValueHandling = NullValueHandling.Ignore)]
        public Activate BarrelStart { get; set; }

        [JsonProperty("Fire", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Fire { get; set; }
    }

    public partial class Property227RackBones
    {
        [JsonProperty("Property258", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property258 { get; set; }

        [JsonProperty("Property270", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property270 { get; set; }
    }

    public partial class WeaponProperty228
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property228RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("NoPause", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NoPause { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("BombardParticipant", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardParticipant { get; set; }

        [JsonProperty("BombardSwingTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardSwingTurret { get; set; }

        [JsonProperty("BombardTurretRotationSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BombardTurretRotationSpeed { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("StopOnPrimaryWeaponBusy", NullValueHandling = NullValueHandling.Ignore)]
        public bool? StopOnPrimaryWeaponBusy { get; set; }

        [JsonProperty("ToggleWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string ToggleWeapon { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpackLocksMotion", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpackLocksMotion { get; set; }
    }

    public partial class Property228RackBones
    {
        [JsonProperty("Property268", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property268 { get; set; }

        [JsonProperty("Property260", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property260 { get; set; }

        [JsonProperty("Property265", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property265 { get; set; }

        [JsonProperty("Property264", NullValueHandling = NullValueHandling.Ignore)]
        public Property302Class Property264 { get; set; }
    }

    public partial class Property229
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property182Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property229RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleChargeDelay { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property229RackBones
    {
        [JsonProperty("Property262", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property262 { get; set; }

        [JsonProperty("Property268", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property268 { get; set; }

        [JsonProperty("Property265", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property265 { get; set; }
    }

    public partial class Property231
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property231RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }
    }

    public partial class Property231RackBones
    {
        [JsonProperty("Property262", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property262 { get; set; }

        [JsonProperty("Property256", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property256 { get; set; }
    }

    public partial class WeaponProperty232
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property232RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public RateOfFire? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringRandomness { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleChargeDelay { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }
    }

    public partial class Property232RackBones
    {
        [JsonProperty("Property269", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property269 { get; set; }

        [JsonProperty("Property270", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property270 { get; set; }
    }

    public partial class Property233
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property233RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("FiringRandomnessWhileMoving", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomnessWhileMoving { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }
    }

    public partial class Property233RackBones
    {
        [JsonProperty("Property262", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property262 { get; set; }

        [JsonProperty("Property264", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property264 { get; set; }

        [JsonProperty("Property270", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property270 { get; set; }
    }

    public partial class Property235
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallicsticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallicsticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property235RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("NukeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NukeWeapon { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? BeamLifetime { get; set; }

        [JsonProperty("ContinuousBeam", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ContinuousBeam { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("RequireTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RequireTime { get; set; }

        [JsonProperty("WeaponUnpackLocksMotion", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpackLocksMotion { get; set; }

        [JsonProperty("BombardParticipant", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardParticipant { get; set; }

        [JsonProperty("BombardSwingTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardSwingTurret { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringRandomnessWhileMoving", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomnessWhileMoving { get; set; }

        [JsonProperty("MaxRadiusUnderWater", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadiusUnderWater { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }
    }

    public partial class Property235RackBones
    {
        [JsonProperty("Property267", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property267 { get; set; }

        [JsonProperty("Property281", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property281 { get; set; }

        [JsonProperty("Property276", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property276 { get; set; }

        [JsonProperty("Property283", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property283 { get; set; }
    }

    public partial class Property236
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property227Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property236RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AnimationOpen", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationOpen { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? MuzzleChargeDelay { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property236Buffs Buffs { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("NukeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NukeWeapon { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? ProjectileLifetime { get; set; }

        [JsonProperty("FireOnDeath", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FireOnDeath { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("YawOnlyOnTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? YawOnlyOnTarget { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }
    }

    public partial class Property236Buffs
    {
        [JsonProperty("Property247", NullValueHandling = NullValueHandling.Ignore)]
        public Property247Class Property247 { get; set; }
    }

    public partial class Property236RackBones
    {
        [JsonProperty("Property267", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property267 { get; set; }

        [JsonProperty("Property283", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property283 { get; set; }

        [JsonProperty("Property294", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property294 { get; set; }

        [JsonProperty("Property274", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property274 { get; set; }

        [JsonProperty("Property259", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property259 { get; set; }

        [JsonProperty("Property269", NullValueHandling = NullValueHandling.Ignore)]
        public Property249Class Property269 { get; set; }

        [JsonProperty("Property262", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property262 { get; set; }
    }

    public partial class Property237
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property237RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property237RackBones
    {
        [JsonProperty("Property265", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property265 { get; set; }
    }

    public partial class Property238
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property238RackBones RackBones { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public MassMult? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property238RackBones
    {
        [JsonProperty("Property247", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property247 { get; set; }

        [JsonProperty("Property270", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property270 { get; set; }

        [JsonProperty("Property279", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property279 { get; set; }
    }

    public partial class Property239
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property239RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneDualMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualMuzzle { get; set; }

        [JsonProperty("TurretBoneDualPitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualPitch { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property239RackBones
    {
        [JsonProperty("Property269", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property269 { get; set; }

        [JsonProperty("Property275", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property275 { get; set; }
    }

    public partial class Property241
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property241RackBones RackBones { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<Target> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property241Buffs Buffs { get; set; }
    }

    public partial class Property241Buffs
    {
        [JsonProperty("Property250", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property250 { get; set; }

        [JsonProperty("Property258", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property258 { get; set; }

        [JsonProperty("Property266", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property266 { get; set; }
    }

    public partial class Property241RackBones
    {
        [JsonProperty("Property250", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property250 { get; set; }
    }

    public partial class Property242
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property242RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpackLocksMotion", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpackLocksMotion { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property242FireTargetLayerCapsTable
    {
        [JsonProperty("Air", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Air { get; set; }

        [JsonProperty("Land", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Land { get; set; }
    }

    public partial class Property242RackBones
    {
        [JsonProperty("Property271", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property271 { get; set; }

        [JsonProperty("Property275", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property275 { get; set; }
    }

    public partial class Property243
    {
        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string MaxRadius { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property243RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property243RackBones
    {
        [JsonProperty("Property271", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property271 { get; set; }
    }

    public partial class WeaponProperty244
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NoPause", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NoPause { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property244RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneDualMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualMuzzle { get; set; }

        [JsonProperty("TurretBoneDualPitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualPitch { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property244RackBones
    {
        [JsonProperty("Property276", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property276 { get; set; }

        [JsonProperty("Property282", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property282 { get; set; }

        [JsonProperty("Property272", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property272 { get; set; }
    }

    public partial class Property245
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringRandomness { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NoPause", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NoPause { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property245RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        public string RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneDualMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualMuzzle { get; set; }

        [JsonProperty("TurretBoneDualPitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualPitch { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property245RackBones
    {
        [JsonProperty("Property280", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property280 { get; set; }
    }

    public partial class Property247
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property247RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property247RackBones
    {
        [JsonProperty("Property283", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property283 { get; set; }
    }

    public partial class Property248
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property182Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property248RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("TurretBoneDualMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualMuzzle { get; set; }

        [JsonProperty("TurretBoneDualPitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualPitch { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property248RackBones
    {
        [JsonProperty("Property278", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property278 { get; set; }

        [JsonProperty("Property281", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property281 { get; set; }

        [JsonProperty("Property287", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property287 { get; set; }
    }

    public partial class Property249
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property190Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property249RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleChargeDelay { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpackLocksMotion", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpackLocksMotion { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property249RackBones
    {
        [JsonProperty("Property278", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property278 { get; set; }

        [JsonProperty("Property286", NullValueHandling = NullValueHandling.Ignore)]
        public Property249Class Property286 { get; set; }
    }

    public partial class Property250
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property250RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }
    }

    public partial class Property250RackBones
    {
        [JsonProperty("Property288", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property288 { get; set; }

        [JsonProperty("Property294", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property294 { get; set; }

        [JsonProperty("Property300", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property300 { get; set; }
    }

    public partial class Property251
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property182Audio Audio { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property251Buffs Buffs { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombardParticipant", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardParticipant { get; set; }

        [JsonProperty("BombardSwingTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardSwingTurret { get; set; }

        [JsonProperty("BombardTurretRotationSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BombardTurretRotationSpeed { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTime { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("InitialDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialDamage { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property251RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property251Buffs
    {
        [JsonProperty("Property260", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property260 { get; set; }

        [JsonProperty("Property268", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property268 { get; set; }

        [JsonProperty("Property276", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property276 { get; set; }
    }

    public partial class Property251RackBones
    {
        [JsonProperty("Property292", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property292 { get; set; }

        [JsonProperty("Property298", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property298 { get; set; }
    }

    public partial class Property252
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("DoNotCollideList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> DoNotCollideList { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property252RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property252RackBones
    {
        [JsonProperty("Property285", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property285 { get; set; }
    }

    public partial class Property254
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property254RackBones RackBones { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property254RackBones
    {
        [JsonProperty("Property263", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property263 { get; set; }

        [JsonProperty("Property292", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property292 { get; set; }

        [JsonProperty("Property298", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property298 { get; set; }
    }

    public partial class Property255
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property255RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property255RackBones
    {
        [JsonProperty("Property293", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property293 { get; set; }

        [JsonProperty("Property265", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property265 { get; set; }
    }

    public partial class Property256
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property256RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property256RackBones
    {
        [JsonProperty("Property284", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property284 { get; set; }

        [JsonProperty("Property285", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property285 { get; set; }
    }

    public partial class Property257
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property257RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property257Buffs Buffs { get; set; }
    }

    public partial class Property257Buffs
    {
        [JsonProperty("Property266", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property266 { get; set; }

        [JsonProperty("Property274", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property274 { get; set; }

        [JsonProperty("Property282", NullValueHandling = NullValueHandling.Ignore)]
        public Property262Class Property282 { get; set; }
    }

    public partial class Property257RackBones
    {
        [JsonProperty("Property284", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property284 { get; set; }
    }

    public partial class Property258
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombDropThreshold", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BombDropThreshold { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        public string DoTTime { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FixBombTrajectory", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FixBombTrajectory { get; set; }

        [JsonProperty("InitialDamage", NullValueHandling = NullValueHandling.Ignore)]
        public string InitialDamage { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedToComputeBombDrop", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedToComputeBombDrop { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property258RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }
    }

    public partial class Property258RackBones
    {
        [JsonProperty("Property293", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property293 { get; set; }
    }

    public partial class Property259
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property259RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringRandomness { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("NukeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NukeWeapon { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }
    }

    public partial class Property259RackBones
    {
        [JsonProperty("Property290", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property290 { get; set; }

        [JsonProperty("Property296", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property296 { get; set; }

        [JsonProperty("Property302", NullValueHandling = NullValueHandling.Ignore)]
        public Property302Class Property302 { get; set; }

        [JsonProperty("Property308", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property308 { get; set; }

        [JsonProperty("Property314", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property314 { get; set; }

        [JsonProperty("Property320", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property320 { get; set; }

        [JsonProperty("Property326", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property326 { get; set; }

        [JsonProperty("Property332", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property332 { get; set; }

        [JsonProperty("Property310", NullValueHandling = NullValueHandling.Ignore)]
        public Property302Class Property310 { get; set; }

        [JsonProperty("Property318", NullValueHandling = NullValueHandling.Ignore)]
        public Property302Class Property318 { get; set; }

        [JsonProperty("Property306", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property306 { get; set; }

        [JsonProperty("Property287", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property287 { get; set; }
    }

    public partial class Property262
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property262RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }
    }

    public partial class Property262RackBones
    {
        [JsonProperty("Property291", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property291 { get; set; }
    }

    public partial class Property263
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property263RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackRecoilReturnSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilReturnSpeed { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property263RackBones
    {
        [JsonProperty("Property304", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property304 { get; set; }

        [JsonProperty("Property292", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property292 { get; set; }

        [JsonProperty("Property298", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property298 { get; set; }
    }

    public partial class Property264
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property1092Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombDropThreshold", NullValueHandling = NullValueHandling.Ignore)]
        public string BombDropThreshold { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("Display", NullValueHandling = NullValueHandling.Ignore)]
        public string Display { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FixBombTrajectory", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FixBombTrajectory { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedToComputeBombDrop", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedToComputeBombDrop { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property264RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpackAnimatorPrecedence", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimatorPrecedence { get; set; }

        [JsonProperty("WeaponUnpackLocksMotion", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpackLocksMotion { get; set; }

        [JsonProperty("WeaponUnpackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("DoNotCollideList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> DoNotCollideList { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }
    }

    public partial class Property264RackBones
    {
        [JsonProperty("Property299", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property299 { get; set; }

        [JsonProperty("Property302", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property302 { get; set; }

        [JsonProperty("Property307", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property307 { get; set; }
    }

    public partial class Property280Class
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombDropThreshold", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BombDropThreshold { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property265Buffs Buffs { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FixBombTrajectory", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FixBombTrajectory { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedToComputeBombDrop", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedToComputeBombDrop { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property265RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property265Buffs
    {
        [JsonProperty("Property278", NullValueHandling = NullValueHandling.Ignore)]
        public Property247Class Property278 { get; set; }
    }

    public partial class Property265RackBones
    {
        [JsonProperty("Property312", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property312 { get; set; }
    }

    public partial class Property266
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property266RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property266RackBones
    {
        [JsonProperty("Property297", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property297 { get; set; }

        [JsonProperty("Property296", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property296 { get; set; }

        [JsonProperty("Property302", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property302 { get; set; }
    }

    public partial class Property267
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property267RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property267RackBones
    {
        [JsonProperty("Property299", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property299 { get; set; }

        [JsonProperty("Property297", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property297 { get; set; }
    }

    public partial class Property268
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property220Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property268RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("MaximumBeamLength", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaximumBeamLength { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property268RackBones
    {
        [JsonProperty("Property298", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property298 { get; set; }

        [JsonProperty("Property307", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property307 { get; set; }

        [JsonProperty("Property297", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property297 { get; set; }
    }

    public partial class Property269
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property269RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneDualMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualMuzzle { get; set; }

        [JsonProperty("TurretBoneDualPitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualPitch { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property269RackBones
    {
        [JsonProperty("Property301", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property301 { get; set; }

        [JsonProperty("Property298", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property298 { get; set; }

        [JsonProperty("Property304", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property304 { get; set; }
    }

    public partial class Property270
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property270RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("ContinuousBeam", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ContinuousBeam { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("PreferPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PreferPrimaryWeaponTarget { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimControlPrecedence", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AimControlPrecedence { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property270RackBones
    {
        [JsonProperty("Property299", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property299 { get; set; }

        [JsonProperty("Property293", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property293 { get; set; }
    }

    public partial class Property271
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property271RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }
    }

    public partial class Property271RackBones
    {
        [JsonProperty("Property301", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property301 { get; set; }

        [JsonProperty("Property304", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property304 { get; set; }
    }

    public partial class Property272
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property220Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property272RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("ContinuousBeam", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ContinuousBeam { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }
    }

    public partial class Property272RackBones
    {
        [JsonProperty("Property305", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property305 { get; set; }

        [JsonProperty("Property322", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property322 { get; set; }

        [JsonProperty("Property306", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property306 { get; set; }
    }

    public partial class Property273
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property273RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetime { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property273RackBones
    {
        [JsonProperty("Property303", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property303 { get; set; }

        [JsonProperty("Property311", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property311 { get; set; }
    }

    public partial class Property274
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombDropThreshold", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BombDropThreshold { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FixBombTrajectory", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FixBombTrajectory { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedToComputeBombDrop", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedToComputeBombDrop { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property274RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property274RackBones
    {
        [JsonProperty("Property306", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property306 { get; set; }

        [JsonProperty("Property304", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property304 { get; set; }
    }

    public partial class Property27
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property275RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property275RackBones
    {
        [JsonProperty("Property307", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property307 { get; set; }
    }

    public partial class Property276
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property276RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property276RackBones
    {
        [JsonProperty("Property308", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property308 { get; set; }

        [JsonProperty("Property307", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property307 { get; set; }
    }

    public partial class Property277
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property277RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? FiringRandomness { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetime { get; set; }
    }

    public partial class Property277RackBones
    {
        [JsonProperty("Property307", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property307 { get; set; }

        [JsonProperty("Property306", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property306 { get; set; }

        [JsonProperty("Property308", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property308 { get; set; }

        [JsonProperty("Property309", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property309 { get; set; }
    }

    public partial class Property281
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTime { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property281RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TurretBoneDualMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualMuzzle { get; set; }

        [JsonProperty("TurretBoneDualPitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualPitch { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property281RackBones
    {
        [JsonProperty("Property316", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property316 { get; set; }

        [JsonProperty("Property310", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property310 { get; set; }
    }

    public partial class Property282
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property282RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }
    }

    public partial class Property282RackBones
    {
        [JsonProperty("Property313", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property313 { get; set; }

        [JsonProperty("Property311", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property311 { get; set; }

        [JsonProperty("Property312", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property312 { get; set; }
    }

    public partial class Property283
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombDropThreshold", NullValueHandling = NullValueHandling.Ignore)]
        public string BombDropThreshold { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FixBombTrajectory", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FixBombTrajectory { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedToComputeBombDrop", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedToComputeBombDrop { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property283RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("DepthCharge", NullValueHandling = NullValueHandling.Ignore)]
        public DepthCharge DepthCharge { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetime { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }
    }

    public partial class Property283RackBones
    {
        [JsonProperty("Property318", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property318 { get; set; }

        [JsonProperty("Property313", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property313 { get; set; }
    }

    public partial class Property284
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property182Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property284RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("BombDropThreshold", NullValueHandling = NullValueHandling.Ignore)]
        public string BombDropThreshold { get; set; }

        [JsonProperty("Display", NullValueHandling = NullValueHandling.Ignore)]
        public string Display { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FixBombTrajectory", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FixBombTrajectory { get; set; }

        [JsonProperty("NeedToComputeBombDrop", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedToComputeBombDrop { get; set; }

        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleChargeDelay { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetime { get; set; }
    }

    public partial class Property284RackBones
    {
        [JsonProperty("Property314", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property314 { get; set; }

        [JsonProperty("Property319", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property319 { get; set; }

        [JsonProperty("Property324", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property324 { get; set; }
    }

    public partial class Property285
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property285Buffs Buffs { get; set; }

        [JsonProperty("ChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ChargeDelay { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property285RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property285Buffs
    {
        [JsonProperty("Property296", NullValueHandling = NullValueHandling.Ignore)]
        public Property247Class Property296 { get; set; }
    }

    public partial class Property285RackBones
    {
        [JsonProperty("Property327", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property327 { get; set; }
    }

    public partial class Property286
    {
        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombDropThreshold", NullValueHandling = NullValueHandling.Ignore)]
        public string BombDropThreshold { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FixBombTrajectory", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FixBombTrajectory { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedToComputeBombDrop", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedToComputeBombDrop { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property286RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTime { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("InitialDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialDamage { get; set; }
    }

    public partial class Property286RackBones
    {
        [JsonProperty("Property324", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property324 { get; set; }

        [JsonProperty("Property319", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property319 { get; set; }

        [JsonProperty("Property326", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property326 { get; set; }

        [JsonProperty("Property333", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property333 { get; set; }
    }

    public partial class Property288
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property288RackBones RackBones { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property288RackBones
    {
        [JsonProperty("Property297", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property297 { get; set; }

        [JsonProperty("Property320", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property320 { get; set; }
    }

    public partial class Property290
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleVelocityRandomness { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property290RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BombDropThreshold", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BombDropThreshold { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("FixBombTrajectory", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FixBombTrajectory { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("NeedToComputeBombDrop", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedToComputeBombDrop { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }
    }

    public partial class Property290RackBones
    {
        [JsonProperty("Property322", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property322 { get; set; }

        [JsonProperty("Property325", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property325 { get; set; }
    }

    public partial class Property291
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property291RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringRandomness { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property291RackBones
    {
        [JsonProperty("Property320", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property320 { get; set; }

        [JsonProperty("Property324", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property324 { get; set; }
    }

    public partial class Property292
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringTolerance { get; set; }

        [JsonProperty("IgnoreIfDisabled", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IgnoreIfDisabled { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("FiringRandomnessWhileMoving", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomnessWhileMoving { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property292RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property292RackBones
    {
        [JsonProperty("Property325", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property325 { get; set; }
    }

    public partial class Property293
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("ChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ChargeDelay { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property293RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneDualMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualMuzzle { get; set; }

        [JsonProperty("TurretBoneDualPitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualPitch { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TrackingRadius { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }
    }

    public partial class Property293RackBones
    {
        [JsonProperty("Property324", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property324 { get; set; }

        [JsonProperty("Property330", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property330 { get; set; }

        [JsonProperty("Property302", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property302 { get; set; }
    }

    public partial class Property294
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property294RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("BombardParticipant", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardParticipant { get; set; }

        [JsonProperty("BombardSwingTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardSwingTurret { get; set; }

        [JsonProperty("BombardTurretRotationSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BombardTurretRotationSpeed { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property294RackBones
    {
        [JsonProperty("Property324", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property324 { get; set; }

        [JsonProperty("Property326", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property326 { get; set; }

        [JsonProperty("Property332", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property332 { get; set; }

        [JsonProperty("Property338", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property338 { get; set; }
    }

    public partial class Property295
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombDropThreshold", NullValueHandling = NullValueHandling.Ignore)]
        public string BombDropThreshold { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FixBombTrajectory", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FixBombTrajectory { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedToComputeBombDrop", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedToComputeBombDrop { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property295RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AimControlPrecedence", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AimControlPrecedence { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property295RackBones
    {
        [JsonProperty("Property330", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property330 { get; set; }

        [JsonProperty("Property324", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property324 { get; set; }
    }

    public partial class Property297
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property297RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }
    }

    public partial class Property297RackBones
    {
        [JsonProperty("Property326", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property326 { get; set; }

        [JsonProperty("Property323", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property323 { get; set; }
    }

    public partial class Property299
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property299RackBones RackBones { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property299RackBones
    {
        [JsonProperty("Property334", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property334 { get; set; }
    }

    public partial class Property301
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property301FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property301RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }
    }

    public partial class Property301FireTargetLayerCapsTable
    {
        [JsonProperty("Sub", NullValueHandling = NullValueHandling.Ignore)]
        public Sub? Sub { get; set; }

        [JsonProperty("Water", NullValueHandling = NullValueHandling.Ignore)]
        public Sub? Water { get; set; }
    }

    public partial class Property301RackBones
    {
        [JsonProperty("Property329", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property329 { get; set; }
    }

    public partial class Property302
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        public string Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property302RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property302RackBones
    {
        [JsonProperty("Property330", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property330 { get; set; }
    }

    public partial class Property303
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property303RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property303RackBones
    {
        [JsonProperty("Property331", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property331 { get; set; }
    }

    public partial class Property304
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property304RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DoTTime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }
    }

    public partial class Property304RackBones
    {
        [JsonProperty("Property330", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property330 { get; set; }

        [JsonProperty("Property332", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property332 { get; set; }
    }

    public partial class Property305
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property301FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property305RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property305RackBones
    {
        [JsonProperty("Property333", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property333 { get; set; }

        [JsonProperty("Property339", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property339 { get; set; }
    }

    public partial class Property306
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property306RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property306RackBones
    {
        [JsonProperty("Property332", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property332 { get; set; }
    }

    public partial class Property307
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property307RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("BombardParticipant", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardParticipant { get; set; }

        [JsonProperty("BombardSwingTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardSwingTurret { get; set; }

        [JsonProperty("ToggleWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string ToggleWeapon { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property307RackBones
    {
        [JsonProperty("Property335", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property335 { get; set; }

        [JsonProperty("Property337", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property337 { get; set; }

        [JsonProperty("Property343", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property343 { get; set; }

        [JsonProperty("Property339", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property339 { get; set; }

        [JsonProperty("Property345", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property345 { get; set; }
    }

    public partial class Property308
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property308RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property308RackBones
    {
        [JsonProperty("Property339", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property339 { get; set; }
    }

    public partial class Property309
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property309RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property309RackBones
    {
        [JsonProperty("Property338", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property338 { get; set; }
    }

    public partial class Property310
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property301FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property310RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }
    }

    public partial class Property310RackBones
    {
        [JsonProperty("Property338", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property338 { get; set; }

        [JsonProperty("Property341", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property341 { get; set; }

        [JsonProperty("Property347", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property347 { get; set; }

        [JsonProperty("Property353", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property353 { get; set; }

        [JsonProperty("Property359", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property359 { get; set; }

        [JsonProperty("Property365", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property365 { get; set; }

        [JsonProperty("Property371", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property371 { get; set; }

        [JsonProperty("Property340", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property340 { get; set; }
    }

    public partial class Property312
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property312RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackRecoilReturnSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilReturnSpeed { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property312RackBones
    {
        [JsonProperty("Property342", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property342 { get; set; }
    }

    public partial class Property314
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property314RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DoTTime { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }
    }

    public partial class Property314RackBones
    {
        [JsonProperty("Property345", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property345 { get; set; }

        [JsonProperty("Property352", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property352 { get; set; }

        [JsonProperty("Property343", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property343 { get; set; }

        [JsonProperty("Property346", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property346 { get; set; }
    }

    public partial class Property315
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property315RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? BeamLifetime { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("ContinuousBeam", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ContinuousBeam { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("RequireTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RequireTime { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpackLocksMotion", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpackLocksMotion { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property315RackBones
    {
        [JsonProperty("Property345", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property345 { get; set; }

        [JsonProperty("Property350", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property350 { get; set; }
    }

    public partial class Property316
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property301FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property316RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("YawOnlyOnTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? YawOnlyOnTarget { get; set; }
    }

    public partial class Property316RackBones
    {
        [JsonProperty("Property343", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property343 { get; set; }

        [JsonProperty("Property350", NullValueHandling = NullValueHandling.Ignore)]
        public Property249Class Property350 { get; set; }
    }

    public partial class Property317
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public MassMult? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property317RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property317RackBones
    {
        [JsonProperty("Property360", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property360 { get; set; }

        [JsonProperty("Property345", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property345 { get; set; }
    }

    public partial class Property318
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property318RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }
    }

    public partial class Property318RackBones
    {
        [JsonProperty("Property346", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property346 { get; set; }

        [JsonProperty("Property345", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property345 { get; set; }
    }

    public partial class Property321
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property321RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneDualMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualMuzzle { get; set; }

        [JsonProperty("TurretBoneDualPitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneDualPitch { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property321RackBones
    {
        [JsonProperty("Property350", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property350 { get; set; }

        [JsonProperty("Property356", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property356 { get; set; }
    }

    public partial class Property323
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AnimationOpen", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationOpen { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property227Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property323RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }
    }

    public partial class Property323RackBones
    {
        [JsonProperty("Property371", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property371 { get; set; }
    }

    public partial class Property324
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property324RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property324RackBones
    {
        [JsonProperty("Property355", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property355 { get; set; }
    }

    public partial class Property326
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property301FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property326RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property326RackBones
    {
        [JsonProperty("Property357", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property357 { get; set; }
    }

    public partial class Property327
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property327RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property327RackBones
    {
        [JsonProperty("Property355", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property355 { get; set; }

        [JsonProperty("Property358", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property358 { get; set; }
    }

    public partial class Property329
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoNotCollideList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> DoNotCollideList { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property329RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property329RackBones
    {
        [JsonProperty("Property362", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property362 { get; set; }
    }

    public partial class Property330
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property330RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("ContinuousBeam", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ContinuousBeam { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("PreferPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PreferPrimaryWeaponTarget { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property330RackBones
    {
        [JsonProperty("Property360", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property360 { get; set; }

        [JsonProperty("Property353", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property353 { get; set; }
    }

    public partial class Property331
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property1092Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("ContinuousBeam", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ContinuousBeam { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property331RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property331RackBones
    {
        [JsonProperty("Property382", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property382 { get; set; }
    }

    public partial class Property336
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property336RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property336RackBones
    {
        [JsonProperty("Property366", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property366 { get; set; }

        [JsonProperty("Property372", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property372 { get; set; }
    }

    public partial class Property337
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property337FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property337RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("ToggleWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string ToggleWeapon { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property337FireTargetLayerCapsTable
    {
        [JsonProperty("Land", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Land { get; set; }
    }

    public partial class Property337RackBones
    {
        [JsonProperty("Property367", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property367 { get; set; }
    }

    public partial class Property338
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property338FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property338RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property338FireTargetLayerCapsTable
    {
        [JsonProperty("Air", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Air { get; set; }
    }

    public partial class Property338RackBones
    {
        [JsonProperty("Property366", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property366 { get; set; }
    }

    public partial class Property339
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property339RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property339RackBones
    {
        [JsonProperty("Property369", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property369 { get; set; }
    }

    public partial class Property340
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property340RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("BombardParticipant", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardParticipant { get; set; }

        [JsonProperty("BombardSwingTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardSwingTurret { get; set; }

        [JsonProperty("BombardTurretRotationSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BombardTurretRotationSpeed { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTime { get; set; }

        [JsonProperty("InitialDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialDamage { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleChargeDelay { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }
    }

    public partial class Property340RackBones
    {
        [JsonProperty("Property379", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property379 { get; set; }

        [JsonProperty("Property385", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property385 { get; set; }

        [JsonProperty("Property391", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property391 { get; set; }

        [JsonProperty("Property382", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property382 { get; set; }

        [JsonProperty("Property388", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property388 { get; set; }
    }

    public partial class Property342
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property342RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }
    }

    public partial class Property342RackBones
    {
        [JsonProperty("Property374", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property374 { get; set; }
    }

    public partial class Property343
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property343RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property343RackBones
    {
        [JsonProperty("Property376", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property376 { get; set; }

        [JsonProperty("Property382", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property382 { get; set; }
    }

    public partial class Property344
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property344RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property344RackBones
    {
        [JsonProperty("Property375", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property375 { get; set; }
    }

    public partial class Property345
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringRandomness { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property345RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackRecoilReturnSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilReturnSpeed { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }
    }

    public partial class Property345RackBones
    {
        [JsonProperty("Property387", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property387 { get; set; }

        [JsonProperty("Property380", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property380 { get; set; }
    }

    public partial class Property346
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property346RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("MaxRadiusUnderWater", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadiusUnderWater { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ReceiveMaxRadiusBuff", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReceiveMaxRadiusBuff { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("TrackTargetDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TrackTargetDelay { get; set; }

        [JsonProperty("TrackTargetProjectileVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackTargetProjectileVelocity { get; set; }
    }

    public partial class Property346RackBones
    {
        [JsonProperty("Property377", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property377 { get; set; }

        [JsonProperty("Property382", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property382 { get; set; }
    }

    public partial class Property347
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property347RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property347RackBones
    {
        [JsonProperty("Property379", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property379 { get; set; }
    }

    public partial class Property349
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public MassMult? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property345RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property350
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property220Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property350RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("DoNotCollideList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> DoNotCollideList { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property350RackBones
    {
        [JsonProperty("Property380", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property380 { get; set; }

        [JsonProperty("Property394", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property394 { get; set; }
    }

    public partial class Property351
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property351RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property351RackBones
    {
        [JsonProperty("Property379", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property379 { get; set; }

        [JsonProperty("Property382", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property382 { get; set; }

        [JsonProperty("Property388", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property388 { get; set; }

        [JsonProperty("Property394", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property394 { get; set; }

        [JsonProperty("Property383", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property383 { get; set; }
    }

    public partial class Property352
    {
        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("ContinuousBeam", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ContinuousBeam { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("PreferPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PreferPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property344RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }
    }

    public partial class Property353
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property353RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property353RackBones
    {
        [JsonProperty("Property400", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property400 { get; set; }

        [JsonProperty("Property385", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property385 { get; set; }

        [JsonProperty("Property379", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property379 { get; set; }

        [JsonProperty("Property384", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property384 { get; set; }
    }

    public partial class Property354
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property354RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property354RackBones
    {
        [JsonProperty("Property387", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property387 { get; set; }
    }

    public partial class Property355
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property355RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetime { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property355RackBones
    {
        [JsonProperty("Property393", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property393 { get; set; }

        [JsonProperty("Property382", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property382 { get; set; }
    }

    public partial class Property357
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property357RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property357RackBones
    {
        [JsonProperty("Property386", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property386 { get; set; }
    }

    public partial class Property359
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property359RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property359RackBones
    {
        [JsonProperty("Property390", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property390 { get; set; }
    }

    public partial class Property360
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property360RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("DepthCharge", NullValueHandling = NullValueHandling.Ignore)]
        public DepthCharge DepthCharge { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property360RackBones
    {
        [JsonProperty("Property390", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property390 { get; set; }

        [JsonProperty("Property381", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property381 { get; set; }
    }

    public partial class Property361
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property361RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property361RackBones
    {
        [JsonProperty("Property392", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property392 { get; set; }

        [JsonProperty("Property396", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property396 { get; set; }
    }

    public partial class Property362
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property362RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property362RackBones
    {
        [JsonProperty("Property393", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property393 { get; set; }
    }

    public partial class Property363
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property363RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property363RackBones
    {
        [JsonProperty("Property407", NullValueHandling = NullValueHandling.Ignore)]
        public Property302Class Property407 { get; set; }

        [JsonProperty("Property415", NullValueHandling = NullValueHandling.Ignore)]
        public Property302Class Property415 { get; set; }

        [JsonProperty("Property423", NullValueHandling = NullValueHandling.Ignore)]
        public Property302Class Property423 { get; set; }
    }

    public partial class Property365
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property365RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }
    }

    public partial class Property365RackBones
    {
        [JsonProperty("Property391", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property391 { get; set; }

        [JsonProperty("Property394", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property394 { get; set; }
    }

    public partial class Property366
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property366RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property366RackBones
    {
        [JsonProperty("Property396", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property396 { get; set; }
    }

    public partial class Property369
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        public string Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleSpecial", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSpecial { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property369RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringRandomness { get; set; }

        [JsonProperty("NoPause", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NoPause { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property369RackBones
    {
        [JsonProperty("Property402", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property402 { get; set; }

        [JsonProperty("Property396", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property396 { get; set; }

        [JsonProperty("Property400", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property400 { get; set; }

        [JsonProperty("Property406", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property406 { get; set; }
    }

    public partial class Property370
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property370RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property370RackBones
    {
        [JsonProperty("Property408", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property408 { get; set; }
    }

    public partial class Property371
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("IgnoreIfDisabled", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IgnoreIfDisabled { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("FiringRandomnessWhileMoving", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomnessWhileMoving { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property371RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BombDropThreshold", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BombDropThreshold { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringRandomness { get; set; }

        [JsonProperty("NeedToComputeBombDrop", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedToComputeBombDrop { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("PredictAheadForBombDrop", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? PredictAheadForBombDrop { get; set; }

        [JsonProperty("StopOnPrimaryWeaponBusy", NullValueHandling = NullValueHandling.Ignore)]
        public bool? StopOnPrimaryWeaponBusy { get; set; }
    }

    public partial class Property371RackBones
    {
        [JsonProperty("Property397", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property397 { get; set; }

        [JsonProperty("Property406", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property406 { get; set; }
    }

    public partial class Property372
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property372RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }
    }

    public partial class Property372RackBones
    {
        [JsonProperty("Property399", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property399 { get; set; }
    }

    public partial class Property373
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property373RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringRandomness { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }
    }

    public partial class Property373RackBones
    {
        [JsonProperty("Property403", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property403 { get; set; }

        [JsonProperty("Property407", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property407 { get; set; }
    }

    public partial class Property374
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property374RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property374RackBones
    {
        [JsonProperty("Property403", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property403 { get; set; }
    }

    public partial class Property375
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property374RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property376
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DepthCharge", NullValueHandling = NullValueHandling.Ignore)]
        public DepthCharge DepthCharge { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property301FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property376RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property376RackBones
    {
        [JsonProperty("Property405", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property405 { get; set; }
    }

    public partial class Property377
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombardParticipant", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardParticipant { get; set; }

        [JsonProperty("BombardSwingTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardSwingTurret { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property377RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property377RackBones
    {
        [JsonProperty("Property410", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property410 { get; set; }

        [JsonProperty("Property416", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property416 { get; set; }
    }

    public partial class Property379
    {
        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property379RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("BombardParticipant", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardParticipant { get; set; }

        [JsonProperty("BombardSwingTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardSwingTurret { get; set; }

        [JsonProperty("BombardTurretRotationSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BombardTurretRotationSpeed { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }
    }

    public partial class Property379RackBones
    {
        [JsonProperty("Property399", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property399 { get; set; }

        [JsonProperty("Property406", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property406 { get; set; }

        [JsonProperty("Property412", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property412 { get; set; }

        [JsonProperty("Property418", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property418 { get; set; }

        [JsonProperty("Property424", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property424 { get; set; }
    }

    public partial class Property381
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Accurate", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Accurate { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        public string Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FireOnDeath", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FireOnDeath { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("IgnoreIfDisabled", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IgnoreIfDisabled { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property381RackBones RackBones { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("SalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SalvoSize { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property161Audio Audio { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamLifetime { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("MaximumBeamLength", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaximumBeamLength { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property381RackBones
    {
        [JsonProperty("Property405", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property405 { get; set; }

        [JsonProperty("Property411", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property411 { get; set; }

        [JsonProperty("Property417", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property417 { get; set; }

        [JsonProperty("Property423", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property423 { get; set; }
    }

    public partial class Property383
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property383RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property383RackBones
    {
        [JsonProperty("Property412", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property412 { get; set; }
    }

    public partial class Property387
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property387Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property301FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property387RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property387Audio
    {
        [JsonProperty("FireUnderWater", NullValueHandling = NullValueHandling.Ignore)]
        public Activate FireUnderWater { get; set; }
    }

    public partial class Property387RackBones
    {
        [JsonProperty("Property413", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property413 { get; set; }
    }

    public partial class Property390
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property390RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property390RackBones
    {
        [JsonProperty("Property418", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property418 { get; set; }
    }

    public partial class Property391
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property301FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("NukeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NukeWeapon { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property391RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }
    }

    public partial class Property391RackBones
    {
        [JsonProperty("Property433", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property433 { get; set; }
    }

    public partial class Property392
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("ContinuousBeam", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ContinuousBeam { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property337FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("PreferPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PreferPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property392RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property392RackBones
    {
        [JsonProperty("Property414", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property414 { get; set; }
    }

    public partial class Property395
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property395RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property395RackBones
    {
        [JsonProperty("Property425", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property425 { get; set; }
    }

    public partial class Property396
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property396RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }
    }

    public partial class Property396RackBones
    {
        [JsonProperty("Property422", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property422 { get; set; }

        [JsonProperty("Property427", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property427 { get; set; }
    }

    public partial class Property397
    {
        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property337FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PreferPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PreferPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property397RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property397RackBones
    {
        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("Property429", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property429 { get; set; }

        [JsonProperty("Property436", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property436 { get; set; }

        [JsonProperty("Property443", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property443 { get; set; }

        [JsonProperty("Property450", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property450 { get; set; }

        [JsonProperty("Property457", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property457 { get; set; }

        [JsonProperty("Property464", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property464 { get; set; }
    }

    public partial class Property405
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombardParticipant", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardParticipant { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property405RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("RenderFireClock", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RenderFireClock { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property405RackBones
    {
        [JsonProperty("Property440", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property440 { get; set; }
    }

    public partial class Property406
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public RateOfFire? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property406RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }
    }

    public partial class Property406RackBones
    {
        [JsonProperty("Property433", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property433 { get; set; }

        [JsonProperty("Property450", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property450 { get; set; }
    }

    public partial class Property407
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property407RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("NukeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NukeWeapon { get; set; }
    }

    public partial class Property407RackBones
    {
        [JsonProperty("Property436", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property436 { get; set; }

        [JsonProperty("Property449", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property449 { get; set; }

        [JsonProperty("Property455", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property455 { get; set; }
    }

    public partial class Property409
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property409RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property409RackBones
    {
        [JsonProperty("Property439", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property439 { get; set; }
    }

    public partial class Property411
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AnimationOpen", NullValueHandling = NullValueHandling.Ignore)]
        public string AnimationOpen { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property227Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property411RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }
    }

    public partial class Property411RackBones
    {
        [JsonProperty("Property459", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property459 { get; set; }
    }

    public partial class Property412
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property412Buffs Buffs { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageRadius { get; set; }

        [JsonProperty("DamageToShields", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageToShields { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property412RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property412Buffs
    {
        [JsonProperty("Property423", NullValueHandling = NullValueHandling.Ignore)]
        public Property437Class Property423 { get; set; }

        [JsonProperty("Property437", NullValueHandling = NullValueHandling.Ignore)]
        public Property437Class Property437 { get; set; }

        [JsonProperty("Property451", NullValueHandling = NullValueHandling.Ignore)]
        public Property437Class Property451 { get; set; }
    }

    public partial class Property412RackBones
    {
        [JsonProperty("Property487", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property487 { get; set; }

        [JsonProperty("Property493", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property493 { get; set; }
    }

    public partial class Property417
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property417RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }
    }

    public partial class Property417RackBones
    {
        [JsonProperty("Property444", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property444 { get; set; }
    }

    public partial class Property418
    {
        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property301FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property418RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }
    }

    public partial class Property418RackBones
    {
        [JsonProperty("Property438", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property438 { get; set; }

        [JsonProperty("Property447", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property447 { get; set; }
    }

    public partial class Property419
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property419RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("ToggleWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string ToggleWeapon { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }
    }

    public partial class Property419RackBones
    {
        [JsonProperty("Property447", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property447 { get; set; }

        [JsonProperty("Property454", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property454 { get; set; }
    }

    public partial class Property420
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property405RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property421
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property421RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }
    }

    public partial class Property421RackBones
    {
        [JsonProperty("Property450", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property450 { get; set; }

        [JsonProperty("Property453", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property453 { get; set; }
    }

    public partial class Property422
    {
        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DoTTime { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property301FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property417RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property425
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property425RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }
    }

    public partial class Property425RackBones
    {
        [JsonProperty("Property457", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property457 { get; set; }

        [JsonProperty("Property454", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property454 { get; set; }
    }

    public partial class Property426
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property411RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property427
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property427RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property427RackBones
    {
        [JsonProperty("Property457", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property457 { get; set; }

        [JsonProperty("Property463", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property463 { get; set; }
    }

    public partial class Property428
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property428RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackRecoilReturnSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilReturnSpeed { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }
    }

    public partial class Property428RackBones
    {
        [JsonProperty("Property470", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property470 { get; set; }

        [JsonProperty("Property458", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property458 { get; set; }
    }

    public partial class Property429
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property429Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        public string Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property429RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamLifetime { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("MaximumBeamLength", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaximumBeamLength { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }
    }

    public partial class Property429Audio
    {
        [JsonProperty("Fire", NullValueHandling = NullValueHandling.Ignore)]
        public Activate Fire { get; set; }

        [JsonProperty("FireSpecial", NullValueHandling = NullValueHandling.Ignore)]
        public Activate FireSpecial { get; set; }
    }

    public partial class Property429RackBones
    {
        [JsonProperty("Property458", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property458 { get; set; }

        [JsonProperty("Property464", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property464 { get; set; }

        [JsonProperty("Property459", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property459 { get; set; }

        [JsonProperty("Property465", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property465 { get; set; }

        [JsonProperty("Property471", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property471 { get; set; }
    }

    public partial class Property430
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property430RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }
    }

    public partial class Property430RackBones
    {
        [JsonProperty("Property460", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property460 { get; set; }

        [JsonProperty("Property461", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property461 { get; set; }
    }

    public partial class Property431
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property431RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }
    }

    public partial class Property431RackBones
    {
        [JsonProperty("Property465", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property465 { get; set; }

        [JsonProperty("Property471", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property471 { get; set; }

        [JsonProperty("Property477", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property477 { get; set; }

        [JsonProperty("Property462", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property462 { get; set; }

        [JsonProperty("Property461", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property461 { get; set; }
    }

    public partial class Property432
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public MassMult? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property432RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property432RackBones
    {
        [JsonProperty("Property465", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property465 { get; set; }

        [JsonProperty("Property472", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property472 { get; set; }
    }

    public partial class Property433
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property433RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property433RackBones
    {
        [JsonProperty("Property461", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property461 { get; set; }
    }

    public partial class Property434
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property434RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property434RackBones
    {
        [JsonProperty("Property464", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property464 { get; set; }
    }

    public partial class Property435
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombDropThreshold", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BombDropThreshold { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        public string Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? FiringTolerance { get; set; }

        [JsonProperty("FixBombTrajectory", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FixBombTrajectory { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("NeedToComputeBombDrop", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedToComputeBombDrop { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property435RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RateOfFire { get; set; }

        [JsonProperty("SkipReadyState", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SkipReadyState { get; set; }

        [JsonProperty("StopOnPrimaryWeaponBusy", NullValueHandling = NullValueHandling.Ignore)]
        public bool? StopOnPrimaryWeaponBusy { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property435RackBones
    {
        [JsonProperty("Property471", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property471 { get; set; }

        [JsonProperty("Property470", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property470 { get; set; }
    }

    public partial class Property437
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property301FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property434RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property439
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property434RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property441
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombDropThreshold", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BombDropThreshold { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTime { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FixBombTrajectory", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FixBombTrajectory { get; set; }

        [JsonProperty("InitialDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialDamage { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedToComputeBombDrop", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedToComputeBombDrop { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property441RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RateOfFire { get; set; }

        [JsonProperty("SkipReadyState", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SkipReadyState { get; set; }

        [JsonProperty("StopOnPrimaryWeaponBusy", NullValueHandling = NullValueHandling.Ignore)]
        public bool? StopOnPrimaryWeaponBusy { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property441RackBones
    {
        [JsonProperty("Property478", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property478 { get; set; }
    }

    public partial class Property442
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property301FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property442RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property442RackBones
    {
        [JsonProperty("Property470", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property470 { get; set; }
    }

    public partial class Property443
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property1092Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? BeamLifetime { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        public string Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleSpecial", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSpecial { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property443RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property443RackBones
    {
        [JsonProperty("Property491", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property491 { get; set; }
    }

    public partial class Property446
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Flare", NullValueHandling = NullValueHandling.Ignore)]
        public Flare Flare { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property446RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringRandomness { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }
    }

    public partial class Property446RackBones
    {
        [JsonProperty("Property477", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property477 { get; set; }

        [JsonProperty("Property480", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property480 { get; set; }
    }

    public partial class Property450
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property182Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property450RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleChargeDelay { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property450RackBones
    {
        [JsonProperty("Property478", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property478 { get; set; }

        [JsonProperty("Property485", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property485 { get; set; }

        [JsonProperty("Property480", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property480 { get; set; }

        [JsonProperty("Property493", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property493 { get; set; }
    }

    public partial class Property455
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property455RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property455RackBones
    {
        [JsonProperty("Property482", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property482 { get; set; }
    }

    public partial class Property458
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property1483Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombardParticipant", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardParticipant { get; set; }

        [JsonProperty("BombardSwingTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardSwingTurret { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property458RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property458RackBones
    {
        [JsonProperty("Property504", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property504 { get; set; }
    }

    public partial class Property463
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property463RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property463RackBones
    {
        [JsonProperty("Property493", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property493 { get; set; }

        [JsonProperty("Property499", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property499 { get; set; }

        [JsonProperty("Property505", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property505 { get; set; }

        [JsonProperty("Property511", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property511 { get; set; }

        [JsonProperty("Property517", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property517 { get; set; }

        [JsonProperty("Property523", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property523 { get; set; }
    }

    public partial class Property465
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property465RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property465RackBones
    {
        [JsonProperty("Property496", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property496 { get; set; }
    }

    public partial class Property468
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property178Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property468RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property468RackBones
    {
        [JsonProperty("Property512", NullValueHandling = NullValueHandling.Ignore)]
        public Property302Class Property512 { get; set; }

        [JsonProperty("Property520", NullValueHandling = NullValueHandling.Ignore)]
        public Property302Class Property520 { get; set; }

        [JsonProperty("Property528", NullValueHandling = NullValueHandling.Ignore)]
        public Property302Class Property528 { get; set; }
    }

    public partial class Property474
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property474RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }
    }

    public partial class Property474RackBones
    {
        [JsonProperty("Property499", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property499 { get; set; }

        [JsonProperty("Property502", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property502 { get; set; }
    }

    public partial class Property476
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property476Buffs Buffs { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property301FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("NukeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NukeWeapon { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property476RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }
    }

    public partial class Property476Buffs
    {
        [JsonProperty("Property487", NullValueHandling = NullValueHandling.Ignore)]
        public Property247Class Property487 { get; set; }
    }

    public partial class Property476RackBones
    {
        [JsonProperty("Property532", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property532 { get; set; }
    }

    public partial class Property477
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property338FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property477RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property477RackBones
    {
        [JsonProperty("Property506", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property506 { get; set; }
    }

    public partial class Property479
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property479RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property479RackBones
    {
        [JsonProperty("Property509", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property509 { get; set; }
    }

    public partial class Property489
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property489Buffs Buffs { get; set; }

        [JsonProperty("BombardDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardDisable { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageToShields", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageToShields { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property489RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }
    }

    public partial class Property489Buffs
    {
        [JsonProperty("Property500", NullValueHandling = NullValueHandling.Ignore)]
        public Property437Class Property500 { get; set; }
    }

    public partial class Property489RackBones
    {
        [JsonProperty("Property539", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property539 { get; set; }

        [JsonProperty("Property556", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property556 { get; set; }
    }

    public partial class Property491
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property491RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property491RackBones
    {
        [JsonProperty("Property519", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property519 { get; set; }
    }

    public partial class Property492
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property492RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property492RackBones
    {
        [JsonProperty("Property522", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property522 { get; set; }
    }

    public partial class Property493
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property493RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property493RackBones
    {
        [JsonProperty("Property528", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property528 { get; set; }
    }

    public partial class Property496
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamLifetime { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property496FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MaximumBeamLength", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaximumBeamLength { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property496RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DoTTime { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }
    }

    public partial class Property496FireTargetLayerCapsTable
    {
        [JsonProperty("Water", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Water { get; set; }

        [JsonProperty("Seabed", NullValueHandling = NullValueHandling.Ignore)]
        public Air? Seabed { get; set; }
    }

    public partial class Property496RackBones
    {
        [JsonProperty("Property522", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property522 { get; set; }

        [JsonProperty("Property524", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property524 { get; set; }

        [JsonProperty("Property533", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property533 { get; set; }

        [JsonProperty("Property542", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property542 { get; set; }
    }

    public partial class Property497
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1098FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property497RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property497RackBones
    {
        [JsonProperty("Property523", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property523 { get; set; }
    }

    public partial class Property498
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property498RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property498RackBones
    {
        [JsonProperty("Property531", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property531 { get; set; }
    }

    public partial class Property499
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Flare", NullValueHandling = NullValueHandling.Ignore)]
        public Flare Flare { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property499RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property499RackBones
    {
        [JsonProperty("Property530", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property530 { get; set; }

        [JsonProperty("Property536", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property536 { get; set; }
    }

    public partial class Property500
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property476RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property501
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property501RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property501RackBones
    {
        [JsonProperty("Property535", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property535 { get; set; }
    }

    public partial class Property504
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property504RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }
    }

    public partial class Property504RackBones
    {
        [JsonProperty("Property534", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property534 { get; set; }

        [JsonProperty("Property540", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property540 { get; set; }
    }

    public partial class Property505
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property505RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property505RackBones
    {
        [JsonProperty("Property536", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property536 { get; set; }
    }

    public partial class Property507
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property507RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }
    }

    public partial class Property507RackBones
    {
        [JsonProperty("Property538", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property538 { get; set; }
    }

    public partial class Property508
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property508RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property508RackBones
    {
        [JsonProperty("Property534", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property534 { get; set; }

        [JsonProperty("Property541", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property541 { get; set; }

        [JsonProperty("Property548", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property548 { get; set; }

        [JsonProperty("Property555", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property555 { get; set; }

        [JsonProperty("Property562", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property562 { get; set; }

        [JsonProperty("Property569", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property569 { get; set; }
    }

    public partial class Property510
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DoTTime { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property507RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property511
    {
        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property511RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property511RackBones
    {
        [JsonProperty("Property539", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property539 { get; set; }
    }

    public partial class Property512
    {
        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property301FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property512RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property512RackBones
    {
        [JsonProperty("Property533", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property533 { get; set; }
    }

    public partial class Property515
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property515RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property515RackBones
    {
        [JsonProperty("Property542", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property542 { get; set; }
    }

    public partial class Property517
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public MassMult? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property517RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property517RackBones
    {
        [JsonProperty("Property550", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property550 { get; set; }

        [JsonProperty("Property557", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property557 { get; set; }
    }

    public partial class Property519
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property519RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property519RackBones
    {
        [JsonProperty("Property555", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property555 { get; set; }
    }

    public partial class Property520
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property520RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }
    }

    public partial class Property520RackBones
    {
        [JsonProperty("Property556", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property556 { get; set; }
    }

    public partial class Property522
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property172FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property522RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property522RackBones
    {
        [JsonProperty("Property557", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property557 { get; set; }

        [JsonProperty("Property563", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property563 { get; set; }

        [JsonProperty("Property569", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property569 { get; set; }
    }

    public partial class Property527
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property527RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property527RackBones
    {
        [JsonProperty("Property551", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property551 { get; set; }
    }

    public partial class Property533
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DepthCharge", NullValueHandling = NullValueHandling.Ignore)]
        public DepthCharge DepthCharge { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property533RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property533RackBones
    {
        [JsonProperty("Property563", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property563 { get; set; }
    }

    public partial class Property534
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property534RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property534RackBones
    {
        [JsonProperty("Property565", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property565 { get; set; }
    }

    public partial class Property536
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property536RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property536RackBones
    {
        [JsonProperty("Property574", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property574 { get; set; }
    }

    public partial class Property547
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property338FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property547RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property547RackBones
    {
        [JsonProperty("Property576", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property576 { get; set; }
    }

    public partial class Property548
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property548RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property548RackBones
    {
        [JsonProperty("Property580", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property580 { get; set; }
    }

    public partial class Property549
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public KMoveDamping? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property549RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property549RackBones
    {
        [JsonProperty("Property562", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property562 { get; set; }

        [JsonProperty("Property577", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property577 { get; set; }
    }

    public partial class Property556
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public MassMult? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property556RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("ToggleWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public string ToggleWeapon { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }
    }

    public partial class Property556RackBones
    {
        [JsonProperty("Property585", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property585 { get; set; }

        [JsonProperty("Property593", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property593 { get; set; }
    }

    public partial class Property569
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property569RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property569RackBones
    {
        [JsonProperty("Property600", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property600 { get; set; }

        [JsonProperty("Property606", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property606 { get; set; }

        [JsonProperty("Property612", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property612 { get; set; }

        [JsonProperty("Property618", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property618 { get; set; }

        [JsonProperty("Property624", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property624 { get; set; }

        [JsonProperty("Property630", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property630 { get; set; }
    }

    public partial class Property570
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DepthCharge", NullValueHandling = NullValueHandling.Ignore)]
        public DepthCharge DepthCharge { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property570RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property570RackBones
    {
        [JsonProperty("Property599", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property599 { get; set; }
    }

    public partial class Property572
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property572RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }
    }

    public partial class Property572RackBones
    {
        [JsonProperty("Property603", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property603 { get; set; }
    }

    public partial class Property573
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DepthCharge", NullValueHandling = NullValueHandling.Ignore)]
        public DepthCharge DepthCharge { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property496FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property573RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }
    }

    public partial class Property573RackBones
    {
        [JsonProperty("Property601", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property601 { get; set; }
    }

    public partial class Property575
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property575RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property575RackBones
    {
        [JsonProperty("Property602", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property602 { get; set; }
    }

    public partial class Property577
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property337FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property577RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property577RackBones
    {
        [JsonProperty("Property608", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property608 { get; set; }
    }

    public partial class Property578
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property577RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property579
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamLifetime { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property579RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property579RackBones
    {
        [JsonProperty("Property604", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property604 { get; set; }
    }

    public partial class Property584
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTPulses", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulses { get; set; }

        [JsonProperty("DoTTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DoTTime { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property584RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property584RackBones
    {
        [JsonProperty("Property611", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property611 { get; set; }
    }

    public partial class Property591
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property591RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }
    }

    public partial class Property591RackBones
    {
        [JsonProperty("Property627", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property627 { get; set; }
    }

    public partial class Property602
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DepthCharge", NullValueHandling = NullValueHandling.Ignore)]
        public DepthCharge DepthCharge { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public EconomyThreatLevel? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        public string MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, Property1043> RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? DamageRadius { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public MassMult? FiringRandomness { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BombardEnable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardEnable { get; set; }

        [JsonProperty("BombardParticipant", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardParticipant { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property602Buffs Buffs { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageToShields", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageToShields { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }
    }

    public partial class Property602Buffs
    {
        [JsonProperty("Property615", NullValueHandling = NullValueHandling.Ignore)]
        public Property437Class Property615 { get; set; }
    }

    public partial class Property603
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property603RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property603RackBones
    {
        [JsonProperty("Property636", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property636 { get; set; }
    }

    public partial class Property607
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property607RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property607RackBones
    {
        [JsonProperty("Property635", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property635 { get; set; }
    }

    public partial class Property612
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property172FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property612RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property612RackBones
    {
        [JsonProperty("Property647", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property647 { get; set; }

        [JsonProperty("Property653", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property653 { get; set; }

        [JsonProperty("Property659", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property659 { get; set; }
    }

    public partial class Property617
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property338FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property617RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property617RackBones
    {
        [JsonProperty("Property643", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property643 { get; set; }
    }

    public partial class Property618
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property618RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property618RackBones
    {
        [JsonProperty("Property657", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property657 { get; set; }
    }

    public partial class Property622
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property622RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property622RackBones
    {
        [JsonProperty("Property654", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property654 { get; set; }
    }

    public partial class Property635
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property635RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackRecoilReturnSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilReturnSpeed { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public MassMult? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property635RackBones
    {
        [JsonProperty("Property666", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property666 { get; set; }
    }

    public partial class Property639
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property639RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property639RackBones
    {
        [JsonProperty("Property675", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property675 { get; set; }
    }

    public partial class Property644
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property644RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property644RackBones
    {
        [JsonProperty("Property676", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property676 { get; set; }
    }

    public partial class Property648
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property337FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property648RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property648RackBones
    {
        [JsonProperty("Property679", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property679 { get; set; }
    }

    public partial class Property649
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property649RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamLifetime { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }
    }

    public partial class Property649RackBones
    {
        [JsonProperty("Property681", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property681 { get; set; }

        [JsonProperty("Property676", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property676 { get; set; }
    }

    public partial class Property662
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property662RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }
    }

    public partial class Property662RackBones
    {
        [JsonProperty("Property698", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property698 { get; set; }
    }

    public partial class Property665
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("AutoInitiateAttackCommand", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoInitiateAttackCommand { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property665RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property665RackBones
    {
        [JsonProperty("Property693", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property693 { get; set; }
    }

    public partial class Property670
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property338FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property670RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property670RackBones
    {
        [JsonProperty("Property697", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property697 { get; set; }
    }

    public partial class Property676
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property676RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property676RackBones
    {
        [JsonProperty("Property707", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property707 { get; set; }

        [JsonProperty("Property713", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property713 { get; set; }

        [JsonProperty("Property719", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property719 { get; set; }

        [JsonProperty("Property725", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property725 { get; set; }

        [JsonProperty("Property731", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property731 { get; set; }

        [JsonProperty("Property737", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property737 { get; set; }
    }

    public partial class Property680
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property680RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property680RackBones
    {
        [JsonProperty("Property715", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property715 { get; set; }

        [JsonProperty("Property721", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property721 { get; set; }
    }

    public partial class Property684
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("Buffs", NullValueHandling = NullValueHandling.Ignore)]
        public Property684Buffs Buffs { get; set; }

        [JsonProperty("ChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ChargeDelay { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property684RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property684Buffs
    {
        [JsonProperty("Property696", NullValueHandling = NullValueHandling.Ignore)]
        public Property247Class Property696 { get; set; }

        [JsonProperty("Property707", NullValueHandling = NullValueHandling.Ignore)]
        public Property247Class Property707 { get; set; }

        [JsonProperty("Property718", NullValueHandling = NullValueHandling.Ignore)]
        public Property247Class Property718 { get; set; }

        [JsonProperty("Property729", NullValueHandling = NullValueHandling.Ignore)]
        public Property247Class Property729 { get; set; }
    }

    public partial class Property684RackBones
    {
        [JsonProperty("Property761", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property761 { get; set; }
    }

    public partial class Property687
    {
        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property161Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamLifetime { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        public string Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaximumBeamLength", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaximumBeamLength { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property687RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property687RackBones
    {
        [JsonProperty("Property717", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property717 { get; set; }

        [JsonProperty("Property723", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property723 { get; set; }

        [JsonProperty("Property729", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property729 { get; set; }
    }

    public partial class Property696
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NoPause", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NoPause { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property696RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property696RackBones
    {
        [JsonProperty("Property727", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property727 { get; set; }

        [JsonProperty("Property733", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property733 { get; set; }

        [JsonProperty("Property739", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property739 { get; set; }

        [JsonProperty("Property745", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property745 { get; set; }
    }

    public partial class Property704
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property172FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property704RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property704RackBones
    {
        [JsonProperty("Property739", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property739 { get; set; }

        [JsonProperty("Property745", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property745 { get; set; }

        [JsonProperty("Property751", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property751 { get; set; }
    }

    public partial class Property710
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamLifetime { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property710RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property710RackBones
    {
        [JsonProperty("Property737", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property737 { get; set; }
    }

    public partial class Property711
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property711RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackRecoilReturnSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilReturnSpeed { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public MassMult? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property711RackBones
    {
        [JsonProperty("Property743", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property743 { get; set; }
    }

    public partial class Property716
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombardDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardDisable { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("GattlingBarrelBone", NullValueHandling = NullValueHandling.Ignore)]
        public string GattlingBarrelBone { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property716RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property716RackBones
    {
        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }

        [JsonProperty("1", NullValueHandling = NullValueHandling.Ignore)]
        public string The1 { get; set; }

        [JsonProperty("2", NullValueHandling = NullValueHandling.Ignore)]
        public string The2 { get; set; }

        [JsonProperty("3", NullValueHandling = NullValueHandling.Ignore)]
        public string The3 { get; set; }

        [JsonProperty("4", NullValueHandling = NullValueHandling.Ignore)]
        public string The4 { get; set; }

        [JsonProperty("5", NullValueHandling = NullValueHandling.Ignore)]
        public string The5 { get; set; }

        [JsonProperty("6", NullValueHandling = NullValueHandling.Ignore)]
        public string The6 { get; set; }

        [JsonProperty("7", NullValueHandling = NullValueHandling.Ignore)]
        public string The7 { get; set; }

        [JsonProperty("8", NullValueHandling = NullValueHandling.Ignore)]
        public string The8 { get; set; }

        [JsonProperty("9", NullValueHandling = NullValueHandling.Ignore)]
        public string The9 { get; set; }

        [JsonProperty("Property748", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property748 { get; set; }
    }

    public partial class Property719
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1098FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property719RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property719RackBones
    {
        [JsonProperty("Property745", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property745 { get; set; }
    }

    public partial class Property720
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property720RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("SlavedToBodyArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? SlavedToBodyArcRange { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }
    }

    public partial class Property720RackBones
    {
        [JsonProperty("Property753", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property753 { get; set; }
    }

    public partial class Property724
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property338FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property724RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property724RackBones
    {
        [JsonProperty("Property756", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property756 { get; set; }
    }

    public partial class Property727
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property727RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property727RackBones
    {
        [JsonProperty("Property759", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property759 { get; set; }
    }

    public partial class Property753
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("ChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ChargeDelay { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property753RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property753RackBones
    {
        [JsonProperty("Property786", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property786 { get; set; }
    }

    public partial class Property760
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("ChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ChargeDelay { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property760RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property760RackBones
    {
        [JsonProperty("Property793", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property793 { get; set; }
    }

    public partial class Property764
    {
        [JsonProperty("AimsStraightOnDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AimsStraightOnDisable { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property161Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? BeamLifetime { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        public string Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaximumBeamLength", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaximumBeamLength { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("NeedPrep", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NeedPrep { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property764RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property764RackBones
    {
        [JsonProperty("Property794", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property794 { get; set; }

        [JsonProperty("Property800", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property800 { get; set; }

        [JsonProperty("Property806", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property806 { get; set; }
    }

    public partial class Property766
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property766RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property766RackBones
    {
        [JsonProperty("Property797", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property797 { get; set; }
    }

    public partial class Property774
    {
        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property753RackBones RackBones { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }
    }

    public partial class Property783
    {
        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property242FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property783RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property783RackBones
    {
        [JsonProperty("Property814", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property814 { get; set; }

        [JsonProperty("Property820", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property820 { get; set; }

        [JsonProperty("Property826", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property826 { get; set; }

        [JsonProperty("Property832", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property832 { get; set; }

        [JsonProperty("Property838", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property838 { get; set; }

        [JsonProperty("Property844", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property844 { get; set; }
    }

    public partial class Property788
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("CountedProjectile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CountedProjectile { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("ForceSingleFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ForceSingleFire { get; set; }

        [JsonProperty("InitialProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialProjectileStorage { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ManualFire { get; set; }

        [JsonProperty("MaxProjectileStorage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxProjectileStorage { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NukeInnerRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingDamage { get; set; }

        [JsonProperty("NukeInnerRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingRadius { get; set; }

        [JsonProperty("NukeInnerRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTicks { get; set; }

        [JsonProperty("NukeInnerRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeInnerRingTotalTime { get; set; }

        [JsonProperty("NukeOuterRingDamage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingDamage { get; set; }

        [JsonProperty("NukeOuterRingRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingRadius { get; set; }

        [JsonProperty("NukeOuterRingTicks", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTicks { get; set; }

        [JsonProperty("NukeOuterRingTotalTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? NukeOuterRingTotalTime { get; set; }

        [JsonProperty("NukeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NukeWeapon { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property788RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }
    }

    public partial class Property788RackBones
    {
        [JsonProperty("Property833", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property833 { get; set; }
    }

    public partial class Property790
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NoPause", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NoPause { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property790RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property790RackBones
    {
        [JsonProperty("Property821", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property821 { get; set; }

        [JsonProperty("Property827", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property827 { get; set; }

        [JsonProperty("Property833", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property833 { get; set; }

        [JsonProperty("Property839", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property839 { get; set; }
    }

    public partial class Property796
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property172FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property796RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property796RackBones
    {
        [JsonProperty("Property826", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property826 { get; set; }
    }

    public partial class Property800
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("EnabledByEnhancement", NullValueHandling = NullValueHandling.Ignore)]
        public string EnabledByEnhancement { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property800RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property800RackBones
    {
        [JsonProperty("Property836", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property836 { get; set; }
    }

    public partial class Property802
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DetonatesAtTargetHeight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DetonatesAtTargetHeight { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property338FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property802RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpackAnimation", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponUnpackAnimation { get; set; }

        [JsonProperty("WeaponUnpackAnimationRate", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponUnpackAnimationRate { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property802RackBones
    {
        [JsonProperty("Property835", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property835 { get; set; }
    }

    public partial class Property803
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Property1483Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombardDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardDisable { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("GattlingBarrelBone", NullValueHandling = NullValueHandling.Ignore)]
        public string GattlingBarrelBone { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property803RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("ReTargetOnMiss", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReTargetOnMiss { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property803RackBones
    {
        [JsonProperty("Property845", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property845 { get; set; }
    }

    public partial class Property805
    {
        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property805RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property805RackBones
    {
        [JsonProperty("Property837", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property837 { get; set; }
    }

    public partial class Property816
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("LeadTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LeadTarget { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property816RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property816RackBones
    {
        [JsonProperty("Property848", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property848 { get; set; }
    }

    public partial class Property825
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("OverChargeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OverChargeWeapon { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property825RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property825RackBones
    {
        [JsonProperty("Property861", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property861 { get; set; }
    }

    public partial class Property832
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireOnDeath", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FireOnDeath { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property832RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property832RackBones
    {
        [JsonProperty("Property849", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property849 { get; set; }
    }

    public partial class Property838
    {
        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireOnDeath", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FireOnDeath { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property838RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property838RackBones
    {
        [JsonProperty("Property854", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property854 { get; set; }
    }

    public partial class Property857
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageDuringCapacitor { get; set; }

        [JsonProperty("DamageRadiusDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadiusDuringCapacitor { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTTimeDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DoTTimeDuringCapacitor { get; set; }

        [JsonProperty("DoTPulsesDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulsesDuringCapacitor { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property172FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("InitialDamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialDamageDuringCapacitor { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileIdDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileIdDuringCapacitor { get; set; }

        [JsonProperty("ProjectileLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetime { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property857RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("ReceiveROFBuff", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReceiveRofBuff { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property857RackBones
    {
        [JsonProperty("Property891", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property891 { get; set; }
    }

    public partial class Property867
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property172FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property867RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property867RackBones
    {
        [JsonProperty("Property898", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property898 { get; set; }
    }

    public partial class Property871
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleChargeDelay { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property871RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property871RackBones
    {
        [JsonProperty("Property902", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property902 { get; set; }
    }

    public partial class Property879
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireOnDeath", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FireOnDeath { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property879RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property879RackBones
    {
        [JsonProperty("Property896", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property896 { get; set; }
    }

    public partial class Property883
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property883RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property883RackBones
    {
        [JsonProperty("Property910", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property910 { get; set; }
    }

    public partial class Property889
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? BeamLifetime { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("OverChargeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OverChargeWeapon { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property889RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public CombatTurnSpeed? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleChargeDelay", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? MuzzleChargeDelay { get; set; }
    }

    public partial class Property889RackBones
    {
        [JsonProperty("Property928", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property928 { get; set; }

        [JsonProperty("Property920", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property920 { get; set; }
    }

    public partial class Property890
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DummyWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DummyWeapon { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombardDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardDisable { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property890RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }
    }

    public partial class Property890RackBones
    {
        [JsonProperty("Property922", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property922 { get; set; }
    }

    public partial class Property90
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("ArtilleryShieldBlocks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ArtilleryShieldBlocks { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CameraLifetime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraLifetime { get; set; }

        [JsonProperty("CameraVisionRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CameraVisionRadius { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property337FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("MuzzleVelocityReduceDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocityReduceDistance { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property90RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string WeaponCategory { get; set; }
    }

    public partial class Property90RackBones
    {
        [JsonProperty("Property123", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property123 { get; set; }
    }

    public partial class Property907
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property907RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public string RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property907RackBones
    {
        [JsonProperty("Property941", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property941 { get; set; }
    }

    public partial class Property931
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageDuringCapacitor { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageRadiusDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadiusDuringCapacitor { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("DoTTimeDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTTimeDuringCapacitor { get; set; }

        [JsonProperty("DoTPulsesDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DoTPulsesDuringCapacitor { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1148FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("InitialDamageDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? InitialDamageDuringCapacitor { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("OverChargeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OverChargeWeapon { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileIdDuringCapacitor", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileIdDuringCapacitor { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property931RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property931RackBones
    {
        [JsonProperty("Property973", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property973 { get; set; }
    }

    public partial class Property937
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property937RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property937RackBones
    {
        [JsonProperty("Property967", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property967 { get; set; }
    }

    public partial class Property939
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AlwaysRecheckTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysRecheckTarget { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CannotAttackGround", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CannotAttackGround { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EffectiveRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EffectiveRadius { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringRandomness", NullValueHandling = NullValueHandling.Ignore)]
        public string FiringRandomness { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property939RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property939RackBones
    {
        [JsonProperty("Property972", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property972 { get; set; }
    }

    public partial class Property942
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("OverChargeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OverChargeWeapon { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property942RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property942RackBones
    {
        [JsonProperty("Property978", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property978 { get; set; }
    }

    public partial class Property946
    {
        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property224FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("PrefersPrimaryWeaponTarget", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrefersPrimaryWeaponTarget { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property946RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TargetRestrictOnlyAllow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictOnlyAllow { get; set; }

        [JsonProperty("TargetType", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetType { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property946RackBones
    {
        [JsonProperty("Property974", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property974 { get; set; }
    }

    public partial class Property960
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("ManualFire", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ManualFire { get; set; }

        [JsonProperty("MinRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MinRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("OverChargeWeapon", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OverChargeWeapon { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property960RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? RateOfFire { get; set; }

        [JsonProperty("SlavedToBody", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SlavedToBody { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }

        [JsonProperty("WeaponRepackTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? WeaponRepackTimeout { get; set; }

        [JsonProperty("WeaponUnpacks", NullValueHandling = NullValueHandling.Ignore)]
        public bool? WeaponUnpacks { get; set; }
    }

    public partial class Property960RackBones
    {
        [JsonProperty("Property997", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property997 { get; set; }
    }

    public partial class Property965
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BombardDisable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BombardDisable { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("HeadingArcCenter", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcCenter { get; set; }

        [JsonProperty("HeadingArcRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? HeadingArcRange { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("NotExclusive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotExclusive { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property965RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        public string RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TrackingRadius", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingRadius { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property965RackBones
    {
        [JsonProperty("Property998", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property998 { get; set; }
    }

    public partial class Property972
    {
        [JsonProperty("AboveWaterFireOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterFireOnly { get; set; }

        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("Audio", NullValueHandling = NullValueHandling.Ignore)]
        public Audio Audio { get; set; }

        [JsonProperty("BallisticArc", NullValueHandling = NullValueHandling.Ignore)]
        public string BallisticArc { get; set; }

        [JsonProperty("BeamCollisionDelay", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? BeamCollisionDelay { get; set; }

        [JsonProperty("BeamLifetime", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? BeamLifetime { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        public SelectionMeshScaleX? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public string DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("EnergyChargeForFirstShot", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EnergyChargeForFirstShot { get; set; }

        [JsonProperty("EnergyDrainPerSecond", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyDrainPerSecond { get; set; }

        [JsonProperty("EnergyRequired", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyRequired { get; set; }

        [JsonProperty("FireTargetLayerCapsTable", NullValueHandling = NullValueHandling.Ignore)]
        public Property1007FireTargetLayerCapsTable FireTargetLayerCapsTable { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("ProjectileLifetimeUsesMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectileLifetimeUsesMultiplier { get; set; }

        [JsonProperty("ProjectilesPerOnFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProjectilesPerOnFire { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property972RackBones RackBones { get; set; }

        [JsonProperty("RackFireTogether", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackFireTogether { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RackReloadTimeout", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackReloadTimeout { get; set; }

        [JsonProperty("RackSalvoChargeTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoChargeTime { get; set; }

        [JsonProperty("RackSalvoFiresAfterCharge", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSalvoFiresAfterCharge { get; set; }

        [JsonProperty("RackSalvoReloadTime", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoReloadTime { get; set; }

        [JsonProperty("RackSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackSalvoSize { get; set; }

        [JsonProperty("RackSlavedToTurret", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RackSlavedToTurret { get; set; }

        [JsonProperty("RangeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string RangeCategory { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        public DragCoefficient? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        public RepairRate? TargetCheckInterval { get; set; }

        [JsonProperty("TargetPriorities", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TargetPriorities { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("TurretBoneMuzzle", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneMuzzle { get; set; }

        [JsonProperty("TurretBonePitch", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBonePitch { get; set; }

        [JsonProperty("TurretBoneYaw", NullValueHandling = NullValueHandling.Ignore)]
        public string TurretBoneYaw { get; set; }

        [JsonProperty("TurretDualManipulators", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TurretDualManipulators { get; set; }

        [JsonProperty("TurretPitch", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitch { get; set; }

        [JsonProperty("TurretPitchRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchRange { get; set; }

        [JsonProperty("TurretPitchSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretPitchSpeed { get; set; }

        [JsonProperty("TurretYaw", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYaw { get; set; }

        [JsonProperty("TurretYawRange", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawRange { get; set; }

        [JsonProperty("TurretYawSpeed", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TurretYawSpeed { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("UseFiringSolutionInsteadOfAimBone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseFiringSolutionInsteadOfAimBone { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property972RackBones
    {
        [JsonProperty("Property1009", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1009 { get; set; }
    }

    public partial class Property987
    {
        [JsonProperty("AboveWaterTargetsOnly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AboveWaterTargetsOnly { get; set; }

        [JsonProperty("CollideFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CollideFriendly { get; set; }

        [JsonProperty("Damage", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Damage { get; set; }

        [JsonProperty("DamageFriendly", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DamageFriendly { get; set; }

        [JsonProperty("DamageRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DamageRadius { get; set; }

        [JsonProperty("DamageType", NullValueHandling = NullValueHandling.Ignore)]
        public ArmorType? DamageType { get; set; }

        [JsonProperty("DisplayName", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayName { get; set; }

        [JsonProperty("FireOnDeath", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FireOnDeath { get; set; }

        [JsonProperty("FiringTolerance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? FiringTolerance { get; set; }

        [JsonProperty("Label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("MaxRadius", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MaxRadius { get; set; }

        [JsonProperty("MuzzleSalvoDelay", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoDelay { get; set; }

        [JsonProperty("MuzzleSalvoSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleSalvoSize { get; set; }

        [JsonProperty("MuzzleVelocity", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? MuzzleVelocity { get; set; }

        [JsonProperty("ProjectileId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProjectileId { get; set; }

        [JsonProperty("RackBones", NullValueHandling = NullValueHandling.Ignore)]
        public Property987RackBones RackBones { get; set; }

        [JsonProperty("RackRecoilDistance", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RackRecoilDistance { get; set; }

        [JsonProperty("RateOfFire", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? RateOfFire { get; set; }

        [JsonProperty("TargetCheckInterval", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TargetCheckInterval { get; set; }

        [JsonProperty("TargetRestrictDisallow", NullValueHandling = NullValueHandling.Ignore)]
        public string TargetRestrictDisallow { get; set; }

        [JsonProperty("Turreted", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Turreted { get; set; }

        [JsonProperty("WeaponCategory", NullValueHandling = NullValueHandling.Ignore)]
        public Category? WeaponCategory { get; set; }
    }

    public partial class Property987RackBones
    {
        [JsonProperty("Property1004", NullValueHandling = NullValueHandling.Ignore)]
        public Property1043 Property1004 { get; set; }
    }

    public partial class Wreckage
    {
        [JsonProperty("Blueprint", NullValueHandling = NullValueHandling.Ignore)]
        public Blueprint? Blueprint { get; set; }

        [JsonProperty("EnergyMult", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? EnergyMult { get; set; }

        [JsonProperty("HealthMult", NullValueHandling = NullValueHandling.Ignore)]
        public string HealthMult { get; set; }

        [JsonProperty("MassMult", NullValueHandling = NullValueHandling.Ignore)]
        public MassMult? MassMult { get; set; }

        [JsonProperty("ReclaimTimeMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ReclaimTimeMultiplier { get; set; }

        [JsonProperty("WreckageLayers", NullValueHandling = NullValueHandling.Ignore)]
        public WreckageLayers WreckageLayers { get; set; }

        [JsonProperty("UseCustomMesh", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UseCustomMesh { get; set; }
    }

    public partial class WreckageLayers
    {
        [JsonProperty("Air", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Air { get; set; }

        [JsonProperty("Land", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Land { get; set; }

        [JsonProperty("Seabed", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Seabed { get; set; }

        [JsonProperty("Sub", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sub { get; set; }

        [JsonProperty("Water", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Water { get; set; }

        [JsonProperty("0", NullValueHandling = NullValueHandling.Ignore)]
        public string The0 { get; set; }
    }

    public enum DragCoefficient { The02, The08, The12, The16, The18, The25 };

    public enum Target { Allunits, Mobile, MobileTech1NavalShield, NavalTech3Tech1MobileMobileTech2 };

    public enum SelectionMeshScaleX { Empty, SelectionMeshScaleX04, SelectionMeshScaleX05, SelectionMeshScaleX08, SelectionMeshScaleX11, SelectionMeshScaleX14, SelectionMeshScaleX15, SelectionMeshScaleX16, SelectionMeshScaleX17, SelectionMeshScaleX175, SelectionMeshScaleX1875, SelectionMeshScaleX21, SelectionMeshScaleX22, SelectionMeshScaleX225, SelectionMeshScaleX2296, SelectionMeshScaleX2296875, SelectionMeshScaleX23, SelectionMeshScaleX25, SelectionMeshScaleX2625, SelectionMeshScaleX34, The003, The005, The015, The018, The023625, The03, The035, The04, The045, The047, The05, The06, The065, The07, The08, The08125, The11, The12, The14, The15, The16, The1625, The17, The175, The1875, The19, The21, The22, The225, The2296, The2296875, The23, The24, The25, The2625, The34, The3625, The4375, The475 };

    public enum LodCutoff { UnitMoveLodCutoff, WeaponBigLodCutoff, WeaponLodCutoff };

    public enum Bank { Xgg };

    public enum Cue { ComputerComputerMissileLaunch01351 };

    public enum BlueprintType { UnitBlueprint };

    public enum BuffType { Stun };

    public enum ArmorType { ArmorTypeStructure, Asf, Commander, Experimental, FireBeetle, Light, Normal, Structure, Tmd };

    public enum RepairRate { The01, The035, The12, The14, The18 };

    public enum ImpactEffects { AeonShieldHit01, CybranShieldHit01, SeraphimShieldHit01, UefShieldHit01 };

    public enum ImpactMesh { EffectsEntitiesShieldSection01ShieldSection01BMesh, EffectsEntitiesShieldSection01ShieldSection01Mesh, EffectsEntitiesShieldSection05ShieldSection05Mesh };

    public enum MeshZ { EffectsEntitiesShield01Shield01ZMesh, EffectsEntitiesShield05Shield05ZMesh, EffectsEntitiesShield05StealthShield05StealthzMesh };

    public enum Green { EffectsEmittersLightGreen03_EmitBp };

    public enum Red { EffectsEmittersLightRed03_EmitBp, EffectsEmittersLightRedBlinking02_EmitBp };

    public enum Yellow { EffectsEmittersLightYellow02_EmitBp };

    public enum BuildAttachBone { AttachPoint, Attachpoint, Attachpoint01, BuildAttachPoint, BuildPoint };

    public enum Property55Type { BackWake, Hover02, Hover04, Landing01, Radar01, UnderWater01 };

    public enum LookupName { TexturesEffectsNomadPowerArmorLookupDds, TexturesEnvironmentFalloffSeraphimLookupDds };

    public enum ShaderName { Aeon, AeonCzar, CommandFeedback4, Insect, Metal, NomadsPowerArmor, NomadsUnit, Seraphim, Unit, Wreckage };

    public enum Shader { TMeshAlpha, TMeshGlow };

    public enum TreadTreadMarks { CollosusTread01, CollosusTread02, CommanderPrintAlbedo, UnitsInu0001Inu0001FootprintDds };

    public enum Property118Type { FootFall01 };

    public enum Property209Type { FootFall02 };

    public enum Property100TreadMarks { TankTreads002Albedo, TankTreads006Albedo, TankTreads03Albedo, TankTreads06Albedo, TankTreads07Albedo, TankTreadsAlbedo };

    public enum Albedo { Empty, TarmacsTar12X01_Albedo, TarmacsTar12XAeon01_Albedo, TarmacsTar12XCybran01_Albedo, TarmacsTar12XNomads01_Albedo, TarmacsTar12XSeraphim01_Albedo, TarmacsTar6X01_Albedo, TarmacsTar6XAeon01_Albedo, TarmacsTar6XCybran01_Albedo, TarmacsTar6XNomads01_Albedo, TarmacsTar6XSeraphim01_Albedo, TarmacsTar8X01_Albedo, TarmacsTar8XAeon01_Albedo, TarmacsTar8XCybran01_Albedo, TarmacsTar8XNomads01_Albedo, TarmacsTar8XSeraphim01_Albedo };

    public enum Normal { Empty, TarmacsTar12X01_Normals, TarmacsTar12XAeon01_Normals, TarmacsTar12XCybran01_Normals, TarmacsTar12XNomads01_Normals, TarmacsTar12XSeraphim01_Normals, TarmacsTar6X01_Normals, TarmacsTar6XAeon01_Normals, TarmacsTar6XCybran01_Normals, TarmacsTar6XNomads01_Normals, TarmacsTar6XSeraphim01_Normals, TarmacsTar8X01_Normals, TarmacsTar8XAeon01_Normals, TarmacsTar8XCybran01_Normals, TarmacsTar8XNomads01_Normals, TarmacsTar8XSeraphim01_Normals };

    public enum Display0 { Empty, The0_ };

    public enum SortCategory { Sortconstruction, Sortother, Sortstrategic };

    public enum Slot { Back, Lch, Rch };

    public enum ResourceAllocationIcon { Eras, Isb, Ras };

    public enum Name { LocBack, LocLch, LocRch };

    public enum Category { AntiAir, AntiNavy, Bomber, Civilian, CivilianTruck, Command, Construction, Death, Defense, DirectFire, Economy, Experimental, Factory, Fighter, Gunship, IndirectFire, Intelligence, ResearchTruck, Ship, Strategic, Submarine, Transport, Utility };

    public enum Classification { RuleucCommander, RuleucCounterMeasure, RuleucEngineer, RuleucFactory, RuleucMilitaryAircraft, RuleucMilitaryShip, RuleucMilitarySub, RuleucMilitaryVehicle, RuleucMiscSupport, RuleucResource, RuleucSensor, RuleucWeapon, RuleumtAmphibious };

    public enum FactionName { Aeon, Cybran, FactionNameAeon, Nomads, Seraphim, Uef };

    public enum GeneralIcon { Air, Amph, Land, Sea };

    public enum TechLevel { RuleutlAdvanced, RuleutlBasic, RuleutlExperimental, RuleutlSecret };

    public enum MotionType { RuleumtAir, RuleumtAmphibious, RuleumtAmphibiousFloating, RuleumtHover, RuleumtLand, RuleumtNone, RuleumtSurfacingSub, RuleumtWater };

    public enum BuildRestriction { RuleubrOnHydrocarbonDeposit, RuleubrOnMassDeposit };

    public enum The2_Enum { Empty, UnitBlueprint };

    public enum Air { Air, AirLand, AirLandSeabedWater, AirLandWater, AirLandWaterSeabed, Land, LandSeabedWater, LandWater, LandWaterSeabed, SeabedSubWater, SubWaterSeabed, SubWaterSeabedLand, Water, WaterSeabedSub };

    public enum TargetDisallow { ExperimentalCommand, UnstunableExperimentalCommandShieldWall, UnstunableExperimentalCommandWall, UnstunableTech1ExperimentalCommandShieldWall };

    public enum WeaponCategory { Death, Teleport };

    public enum MassMult { The045, The09, The45 };

    public enum Sub { LandWaterSeabed, SeabedSub, SeabedSubWater, SubWater };

    public enum Blueprint { EnvWreckagePropsWallsUeb5101PropBp, PropsDefaultWreckageDefaultWreckagePropBp };

    public partial struct KMoveDamping
    {
        public DragCoefficient? Enum;
        public long? Integer;

        public static implicit operator KMoveDamping(DragCoefficient Enum) => new KMoveDamping { Enum = Enum };
        public static implicit operator KMoveDamping(long Integer) => new KMoveDamping { Integer = Integer };
    }

    public partial struct CombatTurnSpeed
    {
        public SelectionMeshScaleX? Enum;
        public long? Integer;

        public static implicit operator CombatTurnSpeed(SelectionMeshScaleX Enum) => new CombatTurnSpeed { Enum = Enum };
        public static implicit operator CombatTurnSpeed(long Integer) => new CombatTurnSpeed { Integer = Integer };
    }

    public partial struct EconomyThreatLevel
    {
        public RepairRate? Enum;
        public long? Integer;

        public static implicit operator EconomyThreatLevel(RepairRate Enum) => new EconomyThreatLevel { Enum = Enum };
        public static implicit operator EconomyThreatLevel(long Integer) => new EconomyThreatLevel { Integer = Integer };
    }

    public partial struct FactoryUnion
    {
        public FactoryClass FactoryClass;
        public List<string> StringArray;

        public static implicit operator FactoryUnion(FactoryClass FactoryClass) => new FactoryUnion { FactoryClass = FactoryClass };
        public static implicit operator FactoryUnion(List<string> StringArray) => new FactoryUnion { StringArray = StringArray };
    }

    public partial struct Bone
    {
        public ArmorType? Enum;
        public long? Integer;

        public static implicit operator Bone(ArmorType Enum) => new Bone { Enum = Enum };
        public static implicit operator Bone(long Integer) => new Bone { Integer = Integer };
    }

    public partial struct LandEffectsUnion
    {
        public List<object> AnythingArray;
        public TentacledEffects TentacledEffects;

        public static implicit operator LandEffectsUnion(List<object> AnythingArray) => new LandEffectsUnion { AnythingArray = AnythingArray };
        public static implicit operator LandEffectsUnion(TentacledEffects TentacledEffects) => new LandEffectsUnion { TentacledEffects = TentacledEffects };
    }

    public partial struct WaterEffectsUnion
    {
        public List<object> AnythingArray;
        public IndigoEffects IndigoEffects;

        public static implicit operator WaterEffectsUnion(List<object> AnythingArray) => new WaterEffectsUnion { AnythingArray = AnythingArray };
        public static implicit operator WaterEffectsUnion(IndigoEffects IndigoEffects) => new WaterEffectsUnion { IndigoEffects = IndigoEffects };
    }

    public partial struct IdleEffectsUnion
    {
        public IdleEffectsClass IdleEffectsClass;
        public List<string> StringArray;

        public static implicit operator IdleEffectsUnion(IdleEffectsClass IdleEffectsClass) => new IdleEffectsUnion { IdleEffectsClass = IdleEffectsClass };
        public static implicit operator IdleEffectsUnion(List<string> StringArray) => new IdleEffectsUnion { StringArray = StringArray };
    }

    public partial struct LayerChangeEffectsUnion
    {
        public LayerChangeEffectsClass LayerChangeEffectsClass;
        public List<string> StringArray;

        public static implicit operator LayerChangeEffectsUnion(LayerChangeEffectsClass LayerChangeEffectsClass) => new LayerChangeEffectsUnion { LayerChangeEffectsClass = LayerChangeEffectsClass };
        public static implicit operator LayerChangeEffectsUnion(List<string> StringArray) => new LayerChangeEffectsUnion { StringArray = StringArray };
    }

    public partial struct TreadOffset
    {
        public string String;
        public List<string> StringArray;

        public static implicit operator TreadOffset(string String) => new TreadOffset { String = String };
        public static implicit operator TreadOffset(List<string> StringArray) => new TreadOffset { StringArray = StringArray };
    }

    public partial struct MovementEffectsUnion
    {
        public MovementEffectsClass MovementEffectsClass;
        public List<string> StringArray;

        public static implicit operator MovementEffectsUnion(MovementEffectsClass MovementEffectsClass) => new MovementEffectsUnion { MovementEffectsClass = MovementEffectsClass };
        public static implicit operator MovementEffectsUnion(List<string> StringArray) => new MovementEffectsUnion { StringArray = StringArray };
    }

    public partial struct RateOfFire
    {
        public MassMult? Enum;
        public long? Integer;

        public static implicit operator RateOfFire(MassMult Enum) => new RateOfFire { Enum = Enum };
        public static implicit operator RateOfFire(long Integer) => new RateOfFire { Integer = Integer };
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                The2EnumConverter.Singleton,
                SelectionMeshScaleXConverter.Singleton,
                KMoveDampingConverter.Singleton,
                DragCoefficientConverter.Singleton,
                TargetConverter.Singleton,
                CombatTurnSpeedConverter.Singleton,
                LodCutoffConverter.Singleton,
                BankConverter.Singleton,
                CueConverter.Singleton,
                BlueprintTypeConverter.Singleton,
                BuffTypeConverter.Singleton,
                ArmorTypeConverter.Singleton,
                EconomyThreatLevelConverter.Singleton,
                RepairRateConverter.Singleton,
                ImpactEffectsConverter.Singleton,
                ImpactMeshConverter.Singleton,
                MeshZConverter.Singleton,
                Display0Converter.Singleton,
                GreenConverter.Singleton,
                RedConverter.Singleton,
                YellowConverter.Singleton,
                BuildAttachBoneConverter.Singleton,
                FactoryUnionConverter.Singleton,
                BoneConverter.Singleton,
                Property55TypeConverter.Singleton,
                IdleEffectsUnionConverter.Singleton,
                LandEffectsUnionConverter.Singleton,
                WaterEffectsUnionConverter.Singleton,
                LayerChangeEffectsUnionConverter.Singleton,
                LookupNameConverter.Singleton,
                ShaderNameConverter.Singleton,
                ShaderConverter.Singleton,
                MovementEffectsUnionConverter.Singleton,
                TreadTreadMarksConverter.Singleton,
                Property118TypeConverter.Singleton,
                Property209TypeConverter.Singleton,
                Property100TreadMarksConverter.Singleton,
                TreadOffsetConverter.Singleton,
                AlbedoConverter.Singleton,
                NormalConverter.Singleton,
                SortCategoryConverter.Singleton,
                SlotConverter.Singleton,
                ResourceAllocationIconConverter.Singleton,
                NameConverter.Singleton,
                CategoryConverter.Singleton,
                ClassificationConverter.Singleton,
                FactionNameConverter.Singleton,
                GeneralIconConverter.Singleton,
                TechLevelConverter.Singleton,
                MotionTypeConverter.Singleton,
                BuildRestrictionConverter.Singleton,
                AirConverter.Singleton,
                TargetDisallowConverter.Singleton,
                WeaponCategoryConverter.Singleton,
                MassMultConverter.Singleton,
                RateOfFireConverter.Singleton,
                SubConverter.Singleton,
                BlueprintConverter.Singleton,
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class The2EnumConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(The2_Enum) || t == typeof(The2_Enum?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "":
                    return The2_Enum.Empty;
                case "UnitBlueprint {":
                    return The2_Enum.UnitBlueprint;
            }
            throw new Exception("Cannot unmarshal type The2_Enum");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (The2_Enum)untypedValue;
            switch (value)
            {
                case The2_Enum.Empty:
                    serializer.Serialize(writer, "");
                    return;
                case The2_Enum.UnitBlueprint:
                    serializer.Serialize(writer, "UnitBlueprint {");
                    return;
            }
            throw new Exception("Cannot marshal type The2_Enum");
        }

        public static readonly The2EnumConverter Singleton = new The2EnumConverter();
    }

    internal class ParseStringConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(long) || t == typeof(long?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            long l;
            if (Int64.TryParse(value, out l))
            {
                return l;
            }
            throw new Exception("Cannot unmarshal type long");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (long)untypedValue;
            serializer.Serialize(writer, value.ToString());
            return;
        }

        public static readonly ParseStringConverter Singleton = new ParseStringConverter();
    }

    internal class SelectionMeshScaleXConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(SelectionMeshScaleX) || t == typeof(SelectionMeshScaleX?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "":
                    return SelectionMeshScaleX.Empty;
                case "-0.4":
                    return SelectionMeshScaleX.SelectionMeshScaleX04;
                case "-0.47":
                    return SelectionMeshScaleX.The047;
                case "-0.5":
                    return SelectionMeshScaleX.The05;
                case "-0.7":
                    return SelectionMeshScaleX.The07;
                case "-0.8":
                    return SelectionMeshScaleX.The08;
                case "-1.1":
                    return SelectionMeshScaleX.SelectionMeshScaleX11;
                case "-1.2":
                    return SelectionMeshScaleX.The12;
                case "-1.4":
                    return SelectionMeshScaleX.The14;
                case "-1.5":
                    return SelectionMeshScaleX.SelectionMeshScaleX15;
                case "-1.6":
                    return SelectionMeshScaleX.The16;
                case "-1.7":
                    return SelectionMeshScaleX.The17;
                case "-1.75":
                    return SelectionMeshScaleX.The175;
                case "-1.875":
                    return SelectionMeshScaleX.The1875;
                case "-2.1":
                    return SelectionMeshScaleX.The21;
                case "-2.2":
                    return SelectionMeshScaleX.The22;
                case "-2.25":
                    return SelectionMeshScaleX.The225;
                case "-2.296":
                    return SelectionMeshScaleX.SelectionMeshScaleX2296;
                case "-2.296875":
                    return SelectionMeshScaleX.SelectionMeshScaleX2296875;
                case "-2.3":
                    return SelectionMeshScaleX.The23;
                case "-2.5":
                    return SelectionMeshScaleX.The25;
                case "-2.625":
                    return SelectionMeshScaleX.The2625;
                case "-3.4":
                    return SelectionMeshScaleX.The34;
                case "0.03":
                    return SelectionMeshScaleX.The003;
                case "0.05":
                    return SelectionMeshScaleX.The005;
                case "0.15":
                    return SelectionMeshScaleX.The015;
                case "0.18":
                    return SelectionMeshScaleX.The018;
                case "0.23625":
                    return SelectionMeshScaleX.The023625;
                case "0.3":
                    return SelectionMeshScaleX.The03;
                case "0.35":
                    return SelectionMeshScaleX.The035;
                case "0.4":
                    return SelectionMeshScaleX.The04;
                case "0.45":
                    return SelectionMeshScaleX.The045;
                case "0.5":
                    return SelectionMeshScaleX.SelectionMeshScaleX05;
                case "0.6":
                    return SelectionMeshScaleX.The06;
                case "0.65":
                    return SelectionMeshScaleX.The065;
                case "0.8":
                    return SelectionMeshScaleX.SelectionMeshScaleX08;
                case "0.8125":
                    return SelectionMeshScaleX.The08125;
                case "1.1":
                    return SelectionMeshScaleX.The11;
                case "1.4":
                    return SelectionMeshScaleX.SelectionMeshScaleX14;
                case "1.5":
                    return SelectionMeshScaleX.The15;
                case "1.6":
                    return SelectionMeshScaleX.SelectionMeshScaleX16;
                case "1.625":
                    return SelectionMeshScaleX.The1625;
                case "1.7":
                    return SelectionMeshScaleX.SelectionMeshScaleX17;
                case "1.75":
                    return SelectionMeshScaleX.SelectionMeshScaleX175;
                case "1.875":
                    return SelectionMeshScaleX.SelectionMeshScaleX1875;
                case "1.9":
                    return SelectionMeshScaleX.The19;
                case "2.1":
                    return SelectionMeshScaleX.SelectionMeshScaleX21;
                case "2.2":
                    return SelectionMeshScaleX.SelectionMeshScaleX22;
                case "2.25":
                    return SelectionMeshScaleX.SelectionMeshScaleX225;
                case "2.296":
                    return SelectionMeshScaleX.The2296;
                case "2.296875":
                    return SelectionMeshScaleX.The2296875;
                case "2.3":
                    return SelectionMeshScaleX.SelectionMeshScaleX23;
                case "2.4":
                    return SelectionMeshScaleX.The24;
                case "2.5":
                    return SelectionMeshScaleX.SelectionMeshScaleX25;
                case "2.625":
                    return SelectionMeshScaleX.SelectionMeshScaleX2625;
                case "3.4":
                    return SelectionMeshScaleX.SelectionMeshScaleX34;
                case "3.625":
                    return SelectionMeshScaleX.The3625;
                case "4.375":
                    return SelectionMeshScaleX.The4375;
                case "4.75":
                    return SelectionMeshScaleX.The475;
            }
            throw new Exception("Cannot unmarshal type SelectionMeshScaleX");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (SelectionMeshScaleX)untypedValue;
            switch (value)
            {
                case SelectionMeshScaleX.Empty:
                    serializer.Serialize(writer, "");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX04:
                    serializer.Serialize(writer, "-0.4");
                    return;
                case SelectionMeshScaleX.The047:
                    serializer.Serialize(writer, "-0.47");
                    return;
                case SelectionMeshScaleX.The05:
                    serializer.Serialize(writer, "-0.5");
                    return;
                case SelectionMeshScaleX.The07:
                    serializer.Serialize(writer, "-0.7");
                    return;
                case SelectionMeshScaleX.The08:
                    serializer.Serialize(writer, "-0.8");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX11:
                    serializer.Serialize(writer, "-1.1");
                    return;
                case SelectionMeshScaleX.The12:
                    serializer.Serialize(writer, "-1.2");
                    return;
                case SelectionMeshScaleX.The14:
                    serializer.Serialize(writer, "-1.4");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX15:
                    serializer.Serialize(writer, "-1.5");
                    return;
                case SelectionMeshScaleX.The16:
                    serializer.Serialize(writer, "-1.6");
                    return;
                case SelectionMeshScaleX.The17:
                    serializer.Serialize(writer, "-1.7");
                    return;
                case SelectionMeshScaleX.The175:
                    serializer.Serialize(writer, "-1.75");
                    return;
                case SelectionMeshScaleX.The1875:
                    serializer.Serialize(writer, "-1.875");
                    return;
                case SelectionMeshScaleX.The21:
                    serializer.Serialize(writer, "-2.1");
                    return;
                case SelectionMeshScaleX.The22:
                    serializer.Serialize(writer, "-2.2");
                    return;
                case SelectionMeshScaleX.The225:
                    serializer.Serialize(writer, "-2.25");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX2296:
                    serializer.Serialize(writer, "-2.296");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX2296875:
                    serializer.Serialize(writer, "-2.296875");
                    return;
                case SelectionMeshScaleX.The23:
                    serializer.Serialize(writer, "-2.3");
                    return;
                case SelectionMeshScaleX.The25:
                    serializer.Serialize(writer, "-2.5");
                    return;
                case SelectionMeshScaleX.The2625:
                    serializer.Serialize(writer, "-2.625");
                    return;
                case SelectionMeshScaleX.The34:
                    serializer.Serialize(writer, "-3.4");
                    return;
                case SelectionMeshScaleX.The003:
                    serializer.Serialize(writer, "0.03");
                    return;
                case SelectionMeshScaleX.The005:
                    serializer.Serialize(writer, "0.05");
                    return;
                case SelectionMeshScaleX.The015:
                    serializer.Serialize(writer, "0.15");
                    return;
                case SelectionMeshScaleX.The018:
                    serializer.Serialize(writer, "0.18");
                    return;
                case SelectionMeshScaleX.The023625:
                    serializer.Serialize(writer, "0.23625");
                    return;
                case SelectionMeshScaleX.The03:
                    serializer.Serialize(writer, "0.3");
                    return;
                case SelectionMeshScaleX.The035:
                    serializer.Serialize(writer, "0.35");
                    return;
                case SelectionMeshScaleX.The04:
                    serializer.Serialize(writer, "0.4");
                    return;
                case SelectionMeshScaleX.The045:
                    serializer.Serialize(writer, "0.45");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX05:
                    serializer.Serialize(writer, "0.5");
                    return;
                case SelectionMeshScaleX.The06:
                    serializer.Serialize(writer, "0.6");
                    return;
                case SelectionMeshScaleX.The065:
                    serializer.Serialize(writer, "0.65");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX08:
                    serializer.Serialize(writer, "0.8");
                    return;
                case SelectionMeshScaleX.The08125:
                    serializer.Serialize(writer, "0.8125");
                    return;
                case SelectionMeshScaleX.The11:
                    serializer.Serialize(writer, "1.1");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX14:
                    serializer.Serialize(writer, "1.4");
                    return;
                case SelectionMeshScaleX.The15:
                    serializer.Serialize(writer, "1.5");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX16:
                    serializer.Serialize(writer, "1.6");
                    return;
                case SelectionMeshScaleX.The1625:
                    serializer.Serialize(writer, "1.625");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX17:
                    serializer.Serialize(writer, "1.7");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX175:
                    serializer.Serialize(writer, "1.75");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX1875:
                    serializer.Serialize(writer, "1.875");
                    return;
                case SelectionMeshScaleX.The19:
                    serializer.Serialize(writer, "1.9");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX21:
                    serializer.Serialize(writer, "2.1");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX22:
                    serializer.Serialize(writer, "2.2");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX225:
                    serializer.Serialize(writer, "2.25");
                    return;
                case SelectionMeshScaleX.The2296:
                    serializer.Serialize(writer, "2.296");
                    return;
                case SelectionMeshScaleX.The2296875:
                    serializer.Serialize(writer, "2.296875");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX23:
                    serializer.Serialize(writer, "2.3");
                    return;
                case SelectionMeshScaleX.The24:
                    serializer.Serialize(writer, "2.4");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX25:
                    serializer.Serialize(writer, "2.5");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX2625:
                    serializer.Serialize(writer, "2.625");
                    return;
                case SelectionMeshScaleX.SelectionMeshScaleX34:
                    serializer.Serialize(writer, "3.4");
                    return;
                case SelectionMeshScaleX.The3625:
                    serializer.Serialize(writer, "3.625");
                    return;
                case SelectionMeshScaleX.The4375:
                    serializer.Serialize(writer, "4.375");
                    return;
                case SelectionMeshScaleX.The475:
                    serializer.Serialize(writer, "4.75");
                    return;
            }
            throw new Exception("Cannot marshal type SelectionMeshScaleX");
        }

        public static readonly SelectionMeshScaleXConverter Singleton = new SelectionMeshScaleXConverter();
    }

    internal class KMoveDampingConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(KMoveDamping) || t == typeof(KMoveDamping?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.String:
                case JsonToken.Date:
                    var stringValue = serializer.Deserialize<string>(reader);
                    switch (stringValue)
                    {
                        case "-.25":
                            return new KMoveDamping { Enum = DragCoefficient.The25 };
                        case "0.2":
                            return new KMoveDamping { Enum = DragCoefficient.The02 };
                        case "0.8":
                            return new KMoveDamping { Enum = DragCoefficient.The08 };
                        case "1.2":
                            return new KMoveDamping { Enum = DragCoefficient.The12 };
                        case "1.6":
                            return new KMoveDamping { Enum = DragCoefficient.The16 };
                        case "1.8":
                            return new KMoveDamping { Enum = DragCoefficient.The18 };
                    }
                    long l;
                    if (Int64.TryParse(stringValue, out l))
                    {
                        return new KMoveDamping { Integer = l };
                    }
                    break;
            }
            throw new Exception("Cannot unmarshal type KMoveDamping");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (KMoveDamping)untypedValue;
            if (value.Enum != null)
            {
                switch (value.Enum)
                {
                    case DragCoefficient.The25:
                        serializer.Serialize(writer, "-.25");
                        return;
                    case DragCoefficient.The02:
                        serializer.Serialize(writer, "0.2");
                        return;
                    case DragCoefficient.The08:
                        serializer.Serialize(writer, "0.8");
                        return;
                    case DragCoefficient.The12:
                        serializer.Serialize(writer, "1.2");
                        return;
                    case DragCoefficient.The16:
                        serializer.Serialize(writer, "1.6");
                        return;
                    case DragCoefficient.The18:
                        serializer.Serialize(writer, "1.8");
                        return;
                }
            }
            if (value.Integer != null)
            {
                serializer.Serialize(writer, value.Integer.Value.ToString());
                return;
            }
            throw new Exception("Cannot marshal type KMoveDamping");
        }

        public static readonly KMoveDampingConverter Singleton = new KMoveDampingConverter();
    }

    internal class DragCoefficientConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(DragCoefficient) || t == typeof(DragCoefficient?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "-.25":
                    return DragCoefficient.The25;
                case "0.2":
                    return DragCoefficient.The02;
                case "0.8":
                    return DragCoefficient.The08;
                case "1.2":
                    return DragCoefficient.The12;
                case "1.6":
                    return DragCoefficient.The16;
                case "1.8":
                    return DragCoefficient.The18;
            }
            throw new Exception("Cannot unmarshal type DragCoefficient");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (DragCoefficient)untypedValue;
            switch (value)
            {
                case DragCoefficient.The25:
                    serializer.Serialize(writer, "-.25");
                    return;
                case DragCoefficient.The02:
                    serializer.Serialize(writer, "0.2");
                    return;
                case DragCoefficient.The08:
                    serializer.Serialize(writer, "0.8");
                    return;
                case DragCoefficient.The12:
                    serializer.Serialize(writer, "1.2");
                    return;
                case DragCoefficient.The16:
                    serializer.Serialize(writer, "1.6");
                    return;
                case DragCoefficient.The18:
                    serializer.Serialize(writer, "1.8");
                    return;
            }
            throw new Exception("Cannot marshal type DragCoefficient");
        }

        public static readonly DragCoefficientConverter Singleton = new DragCoefficientConverter();
    }

    internal class TargetConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Target) || t == typeof(Target?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "ALLUNITS":
                    return Target.Allunits;
                case "MOBILE":
                    return Target.Mobile;
                case "MOBILE TECH1 -NAVAL,SHIELD":
                    return Target.MobileTech1NavalShield;
                case "NAVAL -TECH3,TECH1 -MOBILE,MOBILE TECH2":
                    return Target.NavalTech3Tech1MobileMobileTech2;
            }
            throw new Exception("Cannot unmarshal type Target");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Target)untypedValue;
            switch (value)
            {
                case Target.Allunits:
                    serializer.Serialize(writer, "ALLUNITS");
                    return;
                case Target.Mobile:
                    serializer.Serialize(writer, "MOBILE");
                    return;
                case Target.MobileTech1NavalShield:
                    serializer.Serialize(writer, "MOBILE TECH1 -NAVAL,SHIELD");
                    return;
                case Target.NavalTech3Tech1MobileMobileTech2:
                    serializer.Serialize(writer, "NAVAL -TECH3,TECH1 -MOBILE,MOBILE TECH2");
                    return;
            }
            throw new Exception("Cannot marshal type Target");
        }

        public static readonly TargetConverter Singleton = new TargetConverter();
    }

    internal class CombatTurnSpeedConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(CombatTurnSpeed) || t == typeof(CombatTurnSpeed?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.String:
                case JsonToken.Date:
                    var stringValue = serializer.Deserialize<string>(reader);
                    switch (stringValue)
                    {
                        case "":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.Empty };
                        case "-0.4":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX04 };
                        case "-0.47":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The047 };
                        case "-0.5":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The05 };
                        case "-0.7":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The07 };
                        case "-0.8":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The08 };
                        case "-1.1":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX11 };
                        case "-1.2":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The12 };
                        case "-1.4":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The14 };
                        case "-1.5":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX15 };
                        case "-1.6":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The16 };
                        case "-1.7":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The17 };
                        case "-1.75":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The175 };
                        case "-1.875":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The1875 };
                        case "-2.1":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The21 };
                        case "-2.2":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The22 };
                        case "-2.25":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The225 };
                        case "-2.296":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX2296 };
                        case "-2.296875":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX2296875 };
                        case "-2.3":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The23 };
                        case "-2.5":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The25 };
                        case "-2.625":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The2625 };
                        case "-3.4":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The34 };
                        case "0.03":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The003 };
                        case "0.05":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The005 };
                        case "0.15":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The015 };
                        case "0.18":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The018 };
                        case "0.23625":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The023625 };
                        case "0.3":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The03 };
                        case "0.35":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The035 };
                        case "0.4":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The04 };
                        case "0.45":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The045 };
                        case "0.5":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX05 };
                        case "0.6":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The06 };
                        case "0.65":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The065 };
                        case "0.8":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX08 };
                        case "0.8125":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The08125 };
                        case "1.1":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The11 };
                        case "1.4":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX14 };
                        case "1.5":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The15 };
                        case "1.6":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX16 };
                        case "1.625":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The1625 };
                        case "1.7":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX17 };
                        case "1.75":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX175 };
                        case "1.875":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX1875 };
                        case "1.9":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The19 };
                        case "2.1":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX21 };
                        case "2.2":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX22 };
                        case "2.25":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX225 };
                        case "2.296":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The2296 };
                        case "2.296875":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The2296875 };
                        case "2.3":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX23 };
                        case "2.4":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The24 };
                        case "2.5":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX25 };
                        case "2.625":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX2625 };
                        case "3.4":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.SelectionMeshScaleX34 };
                        case "3.625":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The3625 };
                        case "4.375":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The4375 };
                        case "4.75":
                            return new CombatTurnSpeed { Enum = SelectionMeshScaleX.The475 };
                    }
                    long l;
                    if (Int64.TryParse(stringValue, out l))
                    {
                        return new CombatTurnSpeed { Integer = l };
                    }
                    break;
            }
            throw new Exception("Cannot unmarshal type CombatTurnSpeed");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (CombatTurnSpeed)untypedValue;
            if (value.Enum != null)
            {
                switch (value.Enum)
                {
                    case SelectionMeshScaleX.Empty:
                        serializer.Serialize(writer, "");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX04:
                        serializer.Serialize(writer, "-0.4");
                        return;
                    case SelectionMeshScaleX.The047:
                        serializer.Serialize(writer, "-0.47");
                        return;
                    case SelectionMeshScaleX.The05:
                        serializer.Serialize(writer, "-0.5");
                        return;
                    case SelectionMeshScaleX.The07:
                        serializer.Serialize(writer, "-0.7");
                        return;
                    case SelectionMeshScaleX.The08:
                        serializer.Serialize(writer, "-0.8");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX11:
                        serializer.Serialize(writer, "-1.1");
                        return;
                    case SelectionMeshScaleX.The12:
                        serializer.Serialize(writer, "-1.2");
                        return;
                    case SelectionMeshScaleX.The14:
                        serializer.Serialize(writer, "-1.4");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX15:
                        serializer.Serialize(writer, "-1.5");
                        return;
                    case SelectionMeshScaleX.The16:
                        serializer.Serialize(writer, "-1.6");
                        return;
                    case SelectionMeshScaleX.The17:
                        serializer.Serialize(writer, "-1.7");
                        return;
                    case SelectionMeshScaleX.The175:
                        serializer.Serialize(writer, "-1.75");
                        return;
                    case SelectionMeshScaleX.The1875:
                        serializer.Serialize(writer, "-1.875");
                        return;
                    case SelectionMeshScaleX.The21:
                        serializer.Serialize(writer, "-2.1");
                        return;
                    case SelectionMeshScaleX.The22:
                        serializer.Serialize(writer, "-2.2");
                        return;
                    case SelectionMeshScaleX.The225:
                        serializer.Serialize(writer, "-2.25");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX2296:
                        serializer.Serialize(writer, "-2.296");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX2296875:
                        serializer.Serialize(writer, "-2.296875");
                        return;
                    case SelectionMeshScaleX.The23:
                        serializer.Serialize(writer, "-2.3");
                        return;
                    case SelectionMeshScaleX.The25:
                        serializer.Serialize(writer, "-2.5");
                        return;
                    case SelectionMeshScaleX.The2625:
                        serializer.Serialize(writer, "-2.625");
                        return;
                    case SelectionMeshScaleX.The34:
                        serializer.Serialize(writer, "-3.4");
                        return;
                    case SelectionMeshScaleX.The003:
                        serializer.Serialize(writer, "0.03");
                        return;
                    case SelectionMeshScaleX.The005:
                        serializer.Serialize(writer, "0.05");
                        return;
                    case SelectionMeshScaleX.The015:
                        serializer.Serialize(writer, "0.15");
                        return;
                    case SelectionMeshScaleX.The018:
                        serializer.Serialize(writer, "0.18");
                        return;
                    case SelectionMeshScaleX.The023625:
                        serializer.Serialize(writer, "0.23625");
                        return;
                    case SelectionMeshScaleX.The03:
                        serializer.Serialize(writer, "0.3");
                        return;
                    case SelectionMeshScaleX.The035:
                        serializer.Serialize(writer, "0.35");
                        return;
                    case SelectionMeshScaleX.The04:
                        serializer.Serialize(writer, "0.4");
                        return;
                    case SelectionMeshScaleX.The045:
                        serializer.Serialize(writer, "0.45");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX05:
                        serializer.Serialize(writer, "0.5");
                        return;
                    case SelectionMeshScaleX.The06:
                        serializer.Serialize(writer, "0.6");
                        return;
                    case SelectionMeshScaleX.The065:
                        serializer.Serialize(writer, "0.65");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX08:
                        serializer.Serialize(writer, "0.8");
                        return;
                    case SelectionMeshScaleX.The08125:
                        serializer.Serialize(writer, "0.8125");
                        return;
                    case SelectionMeshScaleX.The11:
                        serializer.Serialize(writer, "1.1");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX14:
                        serializer.Serialize(writer, "1.4");
                        return;
                    case SelectionMeshScaleX.The15:
                        serializer.Serialize(writer, "1.5");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX16:
                        serializer.Serialize(writer, "1.6");
                        return;
                    case SelectionMeshScaleX.The1625:
                        serializer.Serialize(writer, "1.625");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX17:
                        serializer.Serialize(writer, "1.7");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX175:
                        serializer.Serialize(writer, "1.75");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX1875:
                        serializer.Serialize(writer, "1.875");
                        return;
                    case SelectionMeshScaleX.The19:
                        serializer.Serialize(writer, "1.9");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX21:
                        serializer.Serialize(writer, "2.1");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX22:
                        serializer.Serialize(writer, "2.2");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX225:
                        serializer.Serialize(writer, "2.25");
                        return;
                    case SelectionMeshScaleX.The2296:
                        serializer.Serialize(writer, "2.296");
                        return;
                    case SelectionMeshScaleX.The2296875:
                        serializer.Serialize(writer, "2.296875");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX23:
                        serializer.Serialize(writer, "2.3");
                        return;
                    case SelectionMeshScaleX.The24:
                        serializer.Serialize(writer, "2.4");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX25:
                        serializer.Serialize(writer, "2.5");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX2625:
                        serializer.Serialize(writer, "2.625");
                        return;
                    case SelectionMeshScaleX.SelectionMeshScaleX34:
                        serializer.Serialize(writer, "3.4");
                        return;
                    case SelectionMeshScaleX.The3625:
                        serializer.Serialize(writer, "3.625");
                        return;
                    case SelectionMeshScaleX.The4375:
                        serializer.Serialize(writer, "4.375");
                        return;
                    case SelectionMeshScaleX.The475:
                        serializer.Serialize(writer, "4.75");
                        return;
                }
            }
            if (value.Integer != null)
            {
                serializer.Serialize(writer, value.Integer.Value.ToString());
                return;
            }
            throw new Exception("Cannot marshal type CombatTurnSpeed");
        }

        public static readonly CombatTurnSpeedConverter Singleton = new CombatTurnSpeedConverter();
    }

    internal class LodCutoffConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(LodCutoff) || t == typeof(LodCutoff?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "UnitMove_LodCutoff":
                    return LodCutoff.UnitMoveLodCutoff;
                case "WeaponBig_LodCutoff":
                    return LodCutoff.WeaponBigLodCutoff;
                case "Weapon_LodCutoff":
                    return LodCutoff.WeaponLodCutoff;
            }
            throw new Exception("Cannot unmarshal type LodCutoff");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (LodCutoff)untypedValue;
            switch (value)
            {
                case LodCutoff.UnitMoveLodCutoff:
                    serializer.Serialize(writer, "UnitMove_LodCutoff");
                    return;
                case LodCutoff.WeaponBigLodCutoff:
                    serializer.Serialize(writer, "WeaponBig_LodCutoff");
                    return;
                case LodCutoff.WeaponLodCutoff:
                    serializer.Serialize(writer, "Weapon_LodCutoff");
                    return;
            }
            throw new Exception("Cannot marshal type LodCutoff");
        }

        public static readonly LodCutoffConverter Singleton = new LodCutoffConverter();
    }

    internal class BankConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Bank) || t == typeof(Bank?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            if (value == "XGG")
            {
                return Bank.Xgg;
            }
            throw new Exception("Cannot unmarshal type Bank");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Bank)untypedValue;
            if (value == Bank.Xgg)
            {
                serializer.Serialize(writer, "XGG");
                return;
            }
            throw new Exception("Cannot marshal type Bank");
        }

        public static readonly BankConverter Singleton = new BankConverter();
    }

    internal class CueConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Cue) || t == typeof(Cue?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            if (value == "Computer_Computer_MissileLaunch_01351")
            {
                return Cue.ComputerComputerMissileLaunch01351;
            }
            throw new Exception("Cannot unmarshal type Cue");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Cue)untypedValue;
            if (value == Cue.ComputerComputerMissileLaunch01351)
            {
                serializer.Serialize(writer, "Computer_Computer_MissileLaunch_01351");
                return;
            }
            throw new Exception("Cannot marshal type Cue");
        }

        public static readonly CueConverter Singleton = new CueConverter();
    }

    internal class BlueprintTypeConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(BlueprintType) || t == typeof(BlueprintType?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            if (value == "UnitBlueprint")
            {
                return BlueprintType.UnitBlueprint;
            }
            throw new Exception("Cannot unmarshal type BlueprintType");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (BlueprintType)untypedValue;
            if (value == BlueprintType.UnitBlueprint)
            {
                serializer.Serialize(writer, "UnitBlueprint");
                return;
            }
            throw new Exception("Cannot marshal type BlueprintType");
        }

        public static readonly BlueprintTypeConverter Singleton = new BlueprintTypeConverter();
    }

    internal class BuffTypeConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(BuffType) || t == typeof(BuffType?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            if (value == "STUN")
            {
                return BuffType.Stun;
            }
            throw new Exception("Cannot unmarshal type BuffType");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (BuffType)untypedValue;
            if (value == BuffType.Stun)
            {
                serializer.Serialize(writer, "STUN");
                return;
            }
            throw new Exception("Cannot marshal type BuffType");
        }

        public static readonly BuffTypeConverter Singleton = new BuffTypeConverter();
    }

    internal class ArmorTypeConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(ArmorType) || t == typeof(ArmorType?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "ASF":
                    return ArmorType.Asf;
                case "Commander":
                    return ArmorType.Commander;
                case "Experimental":
                    return ArmorType.Experimental;
                case "FireBeetle":
                    return ArmorType.FireBeetle;
                case "Light":
                    return ArmorType.Light;
                case "Normal":
                    return ArmorType.Normal;
                case "STRUCTURE":
                    return ArmorType.ArmorTypeStructure;
                case "Structure":
                    return ArmorType.Structure;
                case "TMD":
                    return ArmorType.Tmd;
            }
            throw new Exception("Cannot unmarshal type ArmorType");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (ArmorType)untypedValue;
            switch (value)
            {
                case ArmorType.Asf:
                    serializer.Serialize(writer, "ASF");
                    return;
                case ArmorType.Commander:
                    serializer.Serialize(writer, "Commander");
                    return;
                case ArmorType.Experimental:
                    serializer.Serialize(writer, "Experimental");
                    return;
                case ArmorType.FireBeetle:
                    serializer.Serialize(writer, "FireBeetle");
                    return;
                case ArmorType.Light:
                    serializer.Serialize(writer, "Light");
                    return;
                case ArmorType.Normal:
                    serializer.Serialize(writer, "Normal");
                    return;
                case ArmorType.ArmorTypeStructure:
                    serializer.Serialize(writer, "STRUCTURE");
                    return;
                case ArmorType.Structure:
                    serializer.Serialize(writer, "Structure");
                    return;
                case ArmorType.Tmd:
                    serializer.Serialize(writer, "TMD");
                    return;
            }
            throw new Exception("Cannot marshal type ArmorType");
        }

        public static readonly ArmorTypeConverter Singleton = new ArmorTypeConverter();
    }

    internal class EconomyThreatLevelConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(EconomyThreatLevel) || t == typeof(EconomyThreatLevel?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.String:
                case JsonToken.Date:
                    var stringValue = serializer.Deserialize<string>(reader);
                    switch (stringValue)
                    {
                        case "- 12":
                            return new EconomyThreatLevel { Enum = RepairRate.The12 };
                        case "- 14":
                            return new EconomyThreatLevel { Enum = RepairRate.The14 };
                        case "-1.8":
                            return new EconomyThreatLevel { Enum = RepairRate.The18 };
                        case "0.1":
                            return new EconomyThreatLevel { Enum = RepairRate.The01 };
                        case "0.35":
                            return new EconomyThreatLevel { Enum = RepairRate.The035 };
                    }
                    long l;
                    if (Int64.TryParse(stringValue, out l))
                    {
                        return new EconomyThreatLevel { Integer = l };
                    }
                    break;
            }
            throw new Exception("Cannot unmarshal type EconomyThreatLevel");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (EconomyThreatLevel)untypedValue;
            if (value.Enum != null)
            {
                switch (value.Enum)
                {
                    case RepairRate.The12:
                        serializer.Serialize(writer, "- 12");
                        return;
                    case RepairRate.The14:
                        serializer.Serialize(writer, "- 14");
                        return;
                    case RepairRate.The18:
                        serializer.Serialize(writer, "-1.8");
                        return;
                    case RepairRate.The01:
                        serializer.Serialize(writer, "0.1");
                        return;
                    case RepairRate.The035:
                        serializer.Serialize(writer, "0.35");
                        return;
                }
            }
            if (value.Integer != null)
            {
                serializer.Serialize(writer, value.Integer.Value.ToString());
                return;
            }
            throw new Exception("Cannot marshal type EconomyThreatLevel");
        }

        public static readonly EconomyThreatLevelConverter Singleton = new EconomyThreatLevelConverter();
    }

    internal class RepairRateConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(RepairRate) || t == typeof(RepairRate?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "- 12":
                    return RepairRate.The12;
                case "- 14":
                    return RepairRate.The14;
                case "-1.8":
                    return RepairRate.The18;
                case "0.1":
                    return RepairRate.The01;
                case "0.35":
                    return RepairRate.The035;
            }
            throw new Exception("Cannot unmarshal type RepairRate");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (RepairRate)untypedValue;
            switch (value)
            {
                case RepairRate.The12:
                    serializer.Serialize(writer, "- 12");
                    return;
                case RepairRate.The14:
                    serializer.Serialize(writer, "- 14");
                    return;
                case RepairRate.The18:
                    serializer.Serialize(writer, "-1.8");
                    return;
                case RepairRate.The01:
                    serializer.Serialize(writer, "0.1");
                    return;
                case RepairRate.The035:
                    serializer.Serialize(writer, "0.35");
                    return;
            }
            throw new Exception("Cannot marshal type RepairRate");
        }

        public static readonly RepairRateConverter Singleton = new RepairRateConverter();
    }

    internal class ImpactEffectsConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(ImpactEffects) || t == typeof(ImpactEffects?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "AeonShieldHit01":
                    return ImpactEffects.AeonShieldHit01;
                case "CybranShieldHit01":
                    return ImpactEffects.CybranShieldHit01;
                case "SeraphimShieldHit01":
                    return ImpactEffects.SeraphimShieldHit01;
                case "UEFShieldHit01":
                    return ImpactEffects.UefShieldHit01;
            }
            throw new Exception("Cannot unmarshal type ImpactEffects");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (ImpactEffects)untypedValue;
            switch (value)
            {
                case ImpactEffects.AeonShieldHit01:
                    serializer.Serialize(writer, "AeonShieldHit01");
                    return;
                case ImpactEffects.CybranShieldHit01:
                    serializer.Serialize(writer, "CybranShieldHit01");
                    return;
                case ImpactEffects.SeraphimShieldHit01:
                    serializer.Serialize(writer, "SeraphimShieldHit01");
                    return;
                case ImpactEffects.UefShieldHit01:
                    serializer.Serialize(writer, "UEFShieldHit01");
                    return;
            }
            throw new Exception("Cannot marshal type ImpactEffects");
        }

        public static readonly ImpactEffectsConverter Singleton = new ImpactEffectsConverter();
    }

    internal class ImpactMeshConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(ImpactMesh) || t == typeof(ImpactMesh?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "/effects/Entities/ShieldSection05/ShieldSection05_mesh":
                    return ImpactMesh.EffectsEntitiesShieldSection05ShieldSection05Mesh;
                case "/effects/entities/ShieldSection01/ShieldSection01_mesh":
                    return ImpactMesh.EffectsEntitiesShieldSection01ShieldSection01Mesh;
                case "/effects/entities/ShieldSection01/ShieldSection01b_mesh":
                    return ImpactMesh.EffectsEntitiesShieldSection01ShieldSection01BMesh;
            }
            throw new Exception("Cannot unmarshal type ImpactMesh");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (ImpactMesh)untypedValue;
            switch (value)
            {
                case ImpactMesh.EffectsEntitiesShieldSection05ShieldSection05Mesh:
                    serializer.Serialize(writer, "/effects/Entities/ShieldSection05/ShieldSection05_mesh");
                    return;
                case ImpactMesh.EffectsEntitiesShieldSection01ShieldSection01Mesh:
                    serializer.Serialize(writer, "/effects/entities/ShieldSection01/ShieldSection01_mesh");
                    return;
                case ImpactMesh.EffectsEntitiesShieldSection01ShieldSection01BMesh:
                    serializer.Serialize(writer, "/effects/entities/ShieldSection01/ShieldSection01b_mesh");
                    return;
            }
            throw new Exception("Cannot marshal type ImpactMesh");
        }

        public static readonly ImpactMeshConverter Singleton = new ImpactMeshConverter();
    }

    internal class MeshZConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(MeshZ) || t == typeof(MeshZ?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "/effects/Entities/Shield05/Shield05z_mesh":
                    return MeshZ.EffectsEntitiesShield05Shield05ZMesh;
                case "/effects/Entities/Shield05_stealth/Shield05_stealthz_mesh":
                    return MeshZ.EffectsEntitiesShield05StealthShield05StealthzMesh;
                case "/effects/entities/Shield01/Shield01z_mesh":
                    return MeshZ.EffectsEntitiesShield01Shield01ZMesh;
            }
            throw new Exception("Cannot unmarshal type MeshZ");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (MeshZ)untypedValue;
            switch (value)
            {
                case MeshZ.EffectsEntitiesShield05Shield05ZMesh:
                    serializer.Serialize(writer, "/effects/Entities/Shield05/Shield05z_mesh");
                    return;
                case MeshZ.EffectsEntitiesShield05StealthShield05StealthzMesh:
                    serializer.Serialize(writer, "/effects/Entities/Shield05_stealth/Shield05_stealthz_mesh");
                    return;
                case MeshZ.EffectsEntitiesShield01Shield01ZMesh:
                    serializer.Serialize(writer, "/effects/entities/Shield01/Shield01z_mesh");
                    return;
            }
            throw new Exception("Cannot marshal type MeshZ");
        }

        public static readonly MeshZConverter Singleton = new MeshZConverter();
    }

    internal class Display0Converter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Display0) || t == typeof(Display0?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "":
                    return Display0.Empty;
                case "},]]":
                    return Display0.The0_;
            }
            throw new Exception("Cannot unmarshal type Display0");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Display0)untypedValue;
            switch (value)
            {
                case Display0.Empty:
                    serializer.Serialize(writer, "");
                    return;
                case Display0.The0_:
                    serializer.Serialize(writer, "},]]");
                    return;
            }
            throw new Exception("Cannot marshal type Display0");
        }

        public static readonly Display0Converter Singleton = new Display0Converter();
    }

    internal class GreenConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Green) || t == typeof(Green?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            if (value == "/effects/emitters/light_green_03_emit.bp")
            {
                return Green.EffectsEmittersLightGreen03_EmitBp;
            }
            throw new Exception("Cannot unmarshal type Green");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Green)untypedValue;
            if (value == Green.EffectsEmittersLightGreen03_EmitBp)
            {
                serializer.Serialize(writer, "/effects/emitters/light_green_03_emit.bp");
                return;
            }
            throw new Exception("Cannot marshal type Green");
        }

        public static readonly GreenConverter Singleton = new GreenConverter();
    }

    internal class RedConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Red) || t == typeof(Red?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "/effects/emitters/light_red_03_emit.bp":
                    return Red.EffectsEmittersLightRed03_EmitBp;
                case "/effects/emitters/light_red_blinking_02_emit.bp":
                    return Red.EffectsEmittersLightRedBlinking02_EmitBp;
            }
            throw new Exception("Cannot unmarshal type Red");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Red)untypedValue;
            switch (value)
            {
                case Red.EffectsEmittersLightRed03_EmitBp:
                    serializer.Serialize(writer, "/effects/emitters/light_red_03_emit.bp");
                    return;
                case Red.EffectsEmittersLightRedBlinking02_EmitBp:
                    serializer.Serialize(writer, "/effects/emitters/light_red_blinking_02_emit.bp");
                    return;
            }
            throw new Exception("Cannot marshal type Red");
        }

        public static readonly RedConverter Singleton = new RedConverter();
    }

    internal class YellowConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Yellow) || t == typeof(Yellow?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            if (value == "/effects/emitters/light_yellow_02_emit.bp")
            {
                return Yellow.EffectsEmittersLightYellow02_EmitBp;
            }
            throw new Exception("Cannot unmarshal type Yellow");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Yellow)untypedValue;
            if (value == Yellow.EffectsEmittersLightYellow02_EmitBp)
            {
                serializer.Serialize(writer, "/effects/emitters/light_yellow_02_emit.bp");
                return;
            }
            throw new Exception("Cannot marshal type Yellow");
        }

        public static readonly YellowConverter Singleton = new YellowConverter();
    }

    internal class BuildAttachBoneConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(BuildAttachBone) || t == typeof(BuildAttachBone?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "AttachPoint":
                    return BuildAttachBone.AttachPoint;
                case "Attachpoint":
                    return BuildAttachBone.Attachpoint;
                case "Attachpoint01":
                    return BuildAttachBone.Attachpoint01;
                case "BuildAttachPoint":
                    return BuildAttachBone.BuildAttachPoint;
                case "Build_Point":
                    return BuildAttachBone.BuildPoint;
            }
            throw new Exception("Cannot unmarshal type BuildAttachBone");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (BuildAttachBone)untypedValue;
            switch (value)
            {
                case BuildAttachBone.AttachPoint:
                    serializer.Serialize(writer, "AttachPoint");
                    return;
                case BuildAttachBone.Attachpoint:
                    serializer.Serialize(writer, "Attachpoint");
                    return;
                case BuildAttachBone.Attachpoint01:
                    serializer.Serialize(writer, "Attachpoint01");
                    return;
                case BuildAttachBone.BuildAttachPoint:
                    serializer.Serialize(writer, "BuildAttachPoint");
                    return;
                case BuildAttachBone.BuildPoint:
                    serializer.Serialize(writer, "Build_Point");
                    return;
            }
            throw new Exception("Cannot marshal type BuildAttachBone");
        }

        public static readonly BuildAttachBoneConverter Singleton = new BuildAttachBoneConverter();
    }

    internal class FactoryUnionConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(FactoryUnion) || t == typeof(FactoryUnion?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.StartObject:
                    var objectValue = serializer.Deserialize<FactoryClass>(reader);
                    return new FactoryUnion { FactoryClass = objectValue };
                case JsonToken.StartArray:
                    var arrayValue = serializer.Deserialize<List<string>>(reader);
                    return new FactoryUnion { StringArray = arrayValue };
            }
            throw new Exception("Cannot unmarshal type FactoryUnion");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (FactoryUnion)untypedValue;
            if (value.StringArray != null)
            {
                serializer.Serialize(writer, value.StringArray);
                return;
            }
            if (value.FactoryClass != null)
            {
                serializer.Serialize(writer, value.FactoryClass);
                return;
            }
            throw new Exception("Cannot marshal type FactoryUnion");
        }

        public static readonly FactoryUnionConverter Singleton = new FactoryUnionConverter();
    }

    internal class BoneConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Bone) || t == typeof(Bone?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.String:
                case JsonToken.Date:
                    var stringValue = serializer.Deserialize<string>(reader);
                    switch (stringValue)
                    {
                        case "ASF":
                            return new Bone { Enum = ArmorType.Asf };
                        case "Commander":
                            return new Bone { Enum = ArmorType.Commander };
                        case "Experimental":
                            return new Bone { Enum = ArmorType.Experimental };
                        case "FireBeetle":
                            return new Bone { Enum = ArmorType.FireBeetle };
                        case "Light":
                            return new Bone { Enum = ArmorType.Light };
                        case "Normal":
                            return new Bone { Enum = ArmorType.Normal };
                        case "STRUCTURE":
                            return new Bone { Enum = ArmorType.ArmorTypeStructure };
                        case "Structure":
                            return new Bone { Enum = ArmorType.Structure };
                        case "TMD":
                            return new Bone { Enum = ArmorType.Tmd };
                    }
                    long l;
                    if (Int64.TryParse(stringValue, out l))
                    {
                        return new Bone { Integer = l };
                    }
                    break;
            }
            throw new Exception("Cannot unmarshal type Bone");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (Bone)untypedValue;
            if (value.Enum != null)
            {
                switch (value.Enum)
                {
                    case ArmorType.Asf:
                        serializer.Serialize(writer, "ASF");
                        return;
                    case ArmorType.Commander:
                        serializer.Serialize(writer, "Commander");
                        return;
                    case ArmorType.Experimental:
                        serializer.Serialize(writer, "Experimental");
                        return;
                    case ArmorType.FireBeetle:
                        serializer.Serialize(writer, "FireBeetle");
                        return;
                    case ArmorType.Light:
                        serializer.Serialize(writer, "Light");
                        return;
                    case ArmorType.Normal:
                        serializer.Serialize(writer, "Normal");
                        return;
                    case ArmorType.ArmorTypeStructure:
                        serializer.Serialize(writer, "STRUCTURE");
                        return;
                    case ArmorType.Structure:
                        serializer.Serialize(writer, "Structure");
                        return;
                    case ArmorType.Tmd:
                        serializer.Serialize(writer, "TMD");
                        return;
                }
            }
            if (value.Integer != null)
            {
                serializer.Serialize(writer, value.Integer.Value.ToString());
                return;
            }
            throw new Exception("Cannot marshal type Bone");
        }

        public static readonly BoneConverter Singleton = new BoneConverter();
    }

    internal class Property55TypeConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Property55Type) || t == typeof(Property55Type?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "BackWake":
                    return Property55Type.BackWake;
                case "Hover02":
                    return Property55Type.Hover02;
                case "Hover04":
                    return Property55Type.Hover04;
                case "Landing01":
                    return Property55Type.Landing01;
                case "Radar01":
                    return Property55Type.Radar01;
                case "UnderWater01":
                    return Property55Type.UnderWater01;
            }
            throw new Exception("Cannot unmarshal type Property55Type");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Property55Type)untypedValue;
            switch (value)
            {
                case Property55Type.BackWake:
                    serializer.Serialize(writer, "BackWake");
                    return;
                case Property55Type.Hover02:
                    serializer.Serialize(writer, "Hover02");
                    return;
                case Property55Type.Hover04:
                    serializer.Serialize(writer, "Hover04");
                    return;
                case Property55Type.Landing01:
                    serializer.Serialize(writer, "Landing01");
                    return;
                case Property55Type.Radar01:
                    serializer.Serialize(writer, "Radar01");
                    return;
                case Property55Type.UnderWater01:
                    serializer.Serialize(writer, "UnderWater01");
                    return;
            }
            throw new Exception("Cannot marshal type Property55Type");
        }

        public static readonly Property55TypeConverter Singleton = new Property55TypeConverter();
    }

    internal class IdleEffectsUnionConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(IdleEffectsUnion) || t == typeof(IdleEffectsUnion?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.StartObject:
                    var objectValue = serializer.Deserialize<IdleEffectsClass>(reader);
                    return new IdleEffectsUnion { IdleEffectsClass = objectValue };
                case JsonToken.StartArray:
                    var arrayValue = serializer.Deserialize<List<string>>(reader);
                    return new IdleEffectsUnion { StringArray = arrayValue };
            }
            throw new Exception("Cannot unmarshal type IdleEffectsUnion");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (IdleEffectsUnion)untypedValue;
            if (value.StringArray != null)
            {
                serializer.Serialize(writer, value.StringArray);
                return;
            }
            if (value.IdleEffectsClass != null)
            {
                serializer.Serialize(writer, value.IdleEffectsClass);
                return;
            }
            throw new Exception("Cannot marshal type IdleEffectsUnion");
        }

        public static readonly IdleEffectsUnionConverter Singleton = new IdleEffectsUnionConverter();
    }

    internal class LandEffectsUnionConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(LandEffectsUnion) || t == typeof(LandEffectsUnion?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.StartObject:
                    var objectValue = serializer.Deserialize<TentacledEffects>(reader);
                    return new LandEffectsUnion { TentacledEffects = objectValue };
                case JsonToken.StartArray:
                    var arrayValue = serializer.Deserialize<List<object>>(reader);
                    return new LandEffectsUnion { AnythingArray = arrayValue };
            }
            throw new Exception("Cannot unmarshal type LandEffectsUnion");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (LandEffectsUnion)untypedValue;
            if (value.AnythingArray != null)
            {
                serializer.Serialize(writer, value.AnythingArray);
                return;
            }
            if (value.TentacledEffects != null)
            {
                serializer.Serialize(writer, value.TentacledEffects);
                return;
            }
            throw new Exception("Cannot marshal type LandEffectsUnion");
        }

        public static readonly LandEffectsUnionConverter Singleton = new LandEffectsUnionConverter();
    }

    internal class WaterEffectsUnionConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(WaterEffectsUnion) || t == typeof(WaterEffectsUnion?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.StartObject:
                    var objectValue = serializer.Deserialize<IndigoEffects>(reader);
                    return new WaterEffectsUnion { IndigoEffects = objectValue };
                case JsonToken.StartArray:
                    var arrayValue = serializer.Deserialize<List<object>>(reader);
                    return new WaterEffectsUnion { AnythingArray = arrayValue };
            }
            throw new Exception("Cannot unmarshal type WaterEffectsUnion");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (WaterEffectsUnion)untypedValue;
            if (value.AnythingArray != null)
            {
                serializer.Serialize(writer, value.AnythingArray);
                return;
            }
            if (value.IndigoEffects != null)
            {
                serializer.Serialize(writer, value.IndigoEffects);
                return;
            }
            throw new Exception("Cannot marshal type WaterEffectsUnion");
        }

        public static readonly WaterEffectsUnionConverter Singleton = new WaterEffectsUnionConverter();
    }

    internal class LayerChangeEffectsUnionConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(LayerChangeEffectsUnion) || t == typeof(LayerChangeEffectsUnion?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.StartObject:
                    var objectValue = serializer.Deserialize<LayerChangeEffectsClass>(reader);
                    return new LayerChangeEffectsUnion { LayerChangeEffectsClass = objectValue };
                case JsonToken.StartArray:
                    var arrayValue = serializer.Deserialize<List<string>>(reader);
                    return new LayerChangeEffectsUnion { StringArray = arrayValue };
            }
            throw new Exception("Cannot unmarshal type LayerChangeEffectsUnion");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (LayerChangeEffectsUnion)untypedValue;
            if (value.StringArray != null)
            {
                serializer.Serialize(writer, value.StringArray);
                return;
            }
            if (value.LayerChangeEffectsClass != null)
            {
                serializer.Serialize(writer, value.LayerChangeEffectsClass);
                return;
            }
            throw new Exception("Cannot marshal type LayerChangeEffectsUnion");
        }

        public static readonly LayerChangeEffectsUnionConverter Singleton = new LayerChangeEffectsUnionConverter();
    }

    internal class LookupNameConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(LookupName) || t == typeof(LookupName?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "/textures/effects/NomadPowerArmorLookup.dds":
                    return LookupName.TexturesEffectsNomadPowerArmorLookupDds;
                case "/textures/environment/Falloff_seraphim_lookup.dds":
                    return LookupName.TexturesEnvironmentFalloffSeraphimLookupDds;
            }
            throw new Exception("Cannot unmarshal type LookupName");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (LookupName)untypedValue;
            switch (value)
            {
                case LookupName.TexturesEffectsNomadPowerArmorLookupDds:
                    serializer.Serialize(writer, "/textures/effects/NomadPowerArmorLookup.dds");
                    return;
                case LookupName.TexturesEnvironmentFalloffSeraphimLookupDds:
                    serializer.Serialize(writer, "/textures/environment/Falloff_seraphim_lookup.dds");
                    return;
            }
            throw new Exception("Cannot marshal type LookupName");
        }

        public static readonly LookupNameConverter Singleton = new LookupNameConverter();
    }

    internal class ShaderNameConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(ShaderName) || t == typeof(ShaderName?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "Aeon":
                    return ShaderName.Aeon;
                case "AeonCZAR":
                    return ShaderName.AeonCzar;
                case "CommandFeedback4":
                    return ShaderName.CommandFeedback4;
                case "Insect":
                    return ShaderName.Insect;
                case "Metal":
                    return ShaderName.Metal;
                case "NomadsPowerArmor":
                    return ShaderName.NomadsPowerArmor;
                case "NomadsUnit":
                    return ShaderName.NomadsUnit;
                case "Seraphim":
                    return ShaderName.Seraphim;
                case "Unit":
                    return ShaderName.Unit;
                case "Wreckage":
                    return ShaderName.Wreckage;
            }
            throw new Exception("Cannot unmarshal type ShaderName");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (ShaderName)untypedValue;
            switch (value)
            {
                case ShaderName.Aeon:
                    serializer.Serialize(writer, "Aeon");
                    return;
                case ShaderName.AeonCzar:
                    serializer.Serialize(writer, "AeonCZAR");
                    return;
                case ShaderName.CommandFeedback4:
                    serializer.Serialize(writer, "CommandFeedback4");
                    return;
                case ShaderName.Insect:
                    serializer.Serialize(writer, "Insect");
                    return;
                case ShaderName.Metal:
                    serializer.Serialize(writer, "Metal");
                    return;
                case ShaderName.NomadsPowerArmor:
                    serializer.Serialize(writer, "NomadsPowerArmor");
                    return;
                case ShaderName.NomadsUnit:
                    serializer.Serialize(writer, "NomadsUnit");
                    return;
                case ShaderName.Seraphim:
                    serializer.Serialize(writer, "Seraphim");
                    return;
                case ShaderName.Unit:
                    serializer.Serialize(writer, "Unit");
                    return;
                case ShaderName.Wreckage:
                    serializer.Serialize(writer, "Wreckage");
                    return;
            }
            throw new Exception("Cannot marshal type ShaderName");
        }

        public static readonly ShaderNameConverter Singleton = new ShaderNameConverter();
    }

    internal class ShaderConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Shader) || t == typeof(Shader?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "TMeshAlpha":
                    return Shader.TMeshAlpha;
                case "TMeshGlow":
                    return Shader.TMeshGlow;
            }
            throw new Exception("Cannot unmarshal type Shader");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Shader)untypedValue;
            switch (value)
            {
                case Shader.TMeshAlpha:
                    serializer.Serialize(writer, "TMeshAlpha");
                    return;
                case Shader.TMeshGlow:
                    serializer.Serialize(writer, "TMeshGlow");
                    return;
            }
            throw new Exception("Cannot marshal type Shader");
        }

        public static readonly ShaderConverter Singleton = new ShaderConverter();
    }

    internal class MovementEffectsUnionConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(MovementEffectsUnion) || t == typeof(MovementEffectsUnion?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.StartObject:
                    var objectValue = serializer.Deserialize<MovementEffectsClass>(reader);
                    return new MovementEffectsUnion { MovementEffectsClass = objectValue };
                case JsonToken.StartArray:
                    var arrayValue = serializer.Deserialize<List<string>>(reader);
                    return new MovementEffectsUnion { StringArray = arrayValue };
            }
            throw new Exception("Cannot unmarshal type MovementEffectsUnion");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (MovementEffectsUnion)untypedValue;
            if (value.StringArray != null)
            {
                serializer.Serialize(writer, value.StringArray);
                return;
            }
            if (value.MovementEffectsClass != null)
            {
                serializer.Serialize(writer, value.MovementEffectsClass);
                return;
            }
            throw new Exception("Cannot marshal type MovementEffectsUnion");
        }

        public static readonly MovementEffectsUnionConverter Singleton = new MovementEffectsUnionConverter();
    }

    internal class DecodeArrayConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(List<long>);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            reader.Read();
            var value = new List<long>();
            while (reader.TokenType != JsonToken.EndArray)
            {
                var converter = ParseStringConverter.Singleton;
                var arrayItem = (long)converter.ReadJson(reader, typeof(long), null, serializer);
                value.Add(arrayItem);
                reader.Read();
            }
            return value;
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (List<long>)untypedValue;
            writer.WriteStartArray();
            foreach (var arrayItem in value)
            {
                var converter = ParseStringConverter.Singleton;
                converter.WriteJson(writer, arrayItem, serializer);
            }
            writer.WriteEndArray();
            return;
        }

        public static readonly DecodeArrayConverter Singleton = new DecodeArrayConverter();
    }

    internal class TreadTreadMarksConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(TreadTreadMarks) || t == typeof(TreadTreadMarks?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "/units/INU0001/INU0001_footprint.dds":
                    return TreadTreadMarks.UnitsInu0001Inu0001FootprintDds;
                case "CommanderPrint_albedo":
                    return TreadTreadMarks.CommanderPrintAlbedo;
                case "collosus_tread_01":
                    return TreadTreadMarks.CollosusTread01;
                case "collosus_tread_02":
                    return TreadTreadMarks.CollosusTread02;
            }
            throw new Exception("Cannot unmarshal type TreadTreadMarks");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (TreadTreadMarks)untypedValue;
            switch (value)
            {
                case TreadTreadMarks.UnitsInu0001Inu0001FootprintDds:
                    serializer.Serialize(writer, "/units/INU0001/INU0001_footprint.dds");
                    return;
                case TreadTreadMarks.CommanderPrintAlbedo:
                    serializer.Serialize(writer, "CommanderPrint_albedo");
                    return;
                case TreadTreadMarks.CollosusTread01:
                    serializer.Serialize(writer, "collosus_tread_01");
                    return;
                case TreadTreadMarks.CollosusTread02:
                    serializer.Serialize(writer, "collosus_tread_02");
                    return;
            }
            throw new Exception("Cannot marshal type TreadTreadMarks");
        }

        public static readonly TreadTreadMarksConverter Singleton = new TreadTreadMarksConverter();
    }

    internal class Property118TypeConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Property118Type) || t == typeof(Property118Type?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            if (value == "FootFall01")
            {
                return Property118Type.FootFall01;
            }
            throw new Exception("Cannot unmarshal type Property118Type");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Property118Type)untypedValue;
            if (value == Property118Type.FootFall01)
            {
                serializer.Serialize(writer, "FootFall01");
                return;
            }
            throw new Exception("Cannot marshal type Property118Type");
        }

        public static readonly Property118TypeConverter Singleton = new Property118TypeConverter();
    }

    internal class Property209TypeConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Property209Type) || t == typeof(Property209Type?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            if (value == "FootFall02")
            {
                return Property209Type.FootFall02;
            }
            throw new Exception("Cannot unmarshal type Property209Type");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Property209Type)untypedValue;
            if (value == Property209Type.FootFall02)
            {
                serializer.Serialize(writer, "FootFall02");
                return;
            }
            throw new Exception("Cannot marshal type Property209Type");
        }

        public static readonly Property209TypeConverter Singleton = new Property209TypeConverter();
    }

    internal class Property100TreadMarksConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Property100TreadMarks) || t == typeof(Property100TreadMarks?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "tank_treads002_albedo":
                    return Property100TreadMarks.TankTreads002Albedo;
                case "tank_treads006_albedo":
                    return Property100TreadMarks.TankTreads006Albedo;
                case "tank_treads03_albedo":
                    return Property100TreadMarks.TankTreads03Albedo;
                case "tank_treads06_albedo":
                    return Property100TreadMarks.TankTreads06Albedo;
                case "tank_treads07_albedo":
                    return Property100TreadMarks.TankTreads07Albedo;
                case "tank_treads_albedo":
                    return Property100TreadMarks.TankTreadsAlbedo;
            }
            throw new Exception("Cannot unmarshal type Property100TreadMarks");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Property100TreadMarks)untypedValue;
            switch (value)
            {
                case Property100TreadMarks.TankTreads002Albedo:
                    serializer.Serialize(writer, "tank_treads002_albedo");
                    return;
                case Property100TreadMarks.TankTreads006Albedo:
                    serializer.Serialize(writer, "tank_treads006_albedo");
                    return;
                case Property100TreadMarks.TankTreads03Albedo:
                    serializer.Serialize(writer, "tank_treads03_albedo");
                    return;
                case Property100TreadMarks.TankTreads06Albedo:
                    serializer.Serialize(writer, "tank_treads06_albedo");
                    return;
                case Property100TreadMarks.TankTreads07Albedo:
                    serializer.Serialize(writer, "tank_treads07_albedo");
                    return;
                case Property100TreadMarks.TankTreadsAlbedo:
                    serializer.Serialize(writer, "tank_treads_albedo");
                    return;
            }
            throw new Exception("Cannot marshal type Property100TreadMarks");
        }

        public static readonly Property100TreadMarksConverter Singleton = new Property100TreadMarksConverter();
    }

    internal class TreadOffsetConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(TreadOffset) || t == typeof(TreadOffset?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.String:
                case JsonToken.Date:
                    var stringValue = serializer.Deserialize<string>(reader);
                    return new TreadOffset { String = stringValue };
                case JsonToken.StartArray:
                    var arrayValue = serializer.Deserialize<List<string>>(reader);
                    return new TreadOffset { StringArray = arrayValue };
            }
            throw new Exception("Cannot unmarshal type TreadOffset");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (TreadOffset)untypedValue;
            if (value.String != null)
            {
                serializer.Serialize(writer, value.String);
                return;
            }
            if (value.StringArray != null)
            {
                serializer.Serialize(writer, value.StringArray);
                return;
            }
            throw new Exception("Cannot marshal type TreadOffset");
        }

        public static readonly TreadOffsetConverter Singleton = new TreadOffsetConverter();
    }

    internal class AlbedoConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Albedo) || t == typeof(Albedo?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "":
                    return Albedo.Empty;
                case "Tarmacs/Tar12x_01_albedo":
                    return Albedo.TarmacsTar12X01_Albedo;
                case "Tarmacs/Tar12x_aeon_01_albedo":
                    return Albedo.TarmacsTar12XAeon01_Albedo;
                case "Tarmacs/Tar12x_cybran_01_albedo":
                    return Albedo.TarmacsTar12XCybran01_Albedo;
                case "Tarmacs/Tar12x_nomads_01_albedo":
                    return Albedo.TarmacsTar12XNomads01_Albedo;
                case "Tarmacs/Tar12x_seraphim_01_albedo":
                    return Albedo.TarmacsTar12XSeraphim01_Albedo;
                case "Tarmacs/Tar6x_01_albedo":
                    return Albedo.TarmacsTar6X01_Albedo;
                case "Tarmacs/Tar6x_aeon_01_albedo":
                    return Albedo.TarmacsTar6XAeon01_Albedo;
                case "Tarmacs/Tar6x_cybran_01_albedo":
                    return Albedo.TarmacsTar6XCybran01_Albedo;
                case "Tarmacs/Tar6x_nomads_01_albedo":
                    return Albedo.TarmacsTar6XNomads01_Albedo;
                case "Tarmacs/Tar6x_seraphim_01_albedo":
                    return Albedo.TarmacsTar6XSeraphim01_Albedo;
                case "Tarmacs/Tar8x_01_albedo":
                    return Albedo.TarmacsTar8X01_Albedo;
                case "Tarmacs/Tar8x_aeon_01_albedo":
                    return Albedo.TarmacsTar8XAeon01_Albedo;
                case "Tarmacs/Tar8x_cybran_01_albedo":
                    return Albedo.TarmacsTar8XCybran01_Albedo;
                case "Tarmacs/Tar8x_nomads_01_albedo":
                    return Albedo.TarmacsTar8XNomads01_Albedo;
                case "Tarmacs/Tar8x_seraphim_01_albedo":
                    return Albedo.TarmacsTar8XSeraphim01_Albedo;
            }
            throw new Exception("Cannot unmarshal type Albedo");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Albedo)untypedValue;
            switch (value)
            {
                case Albedo.Empty:
                    serializer.Serialize(writer, "");
                    return;
                case Albedo.TarmacsTar12X01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar12x_01_albedo");
                    return;
                case Albedo.TarmacsTar12XAeon01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar12x_aeon_01_albedo");
                    return;
                case Albedo.TarmacsTar12XCybran01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar12x_cybran_01_albedo");
                    return;
                case Albedo.TarmacsTar12XNomads01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar12x_nomads_01_albedo");
                    return;
                case Albedo.TarmacsTar12XSeraphim01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar12x_seraphim_01_albedo");
                    return;
                case Albedo.TarmacsTar6X01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar6x_01_albedo");
                    return;
                case Albedo.TarmacsTar6XAeon01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar6x_aeon_01_albedo");
                    return;
                case Albedo.TarmacsTar6XCybran01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar6x_cybran_01_albedo");
                    return;
                case Albedo.TarmacsTar6XNomads01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar6x_nomads_01_albedo");
                    return;
                case Albedo.TarmacsTar6XSeraphim01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar6x_seraphim_01_albedo");
                    return;
                case Albedo.TarmacsTar8X01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar8x_01_albedo");
                    return;
                case Albedo.TarmacsTar8XAeon01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar8x_aeon_01_albedo");
                    return;
                case Albedo.TarmacsTar8XCybran01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar8x_cybran_01_albedo");
                    return;
                case Albedo.TarmacsTar8XNomads01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar8x_nomads_01_albedo");
                    return;
                case Albedo.TarmacsTar8XSeraphim01_Albedo:
                    serializer.Serialize(writer, "Tarmacs/Tar8x_seraphim_01_albedo");
                    return;
            }
            throw new Exception("Cannot marshal type Albedo");
        }

        public static readonly AlbedoConverter Singleton = new AlbedoConverter();
    }

    internal class NormalConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Normal) || t == typeof(Normal?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "":
                    return Normal.Empty;
                case "Tarmacs/Tar12x_01_normals":
                    return Normal.TarmacsTar12X01_Normals;
                case "Tarmacs/Tar12x_aeon_01_normals":
                    return Normal.TarmacsTar12XAeon01_Normals;
                case "Tarmacs/Tar12x_cybran_01_normals":
                    return Normal.TarmacsTar12XCybran01_Normals;
                case "Tarmacs/Tar12x_nomads_01_normals":
                    return Normal.TarmacsTar12XNomads01_Normals;
                case "Tarmacs/Tar12x_seraphim_01_normals":
                    return Normal.TarmacsTar12XSeraphim01_Normals;
                case "Tarmacs/Tar6x_01_normals":
                    return Normal.TarmacsTar6X01_Normals;
                case "Tarmacs/Tar6x_aeon_01_normals":
                    return Normal.TarmacsTar6XAeon01_Normals;
                case "Tarmacs/Tar6x_cybran_01_normals":
                    return Normal.TarmacsTar6XCybran01_Normals;
                case "Tarmacs/Tar6x_nomads_01_normals":
                    return Normal.TarmacsTar6XNomads01_Normals;
                case "Tarmacs/Tar6x_seraphim_01_normals":
                    return Normal.TarmacsTar6XSeraphim01_Normals;
                case "Tarmacs/Tar8x_01_normals":
                    return Normal.TarmacsTar8X01_Normals;
                case "Tarmacs/Tar8x_aeon_01_normals":
                    return Normal.TarmacsTar8XAeon01_Normals;
                case "Tarmacs/Tar8x_cybran_01_normals":
                    return Normal.TarmacsTar8XCybran01_Normals;
                case "Tarmacs/Tar8x_nomads_01_normals":
                    return Normal.TarmacsTar8XNomads01_Normals;
                case "Tarmacs/Tar8x_seraphim_01_normals":
                    return Normal.TarmacsTar8XSeraphim01_Normals;
            }
            throw new Exception("Cannot unmarshal type Normal");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Normal)untypedValue;
            switch (value)
            {
                case Normal.Empty:
                    serializer.Serialize(writer, "");
                    return;
                case Normal.TarmacsTar12X01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar12x_01_normals");
                    return;
                case Normal.TarmacsTar12XAeon01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar12x_aeon_01_normals");
                    return;
                case Normal.TarmacsTar12XCybran01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar12x_cybran_01_normals");
                    return;
                case Normal.TarmacsTar12XNomads01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar12x_nomads_01_normals");
                    return;
                case Normal.TarmacsTar12XSeraphim01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar12x_seraphim_01_normals");
                    return;
                case Normal.TarmacsTar6X01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar6x_01_normals");
                    return;
                case Normal.TarmacsTar6XAeon01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar6x_aeon_01_normals");
                    return;
                case Normal.TarmacsTar6XCybran01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar6x_cybran_01_normals");
                    return;
                case Normal.TarmacsTar6XNomads01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar6x_nomads_01_normals");
                    return;
                case Normal.TarmacsTar6XSeraphim01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar6x_seraphim_01_normals");
                    return;
                case Normal.TarmacsTar8X01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar8x_01_normals");
                    return;
                case Normal.TarmacsTar8XAeon01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar8x_aeon_01_normals");
                    return;
                case Normal.TarmacsTar8XCybran01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar8x_cybran_01_normals");
                    return;
                case Normal.TarmacsTar8XNomads01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar8x_nomads_01_normals");
                    return;
                case Normal.TarmacsTar8XSeraphim01_Normals:
                    serializer.Serialize(writer, "Tarmacs/Tar8x_seraphim_01_normals");
                    return;
            }
            throw new Exception("Cannot marshal type Normal");
        }

        public static readonly NormalConverter Singleton = new NormalConverter();
    }

    internal class SortCategoryConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(SortCategory) || t == typeof(SortCategory?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "SORTCONSTRUCTION":
                    return SortCategory.Sortconstruction;
                case "SORTOTHER":
                    return SortCategory.Sortother;
                case "SORTSTRATEGIC":
                    return SortCategory.Sortstrategic;
            }
            throw new Exception("Cannot unmarshal type SortCategory");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (SortCategory)untypedValue;
            switch (value)
            {
                case SortCategory.Sortconstruction:
                    serializer.Serialize(writer, "SORTCONSTRUCTION");
                    return;
                case SortCategory.Sortother:
                    serializer.Serialize(writer, "SORTOTHER");
                    return;
                case SortCategory.Sortstrategic:
                    serializer.Serialize(writer, "SORTSTRATEGIC");
                    return;
            }
            throw new Exception("Cannot marshal type SortCategory");
        }

        public static readonly SortCategoryConverter Singleton = new SortCategoryConverter();
    }

    internal class SlotConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Slot) || t == typeof(Slot?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "Back":
                    return Slot.Back;
                case "LCH":
                    return Slot.Lch;
                case "RCH":
                    return Slot.Rch;
            }
            throw new Exception("Cannot unmarshal type Slot");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Slot)untypedValue;
            switch (value)
            {
                case Slot.Back:
                    serializer.Serialize(writer, "Back");
                    return;
                case Slot.Lch:
                    serializer.Serialize(writer, "LCH");
                    return;
                case Slot.Rch:
                    serializer.Serialize(writer, "RCH");
                    return;
            }
            throw new Exception("Cannot marshal type Slot");
        }

        public static readonly SlotConverter Singleton = new SlotConverter();
    }

    internal class ResourceAllocationIconConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(ResourceAllocationIcon) || t == typeof(ResourceAllocationIcon?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "eras":
                    return ResourceAllocationIcon.Eras;
                case "isb":
                    return ResourceAllocationIcon.Isb;
                case "ras":
                    return ResourceAllocationIcon.Ras;
            }
            throw new Exception("Cannot unmarshal type ResourceAllocationIcon");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (ResourceAllocationIcon)untypedValue;
            switch (value)
            {
                case ResourceAllocationIcon.Eras:
                    serializer.Serialize(writer, "eras");
                    return;
                case ResourceAllocationIcon.Isb:
                    serializer.Serialize(writer, "isb");
                    return;
                case ResourceAllocationIcon.Ras:
                    serializer.Serialize(writer, "ras");
                    return;
            }
            throw new Exception("Cannot marshal type ResourceAllocationIcon");
        }

        public static readonly ResourceAllocationIconConverter Singleton = new ResourceAllocationIconConverter();
    }

    internal class NameConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Name) || t == typeof(Name?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "<LOC _Back>":
                    return Name.LocBack;
                case "<LOC _LCH>":
                    return Name.LocLch;
                case "<LOC _RCH>":
                    return Name.LocRch;
            }
            throw new Exception("Cannot unmarshal type Name");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Name)untypedValue;
            switch (value)
            {
                case Name.LocBack:
                    serializer.Serialize(writer, "<LOC _Back>");
                    return;
                case Name.LocLch:
                    serializer.Serialize(writer, "<LOC _LCH>");
                    return;
                case Name.LocRch:
                    serializer.Serialize(writer, "<LOC _RCH>");
                    return;
            }
            throw new Exception("Cannot marshal type Name");
        }

        public static readonly NameConverter Singleton = new NameConverter();
    }

    internal class CategoryConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Category) || t == typeof(Category?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "Anti Air":
                    return Category.AntiAir;
                case "Anti Navy":
                    return Category.AntiNavy;
                case "Bomber":
                    return Category.Bomber;
                case "Civilian":
                    return Category.Civilian;
                case "Civilian Truck":
                    return Category.CivilianTruck;
                case "Command":
                    return Category.Command;
                case "Construction":
                    return Category.Construction;
                case "Death":
                    return Category.Death;
                case "Defense":
                    return Category.Defense;
                case "Direct Fire":
                    return Category.DirectFire;
                case "Economy":
                    return Category.Economy;
                case "Experimental":
                    return Category.Experimental;
                case "Factory":
                    return Category.Factory;
                case "Fighter":
                    return Category.Fighter;
                case "Gunship":
                    return Category.Gunship;
                case "Indirect Fire":
                    return Category.IndirectFire;
                case "Intelligence":
                    return Category.Intelligence;
                case "Research Truck":
                    return Category.ResearchTruck;
                case "Ship":
                    return Category.Ship;
                case "Strategic":
                    return Category.Strategic;
                case "Submarine":
                    return Category.Submarine;
                case "Transport":
                    return Category.Transport;
                case "Utility":
                    return Category.Utility;
            }
            throw new Exception("Cannot unmarshal type Category");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Category)untypedValue;
            switch (value)
            {
                case Category.AntiAir:
                    serializer.Serialize(writer, "Anti Air");
                    return;
                case Category.AntiNavy:
                    serializer.Serialize(writer, "Anti Navy");
                    return;
                case Category.Bomber:
                    serializer.Serialize(writer, "Bomber");
                    return;
                case Category.Civilian:
                    serializer.Serialize(writer, "Civilian");
                    return;
                case Category.CivilianTruck:
                    serializer.Serialize(writer, "Civilian Truck");
                    return;
                case Category.Command:
                    serializer.Serialize(writer, "Command");
                    return;
                case Category.Construction:
                    serializer.Serialize(writer, "Construction");
                    return;
                case Category.Death:
                    serializer.Serialize(writer, "Death");
                    return;
                case Category.Defense:
                    serializer.Serialize(writer, "Defense");
                    return;
                case Category.DirectFire:
                    serializer.Serialize(writer, "Direct Fire");
                    return;
                case Category.Economy:
                    serializer.Serialize(writer, "Economy");
                    return;
                case Category.Experimental:
                    serializer.Serialize(writer, "Experimental");
                    return;
                case Category.Factory:
                    serializer.Serialize(writer, "Factory");
                    return;
                case Category.Fighter:
                    serializer.Serialize(writer, "Fighter");
                    return;
                case Category.Gunship:
                    serializer.Serialize(writer, "Gunship");
                    return;
                case Category.IndirectFire:
                    serializer.Serialize(writer, "Indirect Fire");
                    return;
                case Category.Intelligence:
                    serializer.Serialize(writer, "Intelligence");
                    return;
                case Category.ResearchTruck:
                    serializer.Serialize(writer, "Research Truck");
                    return;
                case Category.Ship:
                    serializer.Serialize(writer, "Ship");
                    return;
                case Category.Strategic:
                    serializer.Serialize(writer, "Strategic");
                    return;
                case Category.Submarine:
                    serializer.Serialize(writer, "Submarine");
                    return;
                case Category.Transport:
                    serializer.Serialize(writer, "Transport");
                    return;
                case Category.Utility:
                    serializer.Serialize(writer, "Utility");
                    return;
            }
            throw new Exception("Cannot marshal type Category");
        }

        public static readonly CategoryConverter Singleton = new CategoryConverter();
    }

    internal class ClassificationConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Classification) || t == typeof(Classification?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "RULEUC_Commander":
                    return Classification.RuleucCommander;
                case "RULEUC_CounterMeasure":
                    return Classification.RuleucCounterMeasure;
                case "RULEUC_Engineer":
                    return Classification.RuleucEngineer;
                case "RULEUC_Factory":
                    return Classification.RuleucFactory;
                case "RULEUC_MilitaryAircraft":
                    return Classification.RuleucMilitaryAircraft;
                case "RULEUC_MilitaryShip":
                    return Classification.RuleucMilitaryShip;
                case "RULEUC_MilitarySub":
                    return Classification.RuleucMilitarySub;
                case "RULEUC_MilitaryVehicle":
                    return Classification.RuleucMilitaryVehicle;
                case "RULEUC_MiscSupport":
                    return Classification.RuleucMiscSupport;
                case "RULEUC_Resource":
                    return Classification.RuleucResource;
                case "RULEUC_Sensor":
                    return Classification.RuleucSensor;
                case "RULEUC_Weapon":
                    return Classification.RuleucWeapon;
                case "RULEUMT_Amphibious":
                    return Classification.RuleumtAmphibious;
            }
            throw new Exception("Cannot unmarshal type Classification");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Classification)untypedValue;
            switch (value)
            {
                case Classification.RuleucCommander:
                    serializer.Serialize(writer, "RULEUC_Commander");
                    return;
                case Classification.RuleucCounterMeasure:
                    serializer.Serialize(writer, "RULEUC_CounterMeasure");
                    return;
                case Classification.RuleucEngineer:
                    serializer.Serialize(writer, "RULEUC_Engineer");
                    return;
                case Classification.RuleucFactory:
                    serializer.Serialize(writer, "RULEUC_Factory");
                    return;
                case Classification.RuleucMilitaryAircraft:
                    serializer.Serialize(writer, "RULEUC_MilitaryAircraft");
                    return;
                case Classification.RuleucMilitaryShip:
                    serializer.Serialize(writer, "RULEUC_MilitaryShip");
                    return;
                case Classification.RuleucMilitarySub:
                    serializer.Serialize(writer, "RULEUC_MilitarySub");
                    return;
                case Classification.RuleucMilitaryVehicle:
                    serializer.Serialize(writer, "RULEUC_MilitaryVehicle");
                    return;
                case Classification.RuleucMiscSupport:
                    serializer.Serialize(writer, "RULEUC_MiscSupport");
                    return;
                case Classification.RuleucResource:
                    serializer.Serialize(writer, "RULEUC_Resource");
                    return;
                case Classification.RuleucSensor:
                    serializer.Serialize(writer, "RULEUC_Sensor");
                    return;
                case Classification.RuleucWeapon:
                    serializer.Serialize(writer, "RULEUC_Weapon");
                    return;
                case Classification.RuleumtAmphibious:
                    serializer.Serialize(writer, "RULEUMT_Amphibious");
                    return;
            }
            throw new Exception("Cannot marshal type Classification");
        }

        public static readonly ClassificationConverter Singleton = new ClassificationConverter();
    }

    internal class FactionNameConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(FactionName) || t == typeof(FactionName?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "AEON":
                    return FactionName.FactionNameAeon;
                case "Aeon":
                    return FactionName.Aeon;
                case "Cybran":
                    return FactionName.Cybran;
                case "Nomads":
                    return FactionName.Nomads;
                case "Seraphim":
                    return FactionName.Seraphim;
                case "UEF":
                    return FactionName.Uef;
            }
            throw new Exception("Cannot unmarshal type FactionName");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (FactionName)untypedValue;
            switch (value)
            {
                case FactionName.FactionNameAeon:
                    serializer.Serialize(writer, "AEON");
                    return;
                case FactionName.Aeon:
                    serializer.Serialize(writer, "Aeon");
                    return;
                case FactionName.Cybran:
                    serializer.Serialize(writer, "Cybran");
                    return;
                case FactionName.Nomads:
                    serializer.Serialize(writer, "Nomads");
                    return;
                case FactionName.Seraphim:
                    serializer.Serialize(writer, "Seraphim");
                    return;
                case FactionName.Uef:
                    serializer.Serialize(writer, "UEF");
                    return;
            }
            throw new Exception("Cannot marshal type FactionName");
        }

        public static readonly FactionNameConverter Singleton = new FactionNameConverter();
    }

    internal class GeneralIconConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(GeneralIcon) || t == typeof(GeneralIcon?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "air":
                    return GeneralIcon.Air;
                case "amph":
                    return GeneralIcon.Amph;
                case "land":
                    return GeneralIcon.Land;
                case "sea":
                    return GeneralIcon.Sea;
            }
            throw new Exception("Cannot unmarshal type GeneralIcon");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (GeneralIcon)untypedValue;
            switch (value)
            {
                case GeneralIcon.Air:
                    serializer.Serialize(writer, "air");
                    return;
                case GeneralIcon.Amph:
                    serializer.Serialize(writer, "amph");
                    return;
                case GeneralIcon.Land:
                    serializer.Serialize(writer, "land");
                    return;
                case GeneralIcon.Sea:
                    serializer.Serialize(writer, "sea");
                    return;
            }
            throw new Exception("Cannot marshal type GeneralIcon");
        }

        public static readonly GeneralIconConverter Singleton = new GeneralIconConverter();
    }

    internal class TechLevelConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(TechLevel) || t == typeof(TechLevel?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "RULEUTL_Advanced":
                    return TechLevel.RuleutlAdvanced;
                case "RULEUTL_Basic":
                    return TechLevel.RuleutlBasic;
                case "RULEUTL_Experimental":
                    return TechLevel.RuleutlExperimental;
                case "RULEUTL_Secret":
                    return TechLevel.RuleutlSecret;
            }
            throw new Exception("Cannot unmarshal type TechLevel");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (TechLevel)untypedValue;
            switch (value)
            {
                case TechLevel.RuleutlAdvanced:
                    serializer.Serialize(writer, "RULEUTL_Advanced");
                    return;
                case TechLevel.RuleutlBasic:
                    serializer.Serialize(writer, "RULEUTL_Basic");
                    return;
                case TechLevel.RuleutlExperimental:
                    serializer.Serialize(writer, "RULEUTL_Experimental");
                    return;
                case TechLevel.RuleutlSecret:
                    serializer.Serialize(writer, "RULEUTL_Secret");
                    return;
            }
            throw new Exception("Cannot marshal type TechLevel");
        }

        public static readonly TechLevelConverter Singleton = new TechLevelConverter();
    }

    internal class MotionTypeConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(MotionType) || t == typeof(MotionType?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "RULEUMT_Air":
                    return MotionType.RuleumtAir;
                case "RULEUMT_Amphibious":
                    return MotionType.RuleumtAmphibious;
                case "RULEUMT_AmphibiousFloating":
                    return MotionType.RuleumtAmphibiousFloating;
                case "RULEUMT_Hover":
                    return MotionType.RuleumtHover;
                case "RULEUMT_Land":
                    return MotionType.RuleumtLand;
                case "RULEUMT_None":
                    return MotionType.RuleumtNone;
                case "RULEUMT_SurfacingSub":
                    return MotionType.RuleumtSurfacingSub;
                case "RULEUMT_Water":
                    return MotionType.RuleumtWater;
            }
            throw new Exception("Cannot unmarshal type MotionType");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (MotionType)untypedValue;
            switch (value)
            {
                case MotionType.RuleumtAir:
                    serializer.Serialize(writer, "RULEUMT_Air");
                    return;
                case MotionType.RuleumtAmphibious:
                    serializer.Serialize(writer, "RULEUMT_Amphibious");
                    return;
                case MotionType.RuleumtAmphibiousFloating:
                    serializer.Serialize(writer, "RULEUMT_AmphibiousFloating");
                    return;
                case MotionType.RuleumtHover:
                    serializer.Serialize(writer, "RULEUMT_Hover");
                    return;
                case MotionType.RuleumtLand:
                    serializer.Serialize(writer, "RULEUMT_Land");
                    return;
                case MotionType.RuleumtNone:
                    serializer.Serialize(writer, "RULEUMT_None");
                    return;
                case MotionType.RuleumtSurfacingSub:
                    serializer.Serialize(writer, "RULEUMT_SurfacingSub");
                    return;
                case MotionType.RuleumtWater:
                    serializer.Serialize(writer, "RULEUMT_Water");
                    return;
            }
            throw new Exception("Cannot marshal type MotionType");
        }

        public static readonly MotionTypeConverter Singleton = new MotionTypeConverter();
    }

    internal class BuildRestrictionConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(BuildRestriction) || t == typeof(BuildRestriction?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "RULEUBR_OnHydrocarbonDeposit":
                    return BuildRestriction.RuleubrOnHydrocarbonDeposit;
                case "RULEUBR_OnMassDeposit":
                    return BuildRestriction.RuleubrOnMassDeposit;
            }
            throw new Exception("Cannot unmarshal type BuildRestriction");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (BuildRestriction)untypedValue;
            switch (value)
            {
                case BuildRestriction.RuleubrOnHydrocarbonDeposit:
                    serializer.Serialize(writer, "RULEUBR_OnHydrocarbonDeposit");
                    return;
                case BuildRestriction.RuleubrOnMassDeposit:
                    serializer.Serialize(writer, "RULEUBR_OnMassDeposit");
                    return;
            }
            throw new Exception("Cannot marshal type BuildRestriction");
        }

        public static readonly BuildRestrictionConverter Singleton = new BuildRestrictionConverter();
    }

    internal class AirConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Air) || t == typeof(Air?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "Air":
                    return Air.Air;
                case "Air|Land":
                    return Air.AirLand;
                case "Air|Land|Seabed|Water":
                    return Air.AirLandSeabedWater;
                case "Air|Land|Water":
                    return Air.AirLandWater;
                case "Air|Land|Water|Seabed":
                    return Air.AirLandWaterSeabed;
                case "Land":
                    return Air.Land;
                case "Land|Seabed|Water":
                    return Air.LandSeabedWater;
                case "Land|Water":
                    return Air.LandWater;
                case "Land|Water|Seabed":
                    return Air.LandWaterSeabed;
                case "Seabed|Sub|Water":
                    return Air.SeabedSubWater;
                case "Sub|Water|Seabed":
                    return Air.SubWaterSeabed;
                case "Sub|Water|Seabed|Land":
                    return Air.SubWaterSeabedLand;
                case "Water":
                    return Air.Water;
                case "Water|Seabed|Sub":
                    return Air.WaterSeabedSub;
            }
            throw new Exception("Cannot unmarshal type Air");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Air)untypedValue;
            switch (value)
            {
                case Air.Air:
                    serializer.Serialize(writer, "Air");
                    return;
                case Air.AirLand:
                    serializer.Serialize(writer, "Air|Land");
                    return;
                case Air.AirLandSeabedWater:
                    serializer.Serialize(writer, "Air|Land|Seabed|Water");
                    return;
                case Air.AirLandWater:
                    serializer.Serialize(writer, "Air|Land|Water");
                    return;
                case Air.AirLandWaterSeabed:
                    serializer.Serialize(writer, "Air|Land|Water|Seabed");
                    return;
                case Air.Land:
                    serializer.Serialize(writer, "Land");
                    return;
                case Air.LandSeabedWater:
                    serializer.Serialize(writer, "Land|Seabed|Water");
                    return;
                case Air.LandWater:
                    serializer.Serialize(writer, "Land|Water");
                    return;
                case Air.LandWaterSeabed:
                    serializer.Serialize(writer, "Land|Water|Seabed");
                    return;
                case Air.SeabedSubWater:
                    serializer.Serialize(writer, "Seabed|Sub|Water");
                    return;
                case Air.SubWaterSeabed:
                    serializer.Serialize(writer, "Sub|Water|Seabed");
                    return;
                case Air.SubWaterSeabedLand:
                    serializer.Serialize(writer, "Sub|Water|Seabed|Land");
                    return;
                case Air.Water:
                    serializer.Serialize(writer, "Water");
                    return;
                case Air.WaterSeabedSub:
                    serializer.Serialize(writer, "Water|Seabed|Sub");
                    return;
            }
            throw new Exception("Cannot marshal type Air");
        }

        public static readonly AirConverter Singleton = new AirConverter();
    }

    internal class TargetDisallowConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(TargetDisallow) || t == typeof(TargetDisallow?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "EXPERIMENTAL, COMMAND":
                    return TargetDisallow.ExperimentalCommand;
                case "UNSTUNABLE,EXPERIMENTAL,COMMAND,SHIELD,WALL":
                    return TargetDisallow.UnstunableExperimentalCommandShieldWall;
                case "UNSTUNABLE,EXPERIMENTAL,COMMAND,WALL":
                    return TargetDisallow.UnstunableExperimentalCommandWall;
                case "UNSTUNABLE,TECH1,EXPERIMENTAL,COMMAND,SHIELD,WALL":
                    return TargetDisallow.UnstunableTech1ExperimentalCommandShieldWall;
            }
            throw new Exception("Cannot unmarshal type TargetDisallow");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (TargetDisallow)untypedValue;
            switch (value)
            {
                case TargetDisallow.ExperimentalCommand:
                    serializer.Serialize(writer, "EXPERIMENTAL, COMMAND");
                    return;
                case TargetDisallow.UnstunableExperimentalCommandShieldWall:
                    serializer.Serialize(writer, "UNSTUNABLE,EXPERIMENTAL,COMMAND,SHIELD,WALL");
                    return;
                case TargetDisallow.UnstunableExperimentalCommandWall:
                    serializer.Serialize(writer, "UNSTUNABLE,EXPERIMENTAL,COMMAND,WALL");
                    return;
                case TargetDisallow.UnstunableTech1ExperimentalCommandShieldWall:
                    serializer.Serialize(writer, "UNSTUNABLE,TECH1,EXPERIMENTAL,COMMAND,SHIELD,WALL");
                    return;
            }
            throw new Exception("Cannot marshal type TargetDisallow");
        }

        public static readonly TargetDisallowConverter Singleton = new TargetDisallowConverter();
    }

    internal class WeaponCategoryConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(WeaponCategory) || t == typeof(WeaponCategory?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "Death":
                    return WeaponCategory.Death;
                case "Teleport":
                    return WeaponCategory.Teleport;
            }
            throw new Exception("Cannot unmarshal type WeaponCategory");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (WeaponCategory)untypedValue;
            switch (value)
            {
                case WeaponCategory.Death:
                    serializer.Serialize(writer, "Death");
                    return;
                case WeaponCategory.Teleport:
                    serializer.Serialize(writer, "Teleport");
                    return;
            }
            throw new Exception("Cannot marshal type WeaponCategory");
        }

        public static readonly WeaponCategoryConverter Singleton = new WeaponCategoryConverter();
    }

    internal class MassMultConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(MassMult) || t == typeof(MassMult?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case ".45":
                    return MassMult.The45;
                case "0.45":
                    return MassMult.The045;
                case "0.9":
                    return MassMult.The09;
            }
            throw new Exception("Cannot unmarshal type MassMult");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (MassMult)untypedValue;
            switch (value)
            {
                case MassMult.The45:
                    serializer.Serialize(writer, ".45");
                    return;
                case MassMult.The045:
                    serializer.Serialize(writer, "0.45");
                    return;
                case MassMult.The09:
                    serializer.Serialize(writer, "0.9");
                    return;
            }
            throw new Exception("Cannot marshal type MassMult");
        }

        public static readonly MassMultConverter Singleton = new MassMultConverter();
    }

    internal class RateOfFireConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(RateOfFire) || t == typeof(RateOfFire?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.String:
                case JsonToken.Date:
                    var stringValue = serializer.Deserialize<string>(reader);
                    switch (stringValue)
                    {
                        case ".45":
                            return new RateOfFire { Enum = MassMult.The45 };
                        case "0.45":
                            return new RateOfFire { Enum = MassMult.The045 };
                        case "0.9":
                            return new RateOfFire { Enum = MassMult.The09 };
                    }
                    long l;
                    if (Int64.TryParse(stringValue, out l))
                    {
                        return new RateOfFire { Integer = l };
                    }
                    break;
            }
            throw new Exception("Cannot unmarshal type RateOfFire");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (RateOfFire)untypedValue;
            if (value.Enum != null)
            {
                switch (value.Enum)
                {
                    case MassMult.The45:
                        serializer.Serialize(writer, ".45");
                        return;
                    case MassMult.The045:
                        serializer.Serialize(writer, "0.45");
                        return;
                    case MassMult.The09:
                        serializer.Serialize(writer, "0.9");
                        return;
                }
            }
            if (value.Integer != null)
            {
                serializer.Serialize(writer, value.Integer.Value.ToString());
                return;
            }
            throw new Exception("Cannot marshal type RateOfFire");
        }

        public static readonly RateOfFireConverter Singleton = new RateOfFireConverter();
    }

    internal class SubConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Sub) || t == typeof(Sub?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "Land|Water|Seabed":
                    return Sub.LandWaterSeabed;
                case "Seabed|Sub":
                    return Sub.SeabedSub;
                case "Seabed|Sub|Water":
                    return Sub.SeabedSubWater;
                case "Sub|Water":
                    return Sub.SubWater;
            }
            throw new Exception("Cannot unmarshal type Sub");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Sub)untypedValue;
            switch (value)
            {
                case Sub.LandWaterSeabed:
                    serializer.Serialize(writer, "Land|Water|Seabed");
                    return;
                case Sub.SeabedSub:
                    serializer.Serialize(writer, "Seabed|Sub");
                    return;
                case Sub.SeabedSubWater:
                    serializer.Serialize(writer, "Seabed|Sub|Water");
                    return;
                case Sub.SubWater:
                    serializer.Serialize(writer, "Sub|Water");
                    return;
            }
            throw new Exception("Cannot marshal type Sub");
        }

        public static readonly SubConverter Singleton = new SubConverter();
    }

    internal class BlueprintConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Blueprint) || t == typeof(Blueprint?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "/env/Wreckage/props/Walls/UEB5101_prop.bp":
                    return Blueprint.EnvWreckagePropsWallsUeb5101PropBp;
                case "/props/DefaultWreckage/DefaultWreckage_prop.bp":
                    return Blueprint.PropsDefaultWreckageDefaultWreckagePropBp;
            }
            throw new Exception("Cannot unmarshal type Blueprint");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Blueprint)untypedValue;
            switch (value)
            {
                case Blueprint.EnvWreckagePropsWallsUeb5101PropBp:
                    serializer.Serialize(writer, "/env/Wreckage/props/Walls/UEB5101_prop.bp");
                    return;
                case Blueprint.PropsDefaultWreckageDefaultWreckagePropBp:
                    serializer.Serialize(writer, "/props/DefaultWreckage/DefaultWreckage_prop.bp");
                    return;
            }
            throw new Exception("Cannot marshal type Blueprint");
        }

        public static readonly BlueprintConverter Singleton = new BlueprintConverter();
    }
}
